"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[37955],{47811:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"2600-2699/sum-of-distances-medium","title":"2615 - Sum of Distances (Medium)","description":"Author: @wingkwong | https://leetcode.com/problems/sum-of-distances/","source":"@site/solutions/2600-2699/2615-sum-of-distances-medium.md","sourceDirName":"2600-2699","slug":"/2600-2699/sum-of-distances-medium","permalink":"/solutions/2600-2699/sum-of-distances-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2600-2699/2615-sum-of-distances-medium.md","tags":[],"version":"current","sidebarPosition":2615,"frontMatter":{"description":"Author: @wingkwong | https://leetcode.com/problems/sum-of-distances/"},"sidebar":"tutorialSidebar","previous":{"title":"2614 - Prime In Diagonal (Easy)","permalink":"/solutions/2600-2699/prime-in-diagonal-easy"},"next":{"title":"2616 - Minimize the Maximum Difference of Pairs (Medium)","permalink":"/solutions/2600-2699/minimize-the-maximum-difference-of-pairs-medium"}}');var s=i(74848),t=i(28453);const o={description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-distances/"},c="2615 - Sum of Distances (Medium)",l={},a=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Prefix Sum",id:"approach-1-prefix-sum",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{SolutionAuthor:i,TabItem:r,Tabs:o}=n;return i||m("SolutionAuthor",!0),r||m("TabItem",!0),o||m("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"2615---sum-of-distances-medium",children:"2615 - Sum of Distances (Medium)"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/sum-of-distances/",children:"https://leetcode.com/problems/sum-of-distances/"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(n.p,{children:["You are given a ",(0,s.jsx)(n.strong,{children:"0-indexed"})," integer array ",(0,s.jsx)(n.code,{children:"nums"}),". There exists an array ",(0,s.jsx)(n.code,{children:"arr"})," of length ",(0,s.jsx)(n.code,{children:"nums.length"}),", where ",(0,s.jsx)(n.code,{children:"arr[i]"})," is the sum of ",(0,s.jsx)(n.code,{children:"|i - j|"})," over all ",(0,s.jsx)(n.code,{children:"j"})," such that ",(0,s.jsx)(n.code,{children:"nums[j] == nums[i]"})," and ",(0,s.jsx)(n.code,{children:"j != i"}),". If there is no such ",(0,s.jsx)(n.code,{children:"j"}),", set ",(0,s.jsx)(n.code,{children:"arr[i]"})," to be ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Return ",(0,s.jsx)(n.em,{children:"the array"}),(0,s.jsx)(n.code,{children:"arr"}),(0,s.jsx)(n.em,{children:"."})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums = [1,3,1,1,2]\nOutput: [5,0,3,4,0]\nExplanation: \nWhen i = 0, nums[0] == nums[2] and nums[0] == nums[3]. Therefore, arr[0] = |0 - 2| + |0 - 3| = 5. \nWhen i = 1, arr[1] = 0 because there is no other index with value 3.\nWhen i = 2, nums[2] == nums[0] and nums[2] == nums[3]. Therefore, arr[2] = |2 - 0| + |2 - 3| = 3. \nWhen i = 3, nums[3] == nums[0] and nums[3] == nums[2]. Therefore, arr[3] = |3 - 0| + |3 - 2| = 4. \nWhen i = 4, arr[4] = 0 because there is no other index with value 2.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums = [0,5,3]\nOutput: [0,0,0]\nExplanation: Since each element in nums is distinct, arr[i] = 0 for all i.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"1 <= nums.length <= 10^5"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"0 <= nums[i] <= 10^9"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"approach-1-prefix-sum",children:"Approach 1: Prefix Sum"}),"\n",(0,s.jsx)(o,{children:(0,s.jsxs)(r,{value:"cpp",label:"C++",children:[(0,s.jsx)(i,{name:"@wingkwong"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<long long> distance(vector<int>& nums) {\n        unordered_map<int, vector<int>> m;\n        vector<long long> ans(nums.size());\n        int n = nums.size();\n        // for each number x, collect all the indices where x occurs\n        for (int i = 0; i < n; i++) m[nums[i]].push_back(i);\n        for (auto x : m) {\n            // calcualte the prefix sum of the array\n            vector<int> v = x.second;\n            int n = v.size();\n            vector<long long> pre(n + 1);\n            for (int i = 0; i < n; i++) pre[i + 1] = pre[i] + v[i];\n            // for each occurrence of x, \n            // the indices to the right will be regular subtraction \n            // while the indices to the left will be reversed subtraction.\n            for (int i = 0; i < n; i++) {\n                long long k = v[i];\n                ans[k] = (k * (i + 1) - pre[i + 1]) + \n                            (pre[n] - pre[i] - k * (n - i));\n            }\n        }\n        return ans;\n    }\n};\n"})})]})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var r=i(96540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);