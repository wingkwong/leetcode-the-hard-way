"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[50039],{7315:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"1200-1299/maximum-length-of-a-concatenated-string-with-unique-characters-medium","title":"1239 - Maximum Length of a Concatenated String with Unique Characters (Medium)","description":"Author: @heder | https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/","source":"@site/solutions/1200-1299/1239-maximum-length-of-a-concatenated-string-with-unique-characters-medium.md","sourceDirName":"1200-1299","slug":"/1200-1299/maximum-length-of-a-concatenated-string-with-unique-characters-medium","permalink":"/solutions/1200-1299/maximum-length-of-a-concatenated-string-with-unique-characters-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1200-1299/1239-maximum-length-of-a-concatenated-string-with-unique-characters-medium.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"String","permalink":"/solutions/tags/string"},{"inline":true,"label":"Backtracking","permalink":"/solutions/tags/backtracking"},{"inline":true,"label":"Bit Manipulation","permalink":"/solutions/tags/bit-manipulation"}],"version":"current","sidebarPosition":1239,"frontMatter":{"description":"Author: @heder | https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/","tags":["Array","String","Backtracking","Bit Manipulation"]},"sidebar":"tutorialSidebar","previous":{"title":"1235 - Maximum Profit in Job Scheduling (Hard)","permalink":"/solutions/1200-1299/maximum-profit-in-job-scheduling-hard"},"next":{"title":"1259 - Handshakes That Don\'t Cross (Hard)","permalink":"/solutions/1200-1299/handshakes-that-dont-cross-hard"}}');var i=n(74848),t=n(28453);const r={description:"Author: @heder | https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",tags:["Array","String","Backtracking","Bit Manipulation"]},l="1239 - Maximum Length of a Concatenated String with Unique Characters (Medium)",c={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Bitmasking and generating valid subsets (0ms)",id:"approach-1-bitmasking-and-generating-valid-subsets-0ms",level:2}];function h(s){const e={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,t.R)(),...s.components},{SolutionAuthor:n,TabItem:a,Tabs:r}=e;return n||d("SolutionAuthor",!0),a||d("TabItem",!0),r||d("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"1239---maximum-length-of-a-concatenated-string-with-unique-characters-medium",children:"1239 - Maximum Length of a Concatenated String with Unique Characters (Medium)"})}),"\n",(0,i.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",children:"https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/"})}),"\n",(0,i.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(e.p,{children:["You are given an array of strings ",(0,i.jsx)(e.code,{children:"arr"}),". A string ",(0,i.jsx)(e.code,{children:"s"})," is formed by the ",(0,i.jsx)(e.strong,{children:"concatenation"})," of a ",(0,i.jsx)(e.strong,{children:"subsequence"})," of ",(0,i.jsx)(e.code,{children:"arr"})," that has ",(0,i.jsx)(e.strong,{children:"unique characters"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["Return ",(0,i.jsxs)(e.em,{children:["the ",(0,i.jsx)(e.strong,{children:"maximum"})," possible length"]})," of ",(0,i.jsx)(e.code,{children:"s"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["A ",(0,i.jsx)(e.strong,{children:"subsequence"})," is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'Input: arr = ["un","iq","ue"]\nOutput: 4\nExplanation: All the valid concatenations are:\n- ""\n- "un"\n- "iq"\n- "ue"\n- "uniq" ("un" + "iq")\n- "ique" ("iq" + "ue")\nMaximum length is 4.\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'Input: arr = ["cha","r","act","ers"]\nOutput: 6\nExplanation: Possible longest valid concatenations are "chaers" ("cha" + "ers") and "acters" ("act" + "ers").\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example 3:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'Input: arr = ["abcdefghijklmnopqrstuvwxyz"]\nOutput: 26\nExplanation: The only string in arr has all 26 characters.\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{children:"<"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"a"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(e.mi,{children:"l"}),(0,i.jsx)(e.mi,{children:"e"}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"g"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{children:"<"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mn,{children:"16"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"1 <= arr.length <= 16"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"<="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(e.span,{className:"mord",children:"."}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"<="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"16"})]})]})]})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{children:"<"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"a"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(e.mi,{children:"l"}),(0,i.jsx)(e.mi,{children:"e"}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"g"}),(0,i.jsx)(e.mi,{children:"t"}),(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{children:"<"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mn,{children:"26"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"1 <= arr[i].length <= 26"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"<="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mord",children:"."}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"<="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"26"})]})]})]})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"a"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"arr[i]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]})," contains only lowercase English letters."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"approach-1-bitmasking-and-generating-valid-subsets-0ms",children:"Approach 1: Bitmasking and generating valid subsets (0ms)"}),"\n",(0,i.jsxs)(e.p,{children:["We are turn the input array into bitmasks. Each character ",(0,i.jsx)(e.code,{children:"'a' ... 'z'"})," gets it's own bit. With that we can quickly check with ",(0,i.jsx)(e.code,{children:"and"})," if there is a conflict and then expand the match with ",(0,i.jsx)(e.code,{children:"or"}),". Once we have bitmasks for each element in ",(0,i.jsx)(e.code,{children:"arr"})," we are expanding the set of possible solutions and then just look for the largest one."]}),"\n",(0,i.jsx)(e.p,{children:"Complexity Analysis:"}),"\n",(0,i.jsxs)(e.p,{children:["If ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"n"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})," is the size of ",(0,i.jsx)(e.code,{children:"arr"})," then the"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Time complexity is ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mn,{children:"2"}),(0,i.jsx)(e.mi,{children:"n"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(2^n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord",children:"2"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.6644em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})," as we potentially creating the full powerset of arr, and the same is true for the"]}),"\n",(0,i.jsxs)(e.li,{children:["Space complexity which is also ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mn,{children:"2"}),(0,i.jsx)(e.mi,{children:"n"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(2^n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord",children:"2"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.6644em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"n"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]}),"."]}),"\n"]}),"\n",(0,i.jsx)(r,{children:(0,i.jsxs)(a,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@heder"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"static int maxLength(const vector<string>& arr) {\n    // Turn |arr| into bitmasks.\n    vector<int> bms;\n    bms.reserve(arr.size());\n    for (const string& a : arr) {\n        const int m = bitmask(a);\n        if (m != -1) bms.push_back(m);\n    }\n    \n    // Expand the bitmasks if there is no conflict.\n    vector<int> as;\n    for (int bm : bms) {\n        int as_size = as.size();\n        for (int i = 0; i < as_size; ++i)\n            if (!(as[i] & bm)) as.push_back(as[i] | bm);\n        as.push_back(bm);\n    }\n    \n    // Look for the bitmask with the most bits set.\n    int ans = 0;\n    for (int a : as) ans = max(ans, __builtin_popcount(a));\n    return ans;\n}\n\n// Turns |a| into a bitmask for each character present.\n//   Returns -1 if the characters are not unique.\nstatic int bitmask(const string& a) {\n    int ans = 0;\n    for (char ch : a) {\n        const int mask = 1 << (ch - 'a');\n        if (ans & mask) return -1;\n        ans |= mask;\n    }\n    return ans;\n}\n"})})]})}),"\n",(0,i.jsx)(e.p,{children:"Picking up an idea from @stanislav-iablokov's solution to make the conversion into a bitmask shorter, we end up this:"}),"\n",(0,i.jsx)(r,{children:(0,i.jsxs)(a,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@heder"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"static int maxLength(const vector<string>& arr) {\n    // Turn |arr| into bitmasks.\n    vector<int> bms;\n    bms.reserve(arr.size());\n    for (const string& a : arr) {\n        int m = 0;\n        for (char ch : a) m |= 1 << (ch - 'a');\n        // Are all the characters in |a| unique?\n        if (__builtin_popcount(m) == size(a))\n            bms.push_back(m);\n    }\n    \n    // Expand the bitmasks if there is no conflict.\n    vector<int> as;\n    for (int bm : bms) {\n        int as_size = as.size();\n        for (int i = 0; i < as_size; ++i)\n            if (!(as[i] & bm)) as.push_back(as[i] | bm);\n        as.push_back(bm);\n    }\n    \n    // Look for the bitmask with the most bits set.\n    int ans = 0;\n    for (int a : as) ans = max(ans, __builtin_popcount(a));\n    return ans;\n}\n"})})]})}),"\n",(0,i.jsx)(e.p,{children:"Other thing I like about @stanislav-iablokov's solution is how it handles iterating over the existing part of all combinations while expanding it, instead of:"}),"\n",(0,i.jsx)(r,{children:(0,i.jsxs)(a,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@heder"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"int as_size = as.size();\nfor (int i = 0; i < as_size; ++i)\n    if (!(as[i] & bm)) as.push_back(as[i] | bm);\n"})})]})}),"\n",(0,i.jsx)(e.p,{children:"It does:"}),"\n",(0,i.jsx)(r,{children:(0,i.jsxs)(a,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@heder"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"for (int i = size(as) - 1; i >= 0; --i)\n    if (!(as[i] & bm)) as.push_back(as[i] | bm);\n"})})]})})]})}function o(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,i.jsx)(e,{...s,children:(0,i.jsx)(h,{...s})}):h(s)}function d(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(s,e,n)=>{n.d(e,{R:()=>r,x:()=>l});var a=n(96540);const i={},t=a.createContext(i);function r(s){const e=a.useContext(t);return a.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function l(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:r(s.components),a.createElement(t.Provider,{value:e},s.children)}}}]);