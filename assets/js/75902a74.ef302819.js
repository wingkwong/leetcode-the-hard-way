"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[37410],{93275:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"0100-0199/find-peak-element-medium","title":"0162 - Find Peak Element (Medium)","description":"Author: @yashh0903 | https://leetcode.com/problems/find-peak-element/","source":"@site/solutions/0100-0199/0162-find-peak-element-medium.md","sourceDirName":"0100-0199","slug":"/0100-0199/find-peak-element-medium","permalink":"/solutions/0100-0199/find-peak-element-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0100-0199/0162-find-peak-element-medium.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Binary Search","permalink":"/solutions/tags/binary-search"}],"version":"current","sidebarPosition":162,"frontMatter":{"description":"Author: @yashh0903 | https://leetcode.com/problems/find-peak-element/","tags":["Array","Binary Search"]},"sidebar":"tutorialSidebar","previous":{"title":"0155 - Min Stack (Medium)","permalink":"/solutions/0100-0199/min-stack-medium"},"next":{"title":"0165 - Compare Version Numbers (Medium)","permalink":"/solutions/0100-0199/compare-version-numbers-medium"}}');var r=t(86070),s=t(68906);const a={description:"Author: @yashh0903 | https://leetcode.com/problems/find-peak-element/",tags:["Array","Binary Search"]},l="0162 - Find Peak Element (Medium)",o={},d=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SolutionAuthor:t,TabItem:i,Tabs:a}=n;return t||m("SolutionAuthor",!0),i||m("TabItem",!0),a||m("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"0162---find-peak-element-medium",children:"0162 - Find Peak Element (Medium)"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/find-peak-element/",children:"https://leetcode.com/problems/find-peak-element/"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsx)(n.p,{children:"A peak element is an element that is strictly greater than its neighbors."}),"\n",(0,r.jsxs)(n.p,{children:["Given a ",(0,r.jsx)(n.strong,{children:"0-indexed"})," integer array ",(0,r.jsx)(n.code,{children:"nums"}),", find a peak element, and return its index. If the array contains multiple peaks, return the index to ",(0,r.jsx)(n.strong,{children:"any of the peaks"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You may imagine that ",(0,r.jsx)(n.code,{children:"nums[-1] = nums[n] = -\u221e"}),". In other words, an element is always considered to be strictly greater than a neighbor that is outside the array."]}),"\n",(0,r.jsxs)(n.p,{children:["You must write an algorithm that runs in ",(0,r.jsx)(n.code,{children:"O(log n)"})," time."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [1,2,3,1]\nOutput: 2\nExplanation: 3 is a peak element and your function should return the index number 2.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [1,2,1,3,5,6,4]\nOutput: 5\nExplanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums.length <= 1000"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"-2 ^ 31 <= nums[i] <= 2 ^ 31 - 1"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nums[i] != nums[i + 1]"})," for all valid ",(0,r.jsx)(n.code,{children:"i"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-binary-search",children:"Approach 1: Binary Search"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initialize start as the start index of the vector (0) and end as the end index of the vector (nums.size() - 1)."}),"\n",(0,r.jsx)(n.li,{children:"Perform binary search until start becomes equal to end."}),"\n",(0,r.jsx)(n.li,{children:"Calculate the middle index mid using the formula mid = start + (end - start) / 2."}),"\n",(0,r.jsxs)(n.li,{children:["Compare nums[mid] with nums[mid + 1] to determine if the peak is on the left side or the right side of mid.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If nums[mid] is greater than nums[mid + 1], move the end index to mid, indicating that the peak is on the left side."}),"\n",(0,r.jsx)(n.li,{children:"Otherwise, move the start index to mid + 1, indicating that the peak is on the right side."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Repeat steps 3-4 until start becomes equal to end."}),"\n",(0,r.jsx)(n.li,{children:"Return the value of start, which represents the index of the peak element."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Time complexity : The time complexity of the code is O(log n), where n is the number of elements in the nums vector."}),"\n",(0,r.jsx)(n.p,{children:"Space Complexity: The space complexity of the code is O(1) since it uses a constant amount of extra space."}),"\n",(0,r.jsx)(a,{children:(0,r.jsxs)(i,{value:"cpp",label:"C++",children:[(0,r.jsx)(t,{name:"@yashh0903"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        // Start index of the search range\n        int start = 0;\n        // End index of the search range\n        int end = nums.size() - 1;\n\n        while (start < end) {\n            // Middle index\n            int mid = start + (end - start) / 2;\n            if (nums[mid] > nums[mid + 1]) {\n                // If the current element is greater than the next element,\n                // move the end index to search in the left half\n                end = mid;\n            } else {\n                // If the current element is smaller or equal to the next element,\n                // move the start index to search in the right half\n                start = mid + 1;\n            }\n        }\n         // Return the index of the peak element\n        return start;\n    }\n};\n"})})]})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(30758);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);