"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[38997],{90966:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"0000-0099/find-first-and-last-position-of-element-in-sorted-array-medium","title":"0034 - Find First and Last Position of Element in Sorted Array (Medium)","description":"Author: @wkw, @ganajayant, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/","source":"@site/solutions/0000-0099/0034-find-first-and-last-position-of-element-in-sorted-array-medium.md","sourceDirName":"0000-0099","slug":"/0000-0099/find-first-and-last-position-of-element-in-sorted-array-medium","permalink":"/solutions/0000-0099/find-first-and-last-position-of-element-in-sorted-array-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0000-0099/0034-find-first-and-last-position-of-element-in-sorted-array-medium.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Binary Search","permalink":"/solutions/tags/binary-search"}],"version":"current","sidebarPosition":34,"frontMatter":{"description":"Author: @wkw, @ganajayant, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/","tags":["Array","Binary Search"]},"sidebar":"tutorialSidebar","previous":{"title":"0033 - Search in Rotated Sorted Array (Medium)","permalink":"/solutions/0000-0099/search-in-rotated-sorted-array-medium"},"next":{"title":"0035 - Search Insert Position (Easy)","permalink":"/solutions/0000-0099/search-insert-position-easy"}}');var s=t(86070),i=t(40629);const a={description:"Author: @wkw, @ganajayant, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",tags:["Array","Binary Search"]},l="0034 - Find First and Last Position of Element in Sorted Array (Medium)",o={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2},{value:"Approach 2: Optimal Binary Search",id:"approach-2-optimal-binary-search",level:2}];function d(n){const e={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...n.components},{SolutionAuthor:t,TabItem:r,Tabs:a}=e;return t||h("SolutionAuthor",!0),r||h("TabItem",!0),a||h("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"0034---find-first-and-last-position-of-element-in-sorted-array-medium",children:"0034 - Find First and Last Position of Element in Sorted Array (Medium)"})}),"\n",(0,s.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",children:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/"})}),"\n",(0,s.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(e.p,{children:["Given an array of integers ",(0,s.jsx)(e.code,{children:"nums"})," sorted in non-decreasing order, find the starting and ending position of a given ",(0,s.jsx)(e.code,{children:"target"})," value."]}),"\n",(0,s.jsxs)(e.p,{children:["If ",(0,s.jsx)(e.code,{children:"target"})," is not found in the array, return ",(0,s.jsx)(e.code,{children:"[-1, -1]"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["You must write an algorithm with ",(0,s.jsx)(e.code,{children:"O(log n)"})," runtime complexity."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Input: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Input: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example 3:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Input: nums = [], target = 0\nOutput: [-1,-1]\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"0 <= nums.length <= 10^5"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"-10^9 <= nums[i] <= 10^9"})}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"nums"})," is a non-decreasing array."]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:"-10^9 <= target <= 10^9"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"approach-1-binary-search",children:"Approach 1: Binary Search"}),"\n",(0,s.jsx)(e.admonition,{title:"Prerequisite",type:"info",children:(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"../../tutorials/basic-topics/binary-search",children:"Binary Search"})}),"\n"]})}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsxs)(r,{value:"c++",label:"C++",children:[(0,s.jsx)(t,{name:"@wkw"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int getFirstPosition(vector<int>& nums, int target) {\n        int n = nums.size(), l = 0, r = n - 1;\n        while (l < r) {\n            int m = l + (r - l) / 2;\n            if (target > nums[m]) l = m + 1;\n            else r = m;\n        }\n        return nums[l] == target ? l : -1;\n    }\n\n    int getLastPosition(vector<int>& nums, int target) {\n        int n = nums.size(), l = 0, r = n - 1;\n        while (l < r) {\n            int m = l + (r - l + 1) / 2;\n            if (target < nums[m]) r = m - 1;\n            else l = m;\n        }\n        return nums[l] == target ? l : -1;\n    }\n\n    vector<int> searchRange(vector<int>& nums, int target) {\n        // handle edge case\n        if ((int) nums.size() == 0) return {-1, -1};\n        // return the lower bound and upper bound - 1\n        return vector<int> {\n            // if the first position is -1, we can return ans directly\n            // see Approach 2: Optimal Binary Search\n            getFirstPosition(nums, target),\n            getLastPosition(nums, target)\n        };\n    }\n};\n"})})]}),(0,s.jsxs)(r,{value:"java",label:"Java",children:[(0,s.jsx)(t,{name:"@ganajayant"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"class Solution {\n    public int[] searchRange(int[] nums, int target) {\n        int start = 0, end = nums.length - 1, firstelement = -1;\n        while (start <= end) {\n            int mid = start + (end - start) / 2;\n            if (nums[mid] == target) {\n                firstelement = mid;\n                end = mid - 1;\n            } else if (nums[mid] > target) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n        start = 0;\n        end = nums.length - 1;\n        int endelement = -1;\n        while (start <= end) {\n            int mid = start + (end - start) / 2;\n            if (nums[mid] == target) {\n                endelement = mid;\n                start = mid + 1;\n            } else if (nums[mid] > target) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n        return new int[] { firstelement, endelement };\n    }\n}\n"})})]}),(0,s.jsxs)(r,{value:"js",label:"JavaScript",children:[(0,s.jsx)(t,{name:"@radojicic23"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar searchRange = function (nums, target) {\n  let l = 0;\n  let r = nums.length - 1;\n  while (l <= r) {\n    let mid = Math.floor((l + r) / 2);\n    if (nums[l] == target && nums[r] == target) {\n      return [l, r];\n    }\n    if (nums[mid] > target) {\n      r = mid - 1;\n    } else if (nums[mid] < target) {\n      l = mid + 1;\n    } else {\n      if (nums[l] != target) l++;\n      if (nums[r] != target) r--;\n    }\n  }\n  return [-1, -1];\n};\n"})})]}),(0,s.jsxs)(r,{value:"py",label:"Python",children:[(0,s.jsx)(t,{name:"@radojicic23"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-py",children:"class Solution:\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        l, r = 0, len(nums) - 1\n        while l <= r:\n            mid = (l + r) // 2\n            if nums[l] == nums[r] == target:\n                return [l, r]\n            if nums[mid] > target:\n                r = mid - 1\n            elif nums[mid] < target:\n                l = mid + 1\n            else:\n                if nums[l] != target: l += 1\n                if nums[r] != target: r -= 1\n        return [-1, -1]\n\n"})})]}),(0,s.jsxs)(r,{value:"kotlint",label:"Kotlin",children:[(0,s.jsx)(t,{name:"@wkw"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-kotlin",children:"class Solution {\n    fun getFirstPosition(nums: IntArray, target: Int): Int {\n        var l = 0\n        var r = nums.size - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (target > nums[m]) l = m + 1\n            else r = m\n        }\n        return if (nums[l] == target) l else -1\n    }\n\n    fun getLastPosition(nums: IntArray, target: Int): Int {\n        var l = 0\n        var r = nums.size - 1\n        while (l < r) {\n            val m = (l + r + 1) / 2\n            if (target < nums[m]) r = m - 1\n            else l = m\n        }\n        return if (nums[l] == target) l else -1\n    }\n\n    fun searchRange(nums: IntArray, target: Int): IntArray {\n        if (nums.size == 0) return intArrayOf(-1, -1)\n        return intArrayOf(\n            getFirstPosition(nums, target),\n            getLastPosition(nums, target),\n        )\n    }\n}\n"})})]})]}),"\n",(0,s.jsx)(e.h2,{id:"approach-2-optimal-binary-search",children:"Approach 2: Optimal Binary Search"}),"\n",(0,s.jsx)(e.p,{children:"To find the start and end indices, try to find the start index first, if it doesn't exist then the array not having the given element. So added a condition to check if the first index is not found then skip the end index block."}),"\n",(0,s.jsx)(e.p,{children:"Instead of having two loops for both cases, have a flag that differentiates between the start and end index search space."}),"\n",(0,s.jsxs)(e.p,{children:["Time complexity: ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"O"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mi,{children:"l"}),(0,s.jsx)(e.mi,{children:"o"}),(0,s.jsx)(e.mi,{children:"g"}),(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(log n)"})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,s.jsxs)(e.p,{children:["Space complexity: ",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"O"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mn,{children:"1"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,s.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mord",children:"1"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsxs)(r,{value:"java",label:"Java",children:[(0,s.jsx)(t,{name:"@vigneshshiv"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:"class Solution {\n    public int[] searchRange(int[] nums, int target) {\n        int[] result = {-1, -1};\n        result[0] = searchIndex(nums, target, true);\n        if (result[0] != -1) {\n            result[1] = searchIndex(nums, target, false);\n        }\n        return result;\n    }\n\n    private int searchIndex(int[] nums, int target, boolean startIndex) {\n        int low = 0, high = nums.length - 1;\n        int index = -1;\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n            if (target < nums[mid]) {\n                high = mid - 1;\n            } else if (target > nums[mid]) {\n                low = mid + 1;\n            } else {\n                index = mid;\n                if (startIndex) {\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            }\n        }\n        return index;\n    }\n}\n"})})]}),(0,s.jsxs)(r,{value:"kotlin",label:"Kotlin",children:[(0,s.jsx)(t,{name:"@wkw"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-kotlin",children:"class Solution {\n    fun getFirstPosition(nums: IntArray, target: Int): Int {\n        var l = 0\n        var r = nums.size - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (target > nums[m]) l = m + 1\n            else r = m\n        }\n        return if (nums[l] == target) l else -1\n    }\n\n    fun getLastPosition(nums: IntArray, target: Int): Int {\n        var l = 0\n        var r = nums.size - 1\n        while (l < r) {\n            val m = (l + r + 1) / 2\n            if (target < nums[m]) r = m - 1\n            else l = m\n        }\n        return if (nums[l] == target) l else -1\n    }\n\n    fun searchRange(nums: IntArray, target: Int): IntArray {\n        if (nums.size == 0) return intArrayOf(-1, -1)\n        val first = getFirstPosition(nums, target)\n        if (first == -1) return intArrayOf(-1, -1)\n        val last = getLastPosition(nums, target)\n        return intArrayOf(first, last)\n    }\n}\n"})})]})]})]})}function c(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}function h(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},40629:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var r=t(30758);const s={},i=r.createContext(s);function a(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);