"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[98575],{38889:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"2300-2399/shifting-letters-ii-medium","title":"2381 - Shifting Letters II (Medium)","description":"Author: @wkw | https://leetcode.com/problems/shifting-letters-ii/","source":"@site/solutions/2300-2399/2381-shifting-letters-ii-medium.md","sourceDirName":"2300-2399","slug":"/2300-2399/shifting-letters-ii-medium","permalink":"/solutions/2300-2399/shifting-letters-ii-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2381-shifting-letters-ii-medium.md","tags":[],"version":"current","sidebarPosition":2381,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/shifting-letters-ii/"},"sidebar":"tutorialSidebar","previous":{"title":"2380 - Time Needed to Rearrange a Binary String (Medium)","permalink":"/solutions/2300-2399/time-needed-to-rearrange-a-binary-string-medium"},"next":{"title":"2383 - Minimum Hours of Training to Win a Competition (Easy)","permalink":"/solutions/2300-2399/minimum-hours-of-training-to-win-a-competition-easy"}}');var r=n(86070),s=n(68906);const o={description:"Author: @wkw | https://leetcode.com/problems/shifting-letters-ii/"},c="2381 - Shifting Letters II (Medium)",a={},d=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Line Sweep",id:"approach-1-line-sweep",level:2}];function l(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SolutionAuthor:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"2381---shifting-letters-ii-medium",children:"2381 - Shifting Letters II (Medium)"})}),"\n",(0,r.jsx)(i.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(i.p,{children:["You are given a string ",(0,r.jsx)(i.code,{children:"s"})," of lowercase English letters and a 2D integer array ",(0,r.jsx)(i.code,{children:"shifts"})," where ",(0,r.jsx)(i.code,{children:"shifts[i] = [starti, endi, directioni]"}),". For every ",(0,r.jsx)(i.code,{children:"i"}),", ",(0,r.jsx)(i.strong,{children:"shift"})," the characters in ",(0,r.jsx)(i.code,{children:"s"})," from the index ",(0,r.jsx)(i.code,{children:"starti"})," to the index ",(0,r.jsx)(i.code,{children:"endi"})," (",(0,r.jsx)(i.strong,{children:"inclusive"}),") forward if ",(0,r.jsx)(i.code,{children:"directioni = 1"}),", or shift the characters backward if ",(0,r.jsx)(i.code,{children:"directioni = 0"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["Shifting a character ",(0,r.jsx)(i.strong,{children:"forward"})," means replacing it with the ",(0,r.jsx)(i.strong,{children:"next"})," letter in the alphabet (wrapping around so that ",(0,r.jsx)(i.code,{children:"'z'"})," becomes ",(0,r.jsx)(i.code,{children:"'a'"}),"). Similarly, shifting a character ",(0,r.jsx)(i.strong,{children:"backward"})," means replacing it with the ",(0,r.jsx)(i.strong,{children:"previous"})," letter in the alphabet (wrapping around so that ",(0,r.jsx)(i.code,{children:"'a'"})," becomes ",(0,r.jsx)(i.code,{children:"'z'"}),")."]}),"\n",(0,r.jsxs)(i.p,{children:["Return ",(0,r.jsx)(i.em,{children:"the final string after all such shifts to"}),(0,r.jsx)(i.code,{children:"s"}),(0,r.jsx)(i.em,{children:"are applied"}),"."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'Input: s = "abc", shifts = [[0,1,0],[1,2,1],[0,2,1]]\nOutput: "ace"\nExplanation: Firstly, shift the characters from index 0 to index 1 backward. Now s = "zac".\nSecondly, shift the characters from index 1 to index 2 forward. Now s = "zbd".\nFinally, shift the characters from index 0 to index 2 forward. Now s = "ace".\n'})}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'Input: s = "dztz", shifts = [[0,0,0],[1,1,1]]\nOutput: "catz"\nExplanation: Firstly, shift the characters from index 0 to index 0 backward. Now s = "cztz".\nFinally, shift the characters from index 1 to index 1 forward. Now s = "catz".\n'})}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"1 <= s.length, shifts.length <= 5 * 10^4"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"shifts[i].length == 3"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"0 <= start_i <= end_i < s.length"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"0 <= directioni <= 1"})}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"s"})," consists of lowercase English letters."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"approach-1-line-sweep",children:"Approach 1: Line Sweep"}),"\n",(0,r.jsx)(n,{name:"@wkw"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-cpp",children:"class Solution {\npublic:\n    string shiftingLetters(string s, vector<vector<int>>& shifts) {\n        int n = s.size();\n        vector<int> line(n + 1, 0);\n        // standard line sweep\n        for (auto& s : shifts) {\n            int start = s[0],\n                end   = s[1],\n            direction = s[2];\n            line[start] += direction ? 1 : -1;\n            line[end + 1] += direction ? -1 : 1;\n        }\n        // calculate the prefix sum\n        partial_sum(line.begin(), line.end(), line.begin());\n        // for each character\n        for (int i = 0; i < n; i++) {\n            // we calculate the new index value\n            int v = (s[i] - 'a' + line[i]) % 26;\n            // v can be negative if it is shifting backward\n            // in this case, we need to turn it back to positive\n            if (v < 0) v = (v % 26 + 26) % 26;\n            // in place update character at position i\n            s[i] = 'a' + v;\n        }\n        return s;\n    }\n};\n"})})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},68906:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>c});var t=n(30758);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);