"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[79987],{89209:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"2100-2199/count-the-hidden-sequences-medium","title":"2145 - Count the Hidden Sequences (Medium)","description":"Author: @wkw | https://leetcode.com/problems/count-the-hidden-sequences/","source":"@site/solutions/2100-2199/2145-count-the-hidden-sequences-medium.md","sourceDirName":"2100-2199","slug":"/2100-2199/count-the-hidden-sequences-medium","permalink":"/solutions/2100-2199/count-the-hidden-sequences-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2145-count-the-hidden-sequences-medium.md","tags":[],"version":"current","sidebarPosition":2145,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/count-the-hidden-sequences/"},"sidebar":"tutorialSidebar","previous":{"title":"2144 - Minimum Cost of Buying Candies With Discount (Easy)","permalink":"/solutions/2100-2199/minimum-cost-of-buying-candies-with-discount-easy"},"next":{"title":"2146 - K Highest Ranked Items Within a Price Range (Medium)","permalink":"/solutions/2100-2199/k-highest-ranked-items-within-a-price-range-medium"}}');var r=s(86070),t=s(32790);const d={description:"Author: @wkw | https://leetcode.com/problems/count-the-hidden-sequences/"},c="2145 - Count the Hidden Sequences (Medium)",l={},o=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Moving up and down",id:"approach-1-moving-up-and-down",level:2},{value:"Kotlin",id:"kotlin",level:3},{value:"Python3",id:"python3",level:3}];function h(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{SolutionAuthor:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"2145---count-the-hidden-sequences-medium",children:"2145 - Count the Hidden Sequences (Medium)"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/count-the-hidden-sequences/",children:"https://leetcode.com/problems/count-the-hidden-sequences/"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["You are given a ",(0,r.jsx)(n.strong,{children:"0-indexed"})," array of ",(0,r.jsx)(n.code,{children:"n"})," integers ",(0,r.jsx)(n.code,{children:"differences"}),", which describes the ",(0,r.jsx)(n.strong,{children:"differences"})," between each pair of ",(0,r.jsx)(n.strong,{children:"consecutive"})," integers of a ",(0,r.jsx)(n.strong,{children:"hidden"})," sequence of length ",(0,r.jsx)(n.code,{children:"(n + 1)"}),". More formally, call the hidden sequence ",(0,r.jsx)(n.code,{children:"hidden"}),", then we have that ",(0,r.jsx)(n.code,{children:"differences[i] = hidden[i + 1] - hidden[i]"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["You are further given two integers ",(0,r.jsx)(n.code,{children:"lower"})," and ",(0,r.jsx)(n.code,{children:"upper"})," that describe the ",(0,r.jsx)(n.strong,{children:"inclusive"})," range of values ",(0,r.jsx)(n.code,{children:"[lower, upper]"})," that the hidden sequence can contain."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For example, given ",(0,r.jsx)(n.code,{children:"differences = [1, -3, 4]"}),", ",(0,r.jsx)(n.code,{children:"lower = 1"}),", ",(0,r.jsx)(n.code,{children:"upper = 6"}),", the hidden sequence is a sequence of length ",(0,r.jsx)(n.code,{children:"4"})," whose elements are in between ",(0,r.jsx)(n.code,{children:"1"})," and ",(0,r.jsx)(n.code,{children:"6"})," (",(0,r.jsx)(n.strong,{children:"inclusive"}),").","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[3, 4, 1, 5]"})," and ",(0,r.jsx)(n.code,{children:"[4, 5, 2, 6]"})," are possible hidden sequences."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[5, 6, 3, 7]"})," is not possible since it contains an element greater than ",(0,r.jsx)(n.code,{children:"6"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[1, 2, 3, 4]"})," is not possible since the differences are not correct."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Return ",(0,r.jsxs)(n.em,{children:["the number of ",(0,r.jsx)(n.strong,{children:"possible"})," hidden sequences there are."]})," If there are no possible sequences, return ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: differences = [1,-3,4], lower = 1, upper = 6\nOutput: 2\nExplanation: The possible hidden sequences are:\n- [3, 4, 1, 5]\n- [4, 5, 2, 6]\nThus, we return 2.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: differences = [3,-4,5,1,-2], lower = -4, upper = 5\nOutput: 4\nExplanation: The possible hidden sequences are:\n- [-3, 0, -4, 1, 2, 0]\n- [-2, 1, -3, 2, 3, 1]\n- [-1, 2, -2, 3, 4, 2]\n- [0, 3, -1, 4, 5, 3]\nThus, we return 4.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: differences = [4,-7,2], lower = 3, upper = 6\nOutput: 0\nExplanation: There are no possible hidden sequences. Thus, we return 0.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"n == differences.length"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= n <= 10^5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"-10^5 <= differences[i] <= 10^5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"-10^5 <= lower <= upper <= 10^5"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-moving-up-and-down",children:"Approach 1: Moving up and down"}),"\n",(0,r.jsxs)(n.p,{children:["Note that we just need to return the ",(0,r.jsx)(n.strong,{children:"number"})," of possible hidden sequences. Supposing ",(0,r.jsx)(n.code,{children:"hidden[0] = 0"}),", we can calculate the next value by ",(0,r.jsx)(n.code,{children:"differences"}),", i.e. ",(0,r.jsx)(n.code,{children:"hidden[i + 1] = hidden[i] + differences[i]"}),". Here we just need to record the max and min values and calculate the possible ranges by moving the hidden array up and down within upper and lower range."]}),"\n",(0,r.jsxs)(n.p,{children:["If we move the hidden array up (i.e. +1 to each element) until the maximum value reaches upper boundary, we can move ",(0,r.jsx)(n.code,{children:"upper - max"})," steps. Similarly, if we move down (i.e. -1 to each element), then we can move ",(0,r.jsx)(n.code,{children:"min - lower"})," steps. Therefore, the answer is ",(0,r.jsx)(n.code,{children:"(upper - max) - (min - lower) + 1"}),". We need to add 1 here because this is the original hidden array without moving."]}),"\n",(0,r.jsxs)(n.p,{children:["Another way to think about it is that we first include the whole boundary which is ",(0,r.jsx)(n.code,{children:"(upper - lower)"})," and we exclude the fixed area ",(0,r.jsx)(n.code,{children:"(max - min)"}),". In this case, we will also get the same answer ",(0,r.jsx)(n.code,{children:"(upper - lower) - (max - min) + 1"}),"."]}),"\n",(0,r.jsx)(s,{name:"@wkw"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int numberOfArrays(vector<int>& differences, int lower, int upper) {\n        long long sum = 0, mx = 0, mi = 0;\n        for (auto x : differences) {\n            sum += x;\n            mx = max(mx, sum);\n            mi = min(mi, sum);\n        }\n        return max(upper - lower - (mx - mi) + 1, 0LL);\n    }\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"kotlin",children:"Kotlin"}),"\n",(0,r.jsx)(s,{name:"@wkw"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"class Solution {\n    fun numberOfArrays(differences: IntArray, lower: Int, upper: Int): Int {\n        var mi = 0L\n        var mx = 0L\n        var sum = 0L\n        for (x in differences) {\n            sum += x\n            mi = minOf(mi, sum)\n            mx = maxOf(mx, sum)\n        }\n        return maxOf(upper - lower - (mx - mi) + 1, 0L).toInt()\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"python3",children:"Python3"}),"\n",(0,r.jsx)(s,{name:"@wkw"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def numberOfArrays(self, differences: List[int], lower: int, upper: int) -> int:\n        hidden = list(accumulate(differences, initial = 0))\n        return max((upper - lower) - (max(hidden) - min(hidden)) + 1, 0)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Time Complexity: ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mi,{children:"n"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Space Complexity: ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mi,{children:"O"}),(0,r.jsx)(n.mo,{stretchy:"false",children:"("}),(0,r.jsx)(n.mn,{children:"1"}),(0,r.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(n.span,{className:"mopen",children:"("}),(0,r.jsx)(n.span,{className:"mord",children:"1"}),(0,r.jsx)(n.span,{className:"mclose",children:")"})]})})]})]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},32790:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var i=s(30758);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);