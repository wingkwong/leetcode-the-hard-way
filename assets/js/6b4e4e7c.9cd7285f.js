"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[58985],{71968:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"binary-search","title":"Binary Search","description":"Binary search is the searching strategy that reduces the search space by half every iteration until you have found the target.","source":"@site/templates/binary-search.md","sourceDirName":".","slug":"/binary-search","permalink":"/templates/binary-search","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/templates/binary-search.md","tags":[],"version":"current","frontMatter":{"title":"Binary Search","description":"Binary search is the searching strategy that reduces the search space by half every iteration until you have found the target.","hide_table_of_contents":false,"keywords":["leetcode","template","binary search"]},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/templates/"},"next":{"title":"Bit Manipulation","permalink":"/templates/bit-manipulation"}}');var a=t(86070),i=t(68906);const l={title:"Binary Search",description:"Binary search is the searching strategy that reduces the search space by half every iteration until you have found the target.",hide_table_of_contents:!1,keywords:["leetcode","template","binary search"]},s=void 0,o={},c=[];function u(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components},{TabItem:t,Tabs:r}=n;return t||h("TabItem",!0),r||h("Tabs",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Please refer the ",(0,a.jsx)(n.a,{href:"../tutorials/basic-topics/binary-search",children:"tutorial"})," guide for more details."]}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(t,{value:"cpp",label:"C++",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"int search(vector<int>& nums, int target) {\n    // init possible boundary\n    int n = nums.size(), l = 0, r = n - 1;\n    while (l < r) {\n        // get the middle one\n        // for even number of elements, take the upper one\n        int m = l + (r - l + 1) / 2;\n        // exclude m (condition not fulfilled)\n        if (target < nums[m]) r = m - 1;\n        // include m\n        else l = m;\n    }\n    return nums[l] == target ? l : -1;\n}\n"})})}),(0,a.jsx)(t,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"int search(int[] nums, int target) {\n    // init possible boundary\n    int n = nums.length, l = 0, r = n - 1;\n    while (l < r) {\n        // get the middle one\n        // for even number of elements, take the upper one\n        int m = l + (r - l + 1) / 2;\n        // exclude m (condition not fulfilled)\n        if (target < nums[m]) r = m - 1;\n        // include m\n        else l = m;\n    }\n    return nums[l] == target ? l : -1;\n}\n"})})})]}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)(t,{value:"cpp",label:"C++",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"int search(vector<int>& nums, int target) {\n    // init possible boundary\n    int n = nums.size(), l = 0, r = n - 1;\n    while (l < r) {\n        // get the middle one\n        // for even number of elements, take the lower one\n        int m = l + (r - l) / 2;\n        // exclude m (condition not fulfilled)\n        if (target > nums[m]) l = m + 1;\n        // include m\n        else r = m;\n    }\n    return nums[l] == target ? l : -1;\n}\n"})})}),(0,a.jsx)(t,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"int search(int[] nums, int target) {\n    // init possible boundary\n    int n = nums.length, l = 0, r = n - 1;\n    while (l < r) {\n        // get the middle one\n        // for even number of elements, take the lower one\n        int m = l + (r - l) / 2;\n        // exclude m (condition not fulfilled)\n        if (target > nums[m]) l = m + 1;\n        // include m\n        else r = m;\n    }\n    return nums[l] == target ? l : -1;\n}\n"})})})]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var r=t(30758);const a={},i=r.createContext(a);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);