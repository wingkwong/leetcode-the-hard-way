"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[63167],{56293:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>o,frontMatter:()=>l,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"0700-0799/min-cost-climbing-stairs-easy","title":"0746 - Min Cost Climbing Stairs (Easy)","description":"Author: @ColeB2, @wingkwong | https://leetcode.com/problems/min-cost-climbing-stairs/","source":"@site/solutions/0700-0799/0746-min-cost-climbing-stairs-easy.md","sourceDirName":"0700-0799","slug":"/0700-0799/min-cost-climbing-stairs-easy","permalink":"/solutions/0700-0799/min-cost-climbing-stairs-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0700-0799/0746-min-cost-climbing-stairs-easy.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Dynamic Programming","permalink":"/solutions/tags/dynamic-programming"}],"version":"current","sidebarPosition":746,"frontMatter":{"description":"Author: @ColeB2, @wingkwong | https://leetcode.com/problems/min-cost-climbing-stairs/","tags":["Array","Dynamic Programming"]},"sidebar":"tutorialSidebar","previous":{"title":"0744 - Find Smallest Letter Greater Than Target (Easy)","permalink":"/solutions/0700-0799/find-smallest-letter-greater-than-target-easy"},"next":{"title":"0763 - Partition Labels (Medium)","permalink":"/solutions/0700-0799/partition-labels-medium"}}');var t=n(74848),i=n(28453);const l={description:"Author: @ColeB2, @wingkwong | https://leetcode.com/problems/min-cost-climbing-stairs/",tags:["Array","Dynamic Programming"]},r="0746 - Min Cost Climbing Stairs (Easy)",c={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Dynamic Programming",id:"approach-1-dynamic-programming",level:2}];function h(s){const e={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...s.components},{SolutionAuthor:n,TabItem:a,Tabs:l}=e;return n||d("SolutionAuthor",!0),a||d("TabItem",!0),l||d("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"0746---min-cost-climbing-stairs-easy",children:"0746 - Min Cost Climbing Stairs (Easy)"})}),"\n",(0,t.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://leetcode.com/problems/min-cost-climbing-stairs/",children:"https://leetcode.com/problems/min-cost-climbing-stairs/"})}),"\n",(0,t.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(e.p,{children:["You are given an integer array ",(0,t.jsx)(e.code,{children:"cost"})," where ",(0,t.jsx)(e.code,{children:"cost[i]"})," is the cost of ",(0,t.jsx)(e.code,{children:"ith"})," step on a staircase. Once you pay the cost, you can either climb one or two steps."]}),"\n",(0,t.jsxs)(e.p,{children:["You can either start from the step with index ",(0,t.jsx)(e.code,{children:"0"}),", or the step with index ",(0,t.jsx)(e.code,{children:"1"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["Return ",(0,t.jsx)(e.em,{children:"the minimum cost to reach the top of the floor"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Input: cost = [10,15,20]\nOutput: 15\nExplanation: You will start at index 1.\n- Pay 15 and climb two steps to reach the top.\nThe total cost is 15.\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Input: cost = [1,100,1,1,1,100,1,1,100,1]\nOutput: 6\nExplanation: You will start at index 0.\n- Pay 1 and climb two steps to reach index 2.\n- Pay 1 and climb two steps to reach index 4.\n- Pay 1 and climb two steps to reach index 6.\n- Pay 1 and climb one step to reach index 7.\n- Pay 1 and climb two steps to reach index 9.\n- Pay 1 and climb one step to reach the top.\nThe total cost is 6.\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"2 <= cost.length <= 1000"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"0 <= cost[i] <= 999"})}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"approach-1-dynamic-programming",children:"Approach 1: Dynamic Programming"}),"\n",(0,t.jsxs)(e.p,{children:["For each step, starting at the ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"3"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"3"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"3"})]})})]})," step (step index ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"2"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"2"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"2"})]})})]})," in a ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mn,{children:"0"}),(0,t.jsx)(e.mo,{children:"\u2212"}),(0,t.jsx)(e.mi,{children:"i"}),(0,t.jsx)(e.mi,{children:"n"}),(0,t.jsx)(e.mi,{children:"d"}),(0,t.jsx)(e.mi,{children:"e"}),(0,t.jsx)(e.mi,{children:"x"}),(0,t.jsx)(e.mi,{children:"e"}),(0,t.jsx)(e.mi,{children:"d"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"0-indexed"})]})})}),(0,t.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,t.jsx)(e.span,{className:"mord",children:"0"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"in"}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"x"}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"d"})]})]})]})," array), we can calculate the min cost it would take to reach that step. The min cost to reach any given step would be the min cost to reach the step directly behind it, and ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"2"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"2"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"2"})]})})]})," steps behind it."]}),"\n",(0,t.jsxs)(e.p,{children:["By starting at step ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"3"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"3"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"3"})]})})]}),", we can add the cost from step ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"3"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"3"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"3"})]})})]})," directly to either the smallest of step ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"1"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"1"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"1"})]})})]})," or ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mn,{children:"2"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"2"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(e.span,{className:"mord",children:"2"})]})})]}),", since we can start from either of those steps. Then we can continue to calculate the min cost for steps ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mn,{children:"4"}),(0,t.jsx)(e.mo,{separator:"true",children:","}),(0,t.jsx)(e.mn,{children:"5"}),(0,t.jsx)(e.mo,{separator:"true",children:","}),(0,t.jsx)(e.mn,{children:"6..."}),(0,t.jsx)(e.mi,{children:"n"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"4,5,6...n"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(e.span,{className:"mord",children:"4"}),(0,t.jsx)(e.span,{className:"mpunct",children:","}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(e.span,{className:"mord",children:"5"}),(0,t.jsx)(e.span,{className:"mpunct",children:","}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(e.span,{className:"mord",children:"6..."}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})]}),"\n",(0,t.jsxs)(e.p,{children:["Time Complexity: ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mi,{children:"n"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(e.span,{className:"mclose",children:")"})]})})]}),", where n is the number of steps. We are going to calculate the min cost of each step in the cost array."]}),"\n",(0,t.jsxs)(e.p,{children:["Space Complexity: ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mn,{children:"1"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord",children:"1"}),(0,t.jsx)(e.span,{className:"mclose",children:")"})]})})]})," we can reuse the cost array to overwrite the min cost to reach each step."]}),"\n",(0,t.jsxs)(l,{children:[(0,t.jsxs)(a,{value:"python",label:"Python",children:[(0,t.jsx)(n,{name:"@ColeB2"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        # loop from the 3rd step, (2 indexed step in 0-indexed list) \n        # until the end of the cost array\n        for i in range(2, len(cost)):\n            # calculate the cost of the ith step. The cost will be the\n            # cost of the current step, plus the smaller of the i-1, i-2\n            # step behind us.\n            cost[i] += min(cost[i - 1], cost[i - 2])\n        # Return the smallest of the last 2 steps. Since we can either\n        # stand on the last step and step to the final floor, or the\n        # step below that and take 2 steps to reach the final floor.\n        return min(cost[-1], cost[-2])\n"})})]}),(0,t.jsxs)(a,{value:"cpp",label:"C++",children:[(0,t.jsx)(n,{name:"@wingkwong"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int minCostClimbingStairs(vector<int>& cost) {\n        int n = cost.size();\n        int dp[n + 1];\n        memset(dp, 0, sizeof(dp));\n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        for (int i = 2; i <= n; i++) {\n            dp[i] = min(dp[i - 1], dp[i - 2]) + (i == n ? 0 : cost[i]);\n        }\n        return dp[n];\n    }\n};\n"})})]}),(0,t.jsxs)(a,{value:"kotlin",label:"Kotlin",children:[(0,t.jsx)(n,{name:"@wingkwong"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kt",children:"class Solution {\n    fun minCostClimbingStairs(cost: IntArray): Int {\n        val n = cost.size\n        val dp = IntArray(n + 1)\n        dp[0] = cost[0]\n        dp[1] = cost[1]\n        for (i in 2 .. n) {\n            dp[i] = minOf(dp[i - 1], dp[i - 2]) + if (i == n) 0 else cost[i]\n        }\n        return dp[n]\n    }\n}\n"})})]})]})]})}function o(s={}){const{wrapper:e}={...(0,i.R)(),...s.components};return e?(0,t.jsx)(e,{...s,children:(0,t.jsx)(h,{...s})}):h(s)}function d(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(s,e,n)=>{n.d(e,{R:()=>l,x:()=>r});var a=n(96540);const t={},i=a.createContext(t);function l(s){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function r(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(t):s.components||t:l(s.components),a.createElement(i.Provider,{value:e},s.children)}}}]);