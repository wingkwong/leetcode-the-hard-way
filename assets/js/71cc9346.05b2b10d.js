"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[56231],{89913:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"0300-0399/intersection-of-two-arrays-easy","title":"0349 - Intersection of Two Arrays (Easy)","description":"Author: @ganajayant | https://leetcode.com/problems/intersection-of-two-arrays/","source":"@site/solutions/0300-0399/0349-intersection-of-two-arrays-easy.md","sourceDirName":"0300-0399","slug":"/0300-0399/intersection-of-two-arrays-easy","permalink":"/solutions/0300-0399/intersection-of-two-arrays-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0300-0399/0349-intersection-of-two-arrays-easy.md","tags":[],"version":"current","sidebarPosition":349,"frontMatter":{"description":"Author: @ganajayant | https://leetcode.com/problems/intersection-of-two-arrays/"},"sidebar":"tutorialSidebar","previous":{"title":"0347 - Top K Frequent Elements (Medium)","permalink":"/solutions/0300-0399/top-k-frequent-elements-medium"},"next":{"title":"0350 - Intersection of Two Arrays II (Easy)","permalink":"/solutions/0300-0399/intersection-of-two-arrays-ii-easy"}}');var s=t(86070),i=t(68906);const o={description:"Author: @ganajayant | https://leetcode.com/problems/intersection-of-two-arrays/"},a="0349 - Intersection of Two Arrays (Easy)",l={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: HashMap",id:"approach-1-hashmap",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:t,TabItem:r,Tabs:o}=n;return t||u("SolutionAuthor",!0),r||u("TabItem",!0),o||u("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"0349---intersection-of-two-arrays-easy",children:"0349 - Intersection of Two Arrays (Easy)"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/intersection-of-two-arrays/",children:"https://leetcode.com/problems/intersection-of-two-arrays/"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsx)(n.p,{children:"Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums1 = [1,2,2,1], nums2 = [2,2]\nOutput: [2]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\nOutput: [9,4]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"1 <= nums1.length, nums2.length <= 1000"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"0 <= nums1[i], nums2[i] <= 1000"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"approach-1-hashmap",children:"Approach 1: HashMap"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Insert all elements from first array into hash table (set)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"for each element i in second array if it is present in our hash table insert into result list & remove that element from our hash table so we again not insert into result."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"return result."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o,{children:(0,s.jsxs)(r,{value:"java",label:"Java",children:[(0,s.jsx)(t,{name:"@ganajayant"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class Solution {\n    public int[] intersection(int[] nums1, int[] nums2) {\n        HashMap<Integer, Integer> hm = new HashMap<>();\n        for (int i : nums1) {\n            if (hm.containsKey(i)) {\n                hm.put(i, hm.get(i) + 1);\n            } else {\n                hm.put(i, 1);\n            }\n        }\n        LinkedList<Integer> ll = new LinkedList<>();\n        for (int i : nums2) {\n            if (hm.containsKey(i)) {\n                if (hm.get(i) >= 1) {\n                    hm.put(i, hm.get(i) - 1);\n                    if (!ll.contains(i)) {\n                        ll.add(i);\n                    }\n                }\n            }\n        }\n        int ar[] = new int[ll.size()];\n        for (int i = 0; i < ar.length; i++) {\n            ar[i] = ll.get(i);\n        }\n        return ar;\n    }\n}\n"})})]})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(30758);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);