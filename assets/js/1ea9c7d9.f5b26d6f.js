"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[7128],{70771:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"0200-0299/power-of-two-easy","title":"0231 - Power of Two (Easy)","description":"Author: @wkw, @vigneshshiv, @radojicic23, @jit | https://leetcode.com/problems/power-of-two/","source":"@site/solutions/0200-0299/0231-power-of-two-easy.md","sourceDirName":"0200-0299","slug":"/0200-0299/power-of-two-easy","permalink":"/solutions/0200-0299/power-of-two-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0200-0299/0231-power-of-two-easy.md","tags":[{"inline":true,"label":"Math","permalink":"/solutions/tags/math"},{"inline":true,"label":"Bit Manipulation","permalink":"/solutions/tags/bit-manipulation"},{"inline":true,"label":"Recursion","permalink":"/solutions/tags/recursion"}],"version":"current","sidebarPosition":231,"frontMatter":{"description":"Author: @wkw, @vigneshshiv, @radojicic23, @jit | https://leetcode.com/problems/power-of-two/","tags":["Math","Bit Manipulation","Recursion"]},"sidebar":"tutorialSidebar","previous":{"title":"0230 - Kth Smallest Element in a BST (Medium)","permalink":"/solutions/0200-0299/kth-smallest-element-in-a-bst-medium"},"next":{"title":"0234 - Palindrome Linked List (Easy)","permalink":"/solutions/0200-0299/palindrome-linked-list-easy"}}');var t=s(86070),i=s(32790);const l={description:"Author: @wkw, @vigneshshiv, @radojicic23, @jit | https://leetcode.com/problems/power-of-two/",tags:["Math","Bit Manipulation","Recursion"]},r="0231 - Power of Two (Easy)",o={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Bit Manipulation",id:"approach-1-bit-manipulation",level:2},{value:"Approach 2: Binary Search",id:"approach-2-binary-search",level:2},{value:"Approach 3: Regex",id:"approach-3-regex",level:2}];function h(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:s,TabItem:a,Tabs:l}=n;return s||d("SolutionAuthor",!0),a||d("TabItem",!0),l||d("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"0231---power-of-two-easy",children:"0231 - Power of Two (Easy)"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/power-of-two/",children:"https://leetcode.com/problems/power-of-two/"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["Given an integer ",(0,t.jsx)(n.code,{children:"n"}),", return ",(0,t.jsxs)(n.em,{children:[(0,t.jsx)(n.code,{children:"true"})," if it is a power of two. Otherwise, return ",(0,t.jsx)(n.code,{children:"false"})]}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["An integer ",(0,t.jsx)(n.code,{children:"n"})," is a power of two, if there exists an integer ",(0,t.jsx)(n.code,{children:"x"})," such that ",(0,t.jsx)(n.code,{children:"n == 2^x"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: n = 1\nOutput: true\nExplanation: 2^0 = 1\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: n = 16\nOutput: true\nExplanation: 2^4 = 16\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: n = 3\nOutput: false\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"-2^31 <= n <= 2^31 - 1"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Follow up:"})," Could you solve it without loops/recursion?"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-bit-manipulation",children:"Approach 1: Bit Manipulation"}),"\n",(0,t.jsxs)(n.p,{children:["It's obvious to see that the answer is ",(0,t.jsx)(n.code,{children:"false"})," if ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mo,{children:"<"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsx)(n.mn,{children:"0"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"n <= 0"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"<="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(n.span,{className:"mord",children:"0"})]})]})]}),". If ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"n"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"})]})})]})," is positive, a power of two would only have ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mn,{children:"1"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"1"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(n.span,{className:"mord",children:"1"})]})})]})," bit set. We can use ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"n"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"})]})})]})," & ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mo,{children:"\u2212"}),(0,t.jsx)(n.mn,{children:"1"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"(n-1)"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(n.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord",children:"1"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})]})]})," which is a common trick to remove the rightmost set bit. If it's a power of 2, the only set bit would be removed, hence the result would be ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mn,{children:"0"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"0"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(n.span,{className:"mord",children:"0"})]})})]}),". Otherwise, even we remove the rightmost set bit, the value wont be ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mn,{children:"0"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"0"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(n.span,{className:"mord",children:"0"})]})})]}),"."]}),"\n",(0,t.jsxs)(l,{children:[(0,t.jsxs)(a,{value:"cpp",label:"C++",children:[(0,t.jsx)(s,{name:"@wkw"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        // 1. check if it is a positive number\n        // 2. check the value is 0 after removing the rightmost bit\n        return n > 0 && !(n & (n - 1));\n    }\n};\n"})})]}),(0,t.jsxs)(a,{value:"java",label:"Java",children:[(0,t.jsx)(s,{name:"@vigneshshiv"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class Solution {\n    /**\n     * 1. check if it is a positive number\n     * 2. check the value is 0 after removing the rightmost bit\n     *\n     * Samples below\n     *\n     *  #1 n = 5\n     *     5 = 0101\n     *   5-1 = 0100\n     *   ans = 0100 (not a valid answer)\n     *\n     *  #2 n = 8\n     *     8 = 1000\n     *   n-1 = 0111\n     *   ans = 0000 (right answer)\n     *\n     */\n    public boolean isPowerOfTwo(int n) {\n        return n > 0 & (n & (n - 1)) == 0;\n    }\n}\n"})})]}),(0,t.jsxs)(a,{value:"py",label:"Python",children:[(0,t.jsx)(s,{name:"@radojicic23"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"# 1. check if it's a positive number\n# 2. check the value is 0 after removing the rightmost bit\nclass Solution:\n    def isPowerOfTwo(self, n: int) -> bool:\n        return n > 0 and not (n & (n - 1))\n"})})]}),(0,t.jsxs)(a,{value:"js",label:"JavaScript",children:[(0,t.jsx)(s,{name:"@radojicic23"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number} n\n * @return {boolean}\n */\n\n// 1. check if it's a positive number\n// 2. check the value is 0 after removing the rightmost bit\nvar isPowerOfTwo = function (n) {\n  return n > 0 && !(n & (n - 1));\n};\n"})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"approach-2-binary-search",children:"Approach 2: Binary Search"}),"\n",(0,t.jsx)(n.p,{children:"Almost same as the solution in 326. Power of Three and 342. Power of Four."}),"\n",(0,t.jsx)(l,{children:(0,t.jsxs)(a,{value:"cpp",label:"C++",children:[(0,t.jsx)(s,{name:"@wkw"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        // the idea is to use binary search to find x to see if 2 ^ x = n is true or false\n        int l = 0, r = (int) log(pow(2, 31)) / log(2);\n         while (l < r) {\n            // get the middle one\n            // for even number of elements, take the lower one\n            int m = l + (r - l) / 2;\n            // exclude m\n            if (pow(2, m) < n) l = m + 1;\n            // include m\n            else r = m;\n        }\n        // check if 2 ^ l is n\n        // if so, then n is a power of two, otherwise it is not\n        return pow(2, l) == n;\n    }\n};\n"})})]})}),"\n",(0,t.jsx)(n.h2,{id:"approach-3-regex",children:"Approach 3: Regex"}),"\n",(0,t.jsx)(l,{children:(0,t.jsxs)(a,{value:"ruby",label:"Ruby",children:[(0,t.jsx)(s,{name:"@jit"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def is_power_of_two(n) = !(/^10*$/ !~ '%b' % n)\n"})})]})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var a=s(30758);const t={},i=a.createContext(t);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);