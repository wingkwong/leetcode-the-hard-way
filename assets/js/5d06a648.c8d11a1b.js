"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[21207],{81293:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"basic-topics/trie","title":"Trie","description":"A trie or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings.","source":"@site/tutorials/basic-topics/trie.md","sourceDirName":"basic-topics","slug":"/basic-topics/trie","permalink":"/tutorials/basic-topics/trie","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/tutorials/basic-topics/trie.md","tags":[],"version":"current","frontMatter":{"title":"Trie","description":"A trie or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings.","keywords":["leetcode","tutorial","trie","prefix tree","data structure"]},"sidebar":"tutorialSidebar","previous":{"title":"Time Complexity","permalink":"/tutorials/basic-topics/time-complexity"},"next":{"title":"Two Pointers","permalink":"/tutorials/basic-topics/two-pointers"}}');var i=n(86070),r=n(40629);const t={title:"Trie",description:"A trie or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings.",keywords:["leetcode","tutorial","trie","prefix tree","data structure"]},l=void 0,h={},c=[{value:"Overview",id:"overview",level:2},{value:"Trie",id:"trie",level:2},{value:"Trie Node",id:"trie-node",level:2},{value:"Initializing",id:"initializing",level:2},{value:"Searching",id:"searching",level:2},{value:"Insertion",id:"insertion",level:2},{value:"startsWith",id:"startswith",level:2}];function d(e){const s={a:"a",annotation:"annotation",blockquote:"blockquote",code:"code",h2:"h2",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{TutorialCredits:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("TutorialCredits",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{authors:"@wkw"}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://leetcode.com/problems/implement-trie-prefix-tree/",children:"208. Implement Trie (Prefix Tree)"})," will be used as an example."]}),"\n",(0,i.jsx)(s.p,{children:'A trie (pronounced as "try") or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.'}),"\n",(0,i.jsx)(s.p,{children:"Implement the Trie class:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Trie() Initializes the trie object."}),"\n",(0,i.jsx)(s.li,{children:"void insert(String word) Inserts the string word into the trie."}),"\n",(0,i.jsx)(s.li,{children:"boolean search(String word) Returns true if the string word is in the trie (i.e., was inserted before), and false otherwise."}),"\n",(0,i.jsx)(s.li,{children:"boolean startsWith(String prefix) Returns true if there is a previously inserted string word that has the prefix prefix, and false otherwise."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'Input\n["Trie", "insert", "search", "search", "startsWith", "insert", "search"]\n[[], ["apple"], ["apple"], ["app"], ["app"], ["app"], ["app"]]\nOutput\n[null, null, true, false, true, null, true]\n\nExplanation\nTrie trie = new Trie();\ntrie.insert("apple");\ntrie.search("apple");   // return True\ntrie.search("app");     // return False\ntrie.startsWith("app"); // return True\ntrie.insert("app");\ntrie.search("app");     // return True\n'})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{children:"<"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mi,{children:"w"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mi,{children:"l"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mi,{children:"h"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"p"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"f"}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mi,{children:"l"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mi,{children:"h"}),(0,i.jsx)(s.mo,{children:"<"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mn,{children:"2000"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= word.length, prefix.length <= 2000"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"<="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"or"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord",children:"."}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"re"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mord",children:"."}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"<="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"2000"})]})]})]})}),"\n",(0,i.jsx)(s.li,{children:"word and prefix consist only of lowercase English letters."}),"\n",(0,i.jsx)(s.li,{children:"At most 3 * 10^4 calls in total will be made to insert, search, and startsWith."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"trie",children:"Trie"}),"\n",(0,i.jsxs)(s.p,{children:["We can see Trie containing a number of Trie nodes. Each node contains a value and links to other nodes. We start from the root, we traverse till ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"e"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"e"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"e"})]})})]})," so that we have ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"e"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"gee"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"ee"})]})})]}),". At this node, we have three different nodes to traverse so that we have ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"k"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"geek"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"ee"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]}),", ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"r"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"geer"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"eer"})]})})]}),", and ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"z"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"geez"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"eez"})]})})]}),". We can also further to have ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"s"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"geeks"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"ee"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"})]})})]})," and ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"g"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"e"}),(0,i.jsx)(s.mi,{children:"k"}),(0,i.jsx)(s.mi,{children:"t"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"geekt"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"ee"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"})]})})]})," and so on."]}),"\n",(0,i.jsx)("img",{src:"https://user-images.githubusercontent.com/35857179/168469460-8dc4b23b-21e9-43dd-84ca-287f0b44834a.png",width:"400"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["Diagram Source: ",(0,i.jsx)(s.a,{href:"https://www.geeksforgeeks.org/",children:"https://www.geeksforgeeks.org/"})]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"trie-node",children:"Trie Node"}),"\n",(0,i.jsxs)(s.p,{children:["Each Trie Node should have a children array with the size of ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mn,{children:"26"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"26"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"26"})]})})]})," for character ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"a"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"a"})]})})]})," to ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"z"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"z"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"})]})})]}),". Also it has a boolean variable ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mi,{children:"E"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"d"}),(0,i.jsx)(s.mi,{children:"O"}),(0,i.jsx)(s.mi,{children:"f"}),(0,i.jsx)(s.mi,{children:"W"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"r"}),(0,i.jsx)(s.mi,{children:"d"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"isEndOfWord"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"E"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"W"}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"or"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"d"})]})})]})," to indicate if a word is ended at this node."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"class TrieNode {\n public:\n  // is a word ended at this node\n  bool isEndOfWord;\n  // children for 26 characters\n  TrieNode* children[26];\n\n  // constructor - setting initial values\n  TrieNode() {\n    // no word is ended here\n    isEndOfWord = false;\n    // not linking to other Trie node\n    for (int i = 0; i < 26; i++) {\n        children[i] = NULL;\n    }\n  }\n};\n"})}),"\n",(0,i.jsx)(s.h2,{id:"initializing",children:"Initializing"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"Trie() {\n    // init Trie - define the very first node\n    root = new TrieNode();\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"searching",children:"Searching"}),"\n",(0,i.jsxs)(s.p,{children:["Given a word, ",(0,i.jsx)(s.code,{children:"search"})," returns if the word is in the trie."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"bool search(string word) {\n    // start from the root node\n    TrieNode* node = root;\n    // iterate the word\n    for (int i = 0; i < (int) word.size(); i++) {\n        // get the index of the character\n        // a -> 0\n        // b -> 1\n        // ...\n        // z -> 25\n        int idx = word[i] - 'a';\n        // if there is no such node, that means the word doesn't exist\n        if (!node->children[idx]) return false;\n        // otherwise, traverse the next node\n        node = node->children[idx];\n    }\n    // check if this node is marked with isEndOfWord = true\n    return node->isEndOfWord;\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"insertion",children:"Insertion"}),"\n",(0,i.jsxs)(s.p,{children:["Given a word, ",(0,i.jsx)(s.code,{children:"insert"})," inserts it into the trie."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"void insert(string word) {\n    // start from the root node\n    TrieNode* node = root;\n    for (int i = 0; i < (int) word.size(); i++) {\n        // get the index of the character\n        // a -> 0\n        // b -> 1\n        // ...\n        // z -> 25\n        int idx = word[i] - 'a';\n        // traverse each node,\n        if (!node->children[idx]) {\n            // if the node doesn't exist,\n            // create a new node\n            node->children[idx] = new TrieNode();\n        }\n        // traverse the next one\n        node = node->children[idx];\n    }\n    // mark this node with isEndOfWord = true\n    node->isEndOfWord = true;\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"startswith",children:"startsWith"}),"\n",(0,i.jsxs)(s.p,{children:["Given a prefix, ",(0,i.jsx)(s.code,{children:"startsWith"})," checks if there is any word in the trie that starts with the given prefix."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"bool startsWith(string prefix) {\n    // start from the root node\n    TrieNode* node = root;\n    // iterate each character in prefix\n    for (int i = 0; i < (int) prefix.size(); i++) {\n        // get the index of the character\n        // a -> 0\n        // b -> 1\n        // ...\n        // z -> 25\n        int idx = prefix[i] - 'a';\n        // if there is no such node, that means the word doesn't exist\n        if (!node->children[idx]) return false;\n        // otherwise, traverse the next node\n        node = node->children[idx];\n    }\n    // all target nodes have been traversed, return true here\n    return true;\n}\n"})})]})}function m(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},40629:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var a=n(30758);const i={},r=a.createContext(i);function t(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);