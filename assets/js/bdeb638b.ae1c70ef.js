"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[23083],{96562:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"2300-2399/equal-row-and-column-pairs-medium","title":"2352 - Equal Row and Column Pairs (Medium)","description":"Author: @wkw | https://leetcode.com/problems/equal-row-and-column-pairs","source":"@site/solutions/2300-2399/2352-equal-row-and-column-pairs-medium.md","sourceDirName":"2300-2399","slug":"/2300-2399/equal-row-and-column-pairs-medium","permalink":"/solutions/2300-2399/equal-row-and-column-pairs-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2352-equal-row-and-column-pairs-medium.md","tags":[{"inline":true,"label":"Hash Map","permalink":"/solutions/tags/hash-map"}],"version":"current","sidebarPosition":2352,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/equal-row-and-column-pairs","tags":["Hash Map"]},"sidebar":"tutorialSidebar","previous":{"title":"2351 - First Letter to Appear Twice (Easy)","permalink":"/solutions/2300-2399/first-letter-to-appear-twice-easy"},"next":{"title":"2354 - Number of Excellent Pairs (Hard)","permalink":"/solutions/2300-2399/number-of-excellent-pairs-hard"}}');var o=r(86070),i=r(40629);const s={description:"Author: @wkw | https://leetcode.com/problems/equal-row-and-column-pairs",tags:["Hash Map"]},l="2352 - Equal Row and Column Pairs (Medium)",a={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Hash Map",id:"approach-1-hash-map",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"2352---equal-row-and-column-pairs-medium",children:"2352 - Equal Row and Column Pairs (Medium)"})}),"\n",(0,o.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/equal-row-and-column-pairs",children:"https://leetcode.com/problems/equal-row-and-column-pairs"})}),"\n",(0,o.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,o.jsxs)(n.p,{children:["Given a ",(0,o.jsx)(n.strong,{children:"0-indexed"})," ",(0,o.jsx)(n.code,{children:"n x n"})," integer matrix ",(0,o.jsx)(n.code,{children:"grid"}),", ",(0,o.jsx)(n.em,{children:"return the number of pairs"})," ",(0,o.jsx)(n.code,{children:"(Ri, Cj)"})," ",(0,o.jsx)(n.em,{children:"such that row"})," ",(0,o.jsx)(n.code,{children:"Ri"})," ",(0,o.jsx)(n.em,{children:"and column"})," ",(0,o.jsx)(n.code,{children:"Cj"})," ",(0,o.jsx)(n.em,{children:"are equal"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"A row and column pair is considered equal if they contain the same elements in the same order (i.e. an equal array)."}),"\n",(0,o.jsx)(n.p,{children:" "}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://assets.leetcode.com/uploads/2022/06/01/ex1.jpg",alt:""})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Input: grid = [[3,2,1],[1,7,6],[2,7,7]]\nOutput: 1\nExplanation: There is 1 equal row and column pair:\n- (Row 2, Column 1): [2,7,7]\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://assets.leetcode.com/uploads/2022/06/01/ex2.jpg",alt:""})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Input: grid = [[3,1,2,2],[1,4,4,5],[2,4,2,2],[2,4,2,2]]\nOutput: 3\nExplanation: There are 3 equal row and column pairs:\n- (Row 0, Column 0): [3,1,2,2]\n- (Row 2, Column 2): [2,4,2,2]\n- (Row 3, Column 2): [2,4,2,2]\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"n == grid.length == grid[i].length"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"1 <= n <= 200"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"1 <= grid[i][j] <= 10^5"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"approach-1-hash-map",children:"Approach 1: Hash Map"}),"\n",(0,o.jsx)(r,{name:"@wkw"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int equalPairs(vector<vector<int>>& g) {\n        int n = g.size(), ans = 0;\n        // count the frequency of a vector\n        map<vector<int>, int> m;\n        // check all rows\n        for (int i = 0; i < n; i++) {\n            vector<int> tmp;\n            for (int j = 0; j < n; j++) tmp.push_back(g[i][j]);\n            // in example 1, we got {3,2,1}, {1,7,6}, {2,7,7}\n            m[tmp] += 1;\n        }\n        // check all cols\n        for (int j = 0; j < n; j++) {\n            vector<int> tmp;\n            for (int i = 0; i < n; i++) tmp.push_back(g[i][j]);\n            // in example 1, we got {3,1,2}, {2,7,7}, {1,6,7}\n            // since {2,7,7} has frequency of 1, we add it to answer\n            // otherwise, it would be adding 0\n            ans += m[tmp];\n        }\n        return ans;\n    }\n};\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},40629:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(30758);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);