"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[69480],{94800:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"2000-2099/two-out-of-three-easy","title":"2032 - Two Out of Three (Easy)","description":"Author: @wkw | https://leetcode.com/problems/two-out-of-three","source":"@site/solutions/2000-2099/2032-two-out-of-three-easy.md","sourceDirName":"2000-2099","slug":"/2000-2099/two-out-of-three-easy","permalink":"/solutions/2000-2099/two-out-of-three-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2000-2099/2032-two-out-of-three-easy.md","tags":[{"inline":true,"label":"Hash Map","permalink":"/solutions/tags/hash-map"}],"version":"current","sidebarPosition":2032,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/two-out-of-three","tags":["Hash Map"]},"sidebar":"tutorialSidebar","previous":{"title":"2017 - Grid Game (Medium)","permalink":"/solutions/2000-2099/grid-game-medium"},"next":{"title":"2050 - Parallel Courses III (Hard)","permalink":"/solutions/2000-2099/parallel-courses-iii-hard"}}');var r=t(86070),o=t(40629);const a={description:"Author: @wkw | https://leetcode.com/problems/two-out-of-three",tags:["Hash Map"]},i="2032 - Two Out of Three (Easy)",l={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Hash Map",id:"approach-1-hash-map",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{SolutionAuthor:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"2032---two-out-of-three-easy",children:"2032 - Two Out of Three (Easy)"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/two-out-of-three",children:"https://leetcode.com/problems/two-out-of-three"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["Given three integer arrays ",(0,r.jsx)(n.code,{children:"nums1"}),", ",(0,r.jsx)(n.code,{children:"nums2"}),", and ",(0,r.jsx)(n.code,{children:"nums3"}),", return ",(0,r.jsxs)(n.em,{children:["a ",(0,r.jsx)(n.strong,{children:"distinct"})," array containing all the values that are present in ",(0,r.jsx)(n.strong,{children:"at least two"})," out of the three arrays. You may return the values in ",(0,r.jsx)(n.strong,{children:"any"})," order"]}),". "]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums1 = [1,1,3,2], nums2 = [2,3], nums3 = [3]\nOutput: [3,2]\nExplanation: The values that are present in at least two arrays are:\n- 3, in all three arrays.\n- 2, in nums1 and nums2.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums1 = [3,1], nums2 = [2,3], nums3 = [1,2]\nOutput: [2,3,1]\nExplanation: The values that are present in at least two arrays are:\n- 2, in nums2 and nums3.\n- 3, in nums1 and nums2.\n- 1, in nums1 and nums3.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums1 = [1,2,2], nums2 = [4,3,3], nums3 = [5]\nOutput: []\nExplanation: No value is present in at least two arrays.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums1.length, nums2.length, nums3.length <= 100"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums1[i], nums2[j], nums3[k] <= 100"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-hash-map",children:"Approach 1: Hash Map"}),"\n",(0,r.jsx)(t,{name:"@wkw"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<int> twoOutOfThree(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3) {\n        vector<int> ans;\n        // use hash map to all elements from nums1, nums2, and nums3\n        map<int, int> m;\n        for(auto x : nums1) m[x] = 1;\n        for(auto x : nums2) m[x] = 1;\n        for(auto x : nums3) m[x] = 1;\n        for(auto x : m) {\n            // for each element in hash map, check if it exists in nums1, nums2, and nums3\n            int c1 = 0, c2 = 0, c3 = 0;\n            if (find(nums1.begin(), nums1.end(), x.first) != nums1.end()) c1 = 1;\n            if (find(nums2.begin(), nums2.end(), x.first) != nums2.end()) c2 = 1;\n            if (find(nums3.begin(), nums3.end(), x.first) != nums3.end()) c3 = 1;\n            // if it presents in at least two out of the three arrays,\n            // then add it to ans\n            if (c1 + c2 + c3 >= 2) ans.push_back(x.first);\n        }\n        return ans;\n    }\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},40629:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(30758);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);