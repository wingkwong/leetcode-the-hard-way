"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[67723],{34782:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"0600-0699/valid-palindrome-ii-easy","title":"0680 - Valid Palindrome II (Easy)","description":"Author: @wkw | https://leetcode.com/problems/valid-palindrome-ii/","source":"@site/solutions/0600-0699/0680-valid-palindrome-ii-easy.md","sourceDirName":"0600-0699","slug":"/0600-0699/valid-palindrome-ii-easy","permalink":"/solutions/0600-0699/valid-palindrome-ii-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0600-0699/0680-valid-palindrome-ii-easy.md","tags":[],"version":"current","sidebarPosition":680,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/valid-palindrome-ii/"},"sidebar":"tutorialSidebar","previous":{"title":"0678 - Valid Parenthesis String (Medium)","permalink":"/solutions/0600-0699/valid-parenthesis-string-medium"},"next":{"title":"0682 - Baseball Game (Easy)","permalink":"/solutions/0600-0699/baseball-game-easy"}}');var a=s(86070),i=s(32790);const r={description:"Author: @wkw | https://leetcode.com/problems/valid-palindrome-ii/"},l="0680 - Valid Palindrome II (Easy)",o={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Brute Force",id:"approach-1-brute-force",level:2}];function d(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"0680---valid-palindrome-ii-easy",children:"0680 - Valid Palindrome II (Easy)"})}),"\n",(0,a.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/valid-palindrome-ii",children:"https://leetcode.com/problems/valid-palindrome-ii"})}),"\n",(0,a.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,a.jsxs)(n.p,{children:["Given a string ",(0,a.jsx)(n.code,{children:"s"}),", return ",(0,a.jsx)(n.code,{children:"true"})," ",(0,a.jsx)(n.em,{children:"if the"})," ",(0,a.jsx)(n.code,{children:"s"})," ",(0,a.jsxs)(n.em,{children:["can be palindrome after deleting ",(0,a.jsx)(n.strong,{children:"at most one"})," character from it"]}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'Input: s = "aba"\nOutput: true\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Input: s = \"abca\"\nOutput: true\nExplanation: You could delete the character 'c'.\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'Input: s = "abc"\nOutput: false\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"1 <= s.length <= 10^5"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"s"})," consists of lowercase English letters."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"approach-1-brute-force",children:"Approach 1: Brute Force"}),"\n",(0,a.jsxs)(n.p,{children:["To check if a string is a palindrome, we can use two pointers to compare the character at pointer ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsx)(n.mrow,{children:(0,a.jsx)(n.mi,{children:"i"})}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"0.6595em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",children:"i"})]})})]})," and that at pointer ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsx)(n.mrow,{children:(0,a.jsx)(n.mi,{children:"j"})}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"j"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"0.854em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"})]})})]}),". If they are not same, then it means it is not a palindrome. However, this problem allows us to delete at most one character from it. Therefore, we do the same way. If there is a difference, that means we can potentially delete the one at pointer ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsx)(n.mrow,{children:(0,a.jsx)(n.mi,{children:"i"})}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"0.6595em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",children:"i"})]})})]})," or the one at pointer ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsx)(n.mrow,{children:(0,a.jsx)(n.mi,{children:"j"})}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"j"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"0.854em",verticalAlign:"-0.1944em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"})]})})]}),". We try both case to see if it is possible to form a palindrome."]}),"\n",(0,a.jsx)(s,{name:"@wkw"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    // check palindrome with target range\n    bool palindromeWithRange(string s, int i, int j) {\n        while (i < j) {\n            if (s[i] != s[j]) return false;\n            i++, j--;\n        }\n        return true;\n    }\n\n    bool validPalindrome(string s) {\n        int n = s.size(), i = 0, j = n - 1;\n        while (i < j) {\n            // not same -> potentially delete s[i] or s[j]\n            if (s[i] != s[j]) {\n                // try both case\n                return palindromeWithRange(s, i, j - 1) || palindromeWithRange(s, i + 1, j);\n            }\n            i++, j--;\n        }\n        return true;\n    }\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},32790:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(30758);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);