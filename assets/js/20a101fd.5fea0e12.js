"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[22580],{26080:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"2200-2299/minimum-consecutive-cards-to-pick-up-medium","title":"2260 - Minimum Consecutive Cards to Pick Up (Medium)","description":"Author: @wingkwong, @dhanu084 | https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/","source":"@site/solutions/2200-2299/2260-minimum-consecutive-cards-to-pick-up-medium.md","sourceDirName":"2200-2299","slug":"/2200-2299/minimum-consecutive-cards-to-pick-up-medium","permalink":"/solutions/2200-2299/minimum-consecutive-cards-to-pick-up-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2200-2299/2260-minimum-consecutive-cards-to-pick-up-medium.md","tags":[],"version":"current","sidebarPosition":2260,"frontMatter":{"description":"Author: @wingkwong, @dhanu084 | https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/"},"sidebar":"tutorialSidebar","previous":{"title":"2259 - Remove Digit From Number to Maximize Result (Easy)","permalink":"/solutions/2200-2299/remove-digit-from-number-to-maximize-result-easy"},"next":{"title":"2261 - K Divisible Elements Subarrays (Medium)","permalink":"/solutions/2200-2299/k-divisible-elements-subarrays-medium"}}');var t=s(74848),a=s(28453);const r={description:"Author: @wingkwong, @dhanu084 | https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/"},c="2260 - Minimum Consecutive Cards to Pick Up (Medium)",o={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Hash Map",id:"approach-1-hash-map",level:2}];function m(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{SolutionAuthor:s,TabItem:i,Tabs:r}=n;return s||h("SolutionAuthor",!0),i||h("TabItem",!0),r||h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2260---minimum-consecutive-cards-to-pick-up-medium",children:"2260 - Minimum Consecutive Cards to Pick Up (Medium)"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/",children:"https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["You are given an integer array ",(0,t.jsx)(n.code,{children:"cards"})," where ",(0,t.jsx)(n.code,{children:"cards[i]"})," represents the ",(0,t.jsx)(n.strong,{children:"value"})," of the ",(0,t.jsx)(n.code,{children:"ith"})," card. A pair of cards are ",(0,t.jsx)(n.strong,{children:"matching"})," if the cards have the ",(0,t.jsx)(n.strong,{children:"same"})," value."]}),"\n",(0,t.jsxs)(n.p,{children:["Return ",(0,t.jsxs)(n.em,{children:["the ",(0,t.jsx)(n.strong,{children:"minimum"})," number of ",(0,t.jsx)(n.strong,{children:"consecutive"})," cards you have to pick up to have a pair of ",(0,t.jsx)(n.strong,{children:"matching"})," cards among the picked cards."]})," If it is impossible to have matching cards, return ",(0,t.jsx)(n.code,{children:"-1"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: cards = [3,4,2,3,4,7]\nOutput: 4\nExplanation: We can pick up the cards [3,4,2,3] which contain a matching pair of cards with value 3. Note that picking up the cards [4,2,3,4] is also optimal.\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: cards = [1,0,5,3]\nOutput: -1\nExplanation: There is no way to pick up a set of consecutive cards that contain a pair of matching cards.\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= cards.length <= 10^5"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"0 <= cards[i] <= 10^6"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-hash-map",children:"Approach 1: Hash Map"}),"\n",(0,t.jsxs)(n.p,{children:["Time complexity: ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Space complexity: ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]})," if there are no pairs"]}),"\n",(0,t.jsx)(n.p,{children:"Store the index for each number, check each element with size > 1 and find out the minimum gap between them."}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)(i,{value:"cpp",label:"C++",children:[(0,t.jsx)(s,{name:"@wingkwong"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int minimumCardPickup(vector<int>& cards) {\n        int n = cards.size(), ans = INT_MAX;\n        unordered_map<int, vector<int>> m;\n        // store the indices for each number\n        for (int i = 0; i < n; i++) m[cards[i]].push_back(i);\n        for (auto& x : m) {\n            // a pair needs to have at least 2 elements with same value\n            for (int i = 1; i < x.second.size(); i++) {\n                // calculate the min gap\n                ans = min(ans, x.second[i] - x.second[i - 1] + 1);\n            }\n        }\n        return ans == INT_MAX ? -1 : ans;\n    }\n};\n"})})]}),(0,t.jsxs)(i,{value:"py",label:"Python",children:[(0,t.jsx)(s,{name:"@dhanu084"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"class Solution:\n    def minimumCardPickup(self, cards: List[int]) -> int:\n        seen = {}\n        length = inf\n        n = len(cards)\n\n        for i in range(n):\n            # check if there exists a card with same number\n            if cards[i] in seen:\n                # if present, then it represents a pair\n                # calculate the current lenth and update min length\n                length = min(length, i - seen.get(cards[i]) + 1)\n            # add the card with the index in the dictionary\n            seen[cards[i]] = i\n\n        # if no pair is found length will be inf so return -1\n        return length if length != inf else -1\n"})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(96540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);