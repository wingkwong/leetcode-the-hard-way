"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[9054],{53653:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"2700-2799/ways-to-split-array-into-good-subarrays-medium","title":"2750 - Ways to Split Array Into Good Subarrays (Medium)","description":"Author: @wkw | https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/","source":"@site/solutions/2700-2799/2750-ways-to-split-array-into-good-subarrays-medium.md","sourceDirName":"2700-2799","slug":"/2700-2799/ways-to-split-array-into-good-subarrays-medium","permalink":"/solutions/2700-2799/ways-to-split-array-into-good-subarrays-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2700-2799/2750-ways-to-split-array-into-good-subarrays-medium.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Math","permalink":"/solutions/tags/math"},{"inline":true,"label":"Dynamic Programming","permalink":"/solutions/tags/dynamic-programming"}],"version":"current","sidebarPosition":2750,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/","tags":["Array","Math","Dynamic Programming"]},"sidebar":"tutorialSidebar","previous":{"title":"2709 - Greatest Common Divisor Traversal","permalink":"/solutions/2700-2799/greatest-common-divisor-traversal-hard"},"next":{"title":"2761 - Prime Pairs With Target Sum (Medium)","permalink":"/solutions/2700-2799/prime-pairs-with-target-sum-medium"}}');var r=n(86070),t=n(32790);const i={description:"Author: @wkw | https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/",tags:["Array","Math","Dynamic Programming"]},l="2750 - Ways to Split Array Into Good Subarrays (Medium)",m={},o=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Counting",id:"approach-1-counting",level:2}];function c(s){const e={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,t.R)(),...s.components},{SolutionAuthor:n,TabItem:a,Tabs:i}=e;return n||d("SolutionAuthor",!0),a||d("TabItem",!0),i||d("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"2750---ways-to-split-array-into-good-subarrays-medium",children:"2750 - Ways to Split Array Into Good Subarrays (Medium)"})}),"\n",(0,r.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/",children:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/"})}),"\n",(0,r.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(e.p,{children:["You are given a binary array ",(0,r.jsx)(e.code,{children:"nums"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["A subarray of an array is ",(0,r.jsx)(e.strong,{children:"good"})," if it contains ",(0,r.jsx)(e.strong,{children:"exactly"})," ",(0,r.jsx)(e.strong,{children:"one"})," element with the value ",(0,r.jsx)(e.code,{children:"1"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["Return ",(0,r.jsx)(e.em,{children:"an integer denoting the number of ways to split the array"}),(0,r.jsx)(e.code,{children:"nums"}),(0,r.jsxs)(e.em,{children:["into ",(0,r.jsx)(e.strong,{children:"good"})," subarrays"]}),". As the number may be too large, return it ",(0,r.jsx)(e.strong,{children:"modulo"})," ",(0,r.jsx)(e.code,{children:"1e9 + 7"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["A subarray is a contiguous ",(0,r.jsx)(e.strong,{children:"non-empty"})," sequence of elements within an array."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Input: nums = [0,1,0,0,1]\nOutput: 3\nExplanation: There are 3 ways to split nums into good subarrays:\n- [0,1] [0,0,1]\n- [0,1,0] [0,1]\n- [0,1,0,0] [1]\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Input: nums = [0,1,0]\nOutput: 1\nExplanation: There is 1 way to split nums into good subarrays:\n- [0,1,0]\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.span,{className:"katex",children:[(0,r.jsx)(e.span,{className:"katex-mathml",children:(0,r.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(e.semantics,{children:[(0,r.jsxs)(e.mrow,{children:[(0,r.jsx)(e.mn,{children:"1"}),(0,r.jsx)(e.mo,{children:"<"}),(0,r.jsx)(e.mo,{children:"="}),(0,r.jsx)(e.mi,{children:"n"}),(0,r.jsx)(e.mi,{children:"u"}),(0,r.jsx)(e.mi,{children:"m"}),(0,r.jsx)(e.mi,{children:"s"}),(0,r.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(e.mi,{children:"l"}),(0,r.jsx)(e.mi,{children:"e"}),(0,r.jsx)(e.mi,{children:"n"}),(0,r.jsx)(e.mi,{children:"g"}),(0,r.jsx)(e.mi,{children:"t"}),(0,r.jsx)(e.mi,{children:"h"}),(0,r.jsx)(e.mo,{children:"<"}),(0,r.jsx)(e.mo,{children:"="}),(0,r.jsx)(e.mn,{children:"1"}),(0,r.jsxs)(e.msup,{children:[(0,r.jsx)(e.mn,{children:"0"}),(0,r.jsx)(e.mn,{children:"5"})]})]}),(0,r.jsx)(e.annotation,{encoding:"application/x-tex",children:"1 <= nums.length <= 10^5"})]})})}),(0,r.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(e.span,{className:"mord",children:"1"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(e.span,{className:"mrel",children:"<="}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(e.span,{className:"mord",children:"."}),(0,r.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(e.span,{className:"mrel",children:"<="}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.8141em"}}),(0,r.jsx)(e.span,{className:"mord",children:"1"}),(0,r.jsxs)(e.span,{className:"mord",children:[(0,r.jsx)(e.span,{className:"mord",children:"0"}),(0,r.jsx)(e.span,{className:"msupsub",children:(0,r.jsx)(e.span,{className:"vlist-t",children:(0,r.jsx)(e.span,{className:"vlist-r",children:(0,r.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,r.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,r.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(e.span,{className:"mord mtight",children:"5"})})]})})})})})]})]})]})]})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.span,{className:"katex",children:[(0,r.jsx)(e.span,{className:"katex-mathml",children:(0,r.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(e.semantics,{children:[(0,r.jsxs)(e.mrow,{children:[(0,r.jsx)(e.mn,{children:"0"}),(0,r.jsx)(e.mo,{children:"<"}),(0,r.jsx)(e.mo,{children:"="}),(0,r.jsx)(e.mi,{children:"n"}),(0,r.jsx)(e.mi,{children:"u"}),(0,r.jsx)(e.mi,{children:"m"}),(0,r.jsx)(e.mi,{children:"s"}),(0,r.jsx)(e.mo,{stretchy:"false",children:"["}),(0,r.jsx)(e.mi,{children:"i"}),(0,r.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,r.jsx)(e.mo,{children:"<"}),(0,r.jsx)(e.mo,{children:"="}),(0,r.jsx)(e.mn,{children:"1"})]}),(0,r.jsx)(e.annotation,{encoding:"application/x-tex",children:"0 <= nums[i] <= 1"})]})})}),(0,r.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(e.span,{className:"mord",children:"0"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(e.span,{className:"mrel",children:"<="}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(e.span,{className:"mopen",children:"["}),(0,r.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(e.span,{className:"mclose",children:"]"}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(e.span,{className:"mrel",children:"<="}),(0,r.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(e.span,{className:"base",children:[(0,r.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(e.span,{className:"mord",children:"1"})]})]})]})}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"approach-1-counting",children:"Approach 1: Counting"}),"\n",(0,r.jsx)(i,{children:(0,r.jsxs)(a,{value:"cpp",label:"C++",children:[(0,r.jsx)(n,{name:"@wkw"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int numberOfGoodSubarraySplits(vector<int>& nums) {\n        int M = 1e9 + 7, n = nums.size();\n        long long ans = 1;\n        vector<long long> ones;\n\t\t// we store all the indices `i` where nums[i] is 1\n        for (int i = 0; i < n; i++) if (nums[i] == 1) ones.push_back(i);\n\t\t// if there is no ones, then the answer is obviously zero\n        if (ones.size() == 0) return 0;\n\t\t// for each gap, calculate the numbers of ways (ones[i] - ones[i - 1])\n\t\t// and multiply the answer\n\t\t// and take the mod\n        for (int i = 1; i < ones.size(); i++) (ans *= (ones[i] - ones[i - 1])) %= M;\n        return ans;\n    }\n};\n"})})]})})]})}function h(s={}){const{wrapper:e}={...(0,t.R)(),...s.components};return e?(0,r.jsx)(e,{...s,children:(0,r.jsx)(c,{...s})}):c(s)}function d(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(s,e,n)=>{n.d(e,{R:()=>i,x:()=>l});var a=n(30758);const r={},t=a.createContext(r);function i(s){const e=a.useContext(t);return a.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function l(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(r):s.components||r:i(s.components),a.createElement(t.Provider,{value:e},s.children)}}}]);