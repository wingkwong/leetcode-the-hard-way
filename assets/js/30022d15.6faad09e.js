"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[40128],{85398:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>l,contentTitle:()=>m,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"2800-2899/max-pair-sum-in-an-array-easy","title":"2815 - Max Pair Sum in an Array (Easy)","description":"Author: @wkw | https://leetcode.com/problems/max-pair-sum-in-an-array/","source":"@site/solutions/2800-2899/2815-max-pair-sum-in-an-array-easy.md","sourceDirName":"2800-2899","slug":"/2800-2899/max-pair-sum-in-an-array-easy","permalink":"/solutions/2800-2899/max-pair-sum-in-an-array-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2800-2899/2815-max-pair-sum-in-an-array-easy.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Hash Table","permalink":"/solutions/tags/hash-table"}],"version":"current","sidebarPosition":2815,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/max-pair-sum-in-an-array/","tags":["Array","Hash Table"]},"sidebar":"tutorialSidebar","previous":{"title":"2811 - Check if it is Possible to Split Array (Medium)","permalink":"/solutions/2800-2899/check-if-it-is-possible-to-split-array-medium"},"next":{"title":"2839 - Check if Strings Can be Made Equal With Operations I (Easy)","permalink":"/solutions/2800-2899/check-if-strings-can-be-made-equal-with-operations-i-easy"}}');var i=a(86070),r=a(40629);const t={description:"Author: @wkw | https://leetcode.com/problems/max-pair-sum-in-an-array/",tags:["Array","Hash Table"]},m="2815 - Max Pair Sum in an Array (Easy)",l={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Brute Force",id:"approach-1-brute-force",level:2}];function o(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{SolutionAuthor:a,TabItem:n,Tabs:t}=s;return a||d("SolutionAuthor",!0),n||d("TabItem",!0),t||d("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"2815---max-pair-sum-in-an-array-easy",children:"2815 - Max Pair Sum in an Array (Easy)"})}),"\n",(0,i.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://leetcode.com/problems/max-pair-sum-in-an-array/",children:"https://leetcode.com/problems/max-pair-sum-in-an-array/"})}),"\n",(0,i.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(s.p,{children:["You are given a ",(0,i.jsx)(s.strong,{children:"0-indexed"})," integer array ",(0,i.jsx)(s.code,{children:"nums"}),". You have to find the ",(0,i.jsx)(s.strong,{children:"maximum"})," sum of a pair of numbers from ",(0,i.jsx)(s.code,{children:"nums"})," such that the maximum ",(0,i.jsx)(s.strong,{children:"digit"}),"in both numbers are equal."]}),"\n",(0,i.jsxs)(s.p,{children:["Return ",(0,i.jsx)(s.em,{children:"the maximum sum or"})," ",(0,i.jsx)(s.code,{children:"-1"}),(0,i.jsx)(s.em,{children:"if no such pair exists"}),"."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"Input: nums = [51,71,17,24,42]\nOutput: 88\nExplanation:\nFor i = 1 and j = 2, nums[i] and nums[j] have equal maximum digits with a pair sum of 71 + 17 = 88.\nFor i = 3 and j = 4, nums[i] and nums[j] have equal maximum digits with a pair sum of 24 + 42 = 66.\nIt can be shown that there are no other pairs with equal maximum digits, so the answer is 88.\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"Input: nums = [1,2,3,4]\nOutput: -1\nExplanation: No pair exists in nums with equal maximum digits.\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"2 <= nums.length <= 100"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"1 <= nums[i] <= 10^4"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"approach-1-brute-force",children:"Approach 1: Brute Force"}),"\n",(0,i.jsxs)(s.p,{children:["We brute force all the pairs and use ",(0,i.jsx)(s.code,{children:"mx_ds"})," to find the maximum digits of ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"x"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]}),". If there is a pair ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"j"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"(i, j)"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(s.span,{className:"mclose",children:")"})]})})]})," that both maximum digits are same, then get the maximun sum of ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"u"}),(0,i.jsx)(s.mi,{children:"m"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"i"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{children:"u"}),(0,i.jsx)(s.mi,{children:"m"}),(0,i.jsx)(s.mi,{children:"s"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"j"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"nums[i] + nums[j]"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"+"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})]})]}),"."]}),"\n",(0,i.jsx)(t,{children:(0,i.jsxs)(n,{value:"cpp",label:"C++",children:[(0,i.jsx)(a,{name:"@wkw"}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cpp",children:"class Solution {\npublic:\n    // get the max digit in `x`\n    int mx_ds(int x) {\n        int mx = 0;\n        while (x > 0) {\n            mx = max(mx, x % 10);\n             x /= 10;\n        }\n        return mx;\n    }\n\n    int maxSum(vector<int>& nums) {\n        int n = nums.size(), ans = -1;\n        // brute-force all the pairs\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                // if both max digit are same\n                if (mx_ds(nums[i]) == mx_ds(nums[j])) {\n                    // track the max sum\n                    ans = max(ans, nums[i] + nums[j]);\n                }\n            }\n        }\n        return ans;\n    }\n};\n"})})]})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function d(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},40629:(e,s,a)=>{a.d(s,{R:()=>t,x:()=>m});var n=a(30758);const i={},r=n.createContext(i);function t(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function m(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);