"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[54908],{92195:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>n,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,problems:()=>m,toc:()=>d});const s=JSON.parse('{"id":"data-structure-i","title":"Data Structure (Basic)","description":"https://leetcode.com/study-plan/data-structure","source":"@site/roadmap/data-structure-i.md","sourceDirName":".","slug":"/data-structure-i","permalink":"/roadmap/data-structure-i","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/roadmap/data-structure-i.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Data Structure (Basic)","description":"https://leetcode.com/study-plan/data-structure","hide_table_of_contents":true,"sidebar_position":20,"keywords":["leetcode","study plan","roadmap","Data Structure - I"]},"sidebar":"tutorialSidebar","previous":{"title":"Programming Skills (Basic)","permalink":"/roadmap/programming-skills-i"},"next":{"title":"Heap (Priority Queue)","permalink":"/roadmap/heap"}}');var i=o(86070),r=o(32790);const l={title:"Data Structure (Basic)",description:"https://leetcode.com/study-plan/data-structure",hide_table_of_contents:!0,sidebar_position:20,keywords:["leetcode","study plan","roadmap","Data Structure - I"]},a=void 0,n={},m=[{problemName:"217. Contains Duplicate",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/contains-duplicate",solutionLink:"../../solutions/0200-0299/contains-duplicate-easy"},{problemName:"53. Maximum Subarray",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/maximum-subarray",solutionLink:"../../solutions/0000-0099/maximum-subarray-medium"},{problemName:"1. Two Sum",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/two-sum/",solutionLink:"../../solutions/0000-0099/two-sum"},{problemName:"88. Merge Sorted Array",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/merge-sorted-array",solutionLink:"../../solutions/0000-0099/merge-sorted-array-easy"},{problemName:"350. Intersection of Two Arrays II",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/intersection-of-two-arrays-ii",solutionLink:""},{problemName:"121. Best Time to Buy and Sell Stock",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",solutionLink:"../../solutions/0100-0199/best-time-to-buy-and-sell-stock-easy"},{problemName:"566. Reshape the Matrix",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/reshape-the-matrix",solutionLink:""},{problemName:"118. Pascal's Triangle",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/pascals-triangle",solutionLink:"../../solutions/0100-0199/pascals-triangle-easy"},{problemName:"36. Valid Sudoku",difficulty:"Medium",leetCodeLink:"https://leetcode.com/problems/valid-sudoku/",solutionLink:"../../solutions/0000-0099/valid-sudoku-easy"},{problemName:"74. Search a 2D Matrix",difficulty:"Medium",leetCodeLink:"https://leetcode.com/problems/search-a-2d-matrix",solutionLink:"../../solutions/0000-0099/search-a-2d-matrix-medium"},{problemName:"387. First Unique Character in a String",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/first-unique-character-in-a-string/",solutionLink:""},{problemName:"383. Ransom Note",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/ransom-note/",solutionLink:"../../solutions/0300-0399/ransom-note-easy"},{problemName:"242. Valid Anagram",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/valid-anagram/",solutionLink:"../../solutions/0200-0299/valid-anagram-easy"},{problemName:"141. Linked List Cycle",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/linked-list-cycle/",solutionLink:"../../solutions/0100-0199/linked-list-cycle"},{problemName:"21. Merge Two Sorted Lists",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/merge-two-sorted-lists/",solutionLink:""},{problemName:"203. Remove Linked List Elements",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/remove-linked-list-elements/",solutionLink:""},{problemName:"206. Reverse Linked List",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/reverse-linked-list/",solutionLink:"../../solutions/0200-0299/reverse-linked-list-easy"},{problemName:"83. Remove Duplicates from Sorted List",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/remove-duplicates-from-sorted-list/",solutionLink:""},{problemName:"20. Valid Parentheses",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/valid-parentheses/",solutionLink:"../../solutions/0000-0099/valid-parentheses-easy"},{problemName:"232. Implement Queue using Stacks",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/implement-queue-using-stacks/",solutionLink:""},{problemName:"144. Binary Tree Preorder Traversal",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/binary-tree-preorder-traversal/",solutionLink:"../../solutions/0100-0199/binary-tree-preorder-traversal-easy"},{problemName:"94. Binary Tree Inorder Traversal",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/binary-tree-inorder-traversal/",solutionLink:"../../solutions/0000-0099/binary-tree-inorder-traversal-easy"},{problemName:"145. Binary Tree Postorder Traversal",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/binary-tree-postorder-traversal/",solutionLink:"../../solutions/0100-0199/binary-tree-postorder-traversal-easy"},{problemName:"102. Binary Tree Level Order Traversal",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/binary-tree-level-order-traversal/",solutionLink:"../../solutions/0100-0199/binary-tree-level-order-traversal-medium"},{problemName:"104. Maximum Depth of Binary Tree",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/maximum-depth-of-binary-tree/",solutionLink:"../../solutions/0100-0199/maximum-depth-of-binary-tree-easy"},{problemName:"101. Symmetric Tree",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/symmetric-tree/",solutionLink:"../../solutions/0100-0199/symmetric-tree-easy"},{problemName:"226. Invert Binary Tree",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/invert-binary-tree/",solutionLink:"../../solutions/0200-0299/invert-binary-tree-easy"},{problemName:"112. Path Sum",difficulty:"Easy",leetCodeLink:"https://leetcode.com/problems/path-sum/",solutionLink:"../../solutions/0100-0199/path-sum-easy"}],d=[];function c(e){const{Table:t}={...(0,r.R)(),...e.components};return t||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Table",!0),(0,i.jsx)(t,{title:"",data:m,isSorted:!1,collectionLink:"https://leetcode.com/study-plan/data-structure"})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},32790:(e,t,o)=>{o.d(t,{R:()=>l,x:()=>a});var s=o(30758);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);