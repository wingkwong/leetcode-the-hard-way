"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[49019],{94464:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"1600-1699/richest-customer-wealth-easy","title":"1672 - Richest Customer Wealth (Easy)","description":"Author: @wkw, @radojicic23 | https://leetcode.com/problems/richest-customer-wealth/","source":"@site/solutions/1600-1699/1672-richest-customer-wealth-easy.md","sourceDirName":"1600-1699","slug":"/1600-1699/richest-customer-wealth-easy","permalink":"/solutions/1600-1699/richest-customer-wealth-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1600-1699/1672-richest-customer-wealth-easy.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Matrix","permalink":"/solutions/tags/matrix"}],"version":"current","sidebarPosition":1672,"frontMatter":{"description":"Author: @wkw, @radojicic23 | https://leetcode.com/problems/richest-customer-wealth/","tags":["Array","Matrix"]},"sidebar":"tutorialSidebar","previous":{"title":"1664 - Ways to Make a Fair Array (Medium)","permalink":"/solutions/1600-1699/ways-to-make-a-fair-array-medium"},"next":{"title":"1679 - Max Number of K-Sum Pairs (Medium)","permalink":"/solutions/1600-1699/max-number-of-k-sum-pairs-medium"}}');var r=t(86070),a=t(68906);const c={description:"Author: @wkw, @radojicic23 | https://leetcode.com/problems/richest-customer-wealth/",tags:["Array","Matrix"]},i="1672 - Richest Customer Wealth (Easy)",o={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Max Row Sum",id:"approach-1-max-row-sum",level:2},{value:"Approach 2: Max Row Sum (STL)",id:"approach-2-max-row-sum-stl",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{SolutionAuthor:t,TabItem:s,Tabs:c}=n;return t||d("SolutionAuthor",!0),s||d("TabItem",!0),c||d("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"1672---richest-customer-wealth-easy",children:"1672 - Richest Customer Wealth (Easy)"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/richest-customer-wealth",children:"https://leetcode.com/problems/richest-customer-wealth"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["You are given an ",(0,r.jsx)(n.code,{children:"m x n"})," integer grid ",(0,r.jsx)(n.code,{children:"accounts"})," where ",(0,r.jsx)(n.code,{children:"accounts[i][j]"})," is the amount of money the ",(0,r.jsx)(n.code,{children:"i-th"})," customer has in the ",(0,r.jsx)(n.code,{children:"j-th"})," bank. Return ",(0,r.jsxs)(n.em,{children:["the ",(0,r.jsx)(n.strong,{children:"wealth"})," that the richest customer has."]})]}),"\n",(0,r.jsxs)(n.p,{children:["A customer's ",(0,r.jsx)(n.strong,{children:"wealth"})," is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum ",(0,r.jsx)(n.strong,{children:"wealth"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: accounts = [[1,2,3],[3,2,1]]\nOutput: 6\nExplanation:\n1st customer has wealth = 1 + 2 + 3 = 6\n2nd customer has wealth = 3 + 2 + 1 = 6\nBoth customers are considered the richest with a wealth of 6 each, so return 6.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: accounts = [[1,5],[7,3],[3,5]]\nOutput: 10\nExplanation:\n1st customer has wealth = 6\n2nd customer has wealth = 10\n3rd customer has wealth = 8\nThe 2nd customer is the richest with a wealth of 10.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: accounts = [[2,8,7],[7,1,3],[1,9,5]]\nOutput: 17\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"m == accounts.length"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"n == accounts[i].length"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= m, n <= 50"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= accounts[i][j] <= 100"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-max-row-sum",children:"Approach 1: Max Row Sum"}),"\n",(0,r.jsxs)(n.p,{children:["Given a ",(0,r.jsx)(n.code,{children:"m x n"})," grid, we need to find the maximum row sum. We iterate each row and define ",(0,r.jsx)(n.code,{children:"wealth = 0"}),", then iterate each column, add each ",(0,r.jsx)(n.code,{children:"accounts[i][j]"})," to ",(0,r.jsx)(n.code,{children:"wealth"}),". After that, update the answer if the wealth for the current row is greater than the current maximum sum."]}),"\n",(0,r.jsx)(c,{children:(0,r.jsxs)(s,{value:"cpp",label:"C++",children:[(0,r.jsx)(t,{name:"@wkw"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int maximumWealth(vector<vector<int>>& accounts) {\n        int ans = 0, n = accounts.size(), m = accounts[0].size();\n        for (int i = 0; i < n; i++) {\n            int wealth = 0;\n            for (int j = 0; j < m; j++) {\n                wealth += accounts[i][j];\n            }\n            ans = max(ans, wealth);\n        }\n        return ans;\n    }\n};\n"})}),(0,r.jsxs)(n.p,{children:["Actually we don't need to define ",(0,r.jsx)(n.code,{children:"n"}),", ",(0,r.jsx)(n.code,{children:"m"}),", ",(0,r.jsx)(n.code,{children:"i"})," and ",(0,r.jsx)(n.code,{children:"j"})," if we write in the following style."]}),(0,r.jsx)(t,{name:"@wkw"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int maximumWealth(vector<vector<int>>& accounts) {\n        int ans = 0;\n        for (auto x : accounts) {\n            int wealth = 0;\n            for (auto y : x) wealth += y;\n            ans = max(ans, wealth);\n        }\n        return ans;\n    }\n};\n"})})]})}),"\n",(0,r.jsx)(n.h2,{id:"approach-2-max-row-sum-stl",children:"Approach 2: Max Row Sum (STL)"}),"\n",(0,r.jsx)(n.p,{children:"Same idea as approach 1 but it is using STL."}),"\n",(0,r.jsxs)(c,{children:[(0,r.jsxs)(s,{value:"cpp",label:"C++",children:[(0,r.jsx)(t,{name:"@wkw"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int maximumWealth(vector<vector<int>>& accounts) {\n        int ans = 0;\n        for (auto x : accounts) {\n            ans = max(ans, accumulate(x.begin(), x.end(), 0));\n        }\n        return ans;\n    }\n}\n"})})]}),(0,r.jsxs)(s,{value:"py",label:"Python",children:[(0,r.jsx)(t,{name:"@radojicic23"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"class Solution:\n    def maximumWealth(self, accounts: List[List[int]]) -> int:\n        res = 0\n        for i in accounts:\n            res = max(res, sum(i))\n        return res\n"})})]}),(0,r.jsxs)(s,{value:"js",label:"JavaScript",children:[(0,r.jsx)(t,{name:"@radojicic23"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number[][]} accounts\n * @return {number}\n */\nvar maximumWealth = function (accounts) {\n  let ans = 0;\n  for (i of accounts) {\n    ans = Math.max(ans, sum(i));\n  }\n  return ans;\n};\n\nfunction sum(arr) {\n  let res = 0;\n  for (i of arr) {\n    res += i;\n  }\n  return res;\n}\n"})})]})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(30758);const r={},a=s.createContext(r);function c(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);