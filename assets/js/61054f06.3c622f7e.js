"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[35929],{14773:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"0000-0099/longest-common-prefix-easy","title":"0014 - Longest Common Prefix (Easy)","description":"Author: @vigneshshiv, @radojicic23 | https://leetcode.com/problems/longest-common-prefix/","source":"@site/solutions/0000-0099/0014-longest-common-prefix-easy.md","sourceDirName":"0000-0099","slug":"/0000-0099/longest-common-prefix-easy","permalink":"/solutions/0000-0099/longest-common-prefix-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0000-0099/0014-longest-common-prefix-easy.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"description":"Author: @vigneshshiv, @radojicic23 | https://leetcode.com/problems/longest-common-prefix/"},"sidebar":"tutorialSidebar","previous":{"title":"0013 - Roman to Integer (Easy)","permalink":"/solutions/0000-0099/roman-to-integer-easy"},"next":{"title":"0017 - Letter Combinations of a Phone Number (Medium)","permalink":"/solutions/0000-0099/letter-combinations-of-a-phone-number-medium"}}');var t=n(86070),a=n(40629);const i={description:"Author: @vigneshshiv, @radojicic23 | https://leetcode.com/problems/longest-common-prefix/"},l="0014 - Longest Common Prefix (Easy)",c={},o=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sorting",id:"approach-1-sorting",level:2},{value:"Approach 2: Linear Search",id:"approach-2-linear-search",level:2}];function h(s){const e={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...s.components},{SolutionAuthor:n,TabItem:r,Tabs:i}=e;return n||d("SolutionAuthor",!0),r||d("TabItem",!0),i||d("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"0014---longest-common-prefix-easy",children:"0014 - Longest Common Prefix (Easy)"})}),"\n",(0,t.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://leetcode.com/problems/longest-common-prefix/",children:"https://leetcode.com/problems/longest-common-prefix/"})}),"\n",(0,t.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsx)(e.p,{children:"Write a function to find the longest common prefix string amongst an array of strings."}),"\n",(0,t.jsxs)(e.p,{children:["If there is no common prefix, return an empty string ",(0,t.jsx)(e.code,{children:'""'}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'Input: strs = ["flower","flow","flight"]\nOutput: "fl"\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'Input: strs = ["dog","racecar","car"]\nOutput: ""\nExplanation: There is no common prefix among the input strings.\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"1 <= strs.length <= 200"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"0 <= strs[i].length <= 200"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"strs[i]"})," consists of only lowercase English letters."]}),"\n"]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(e.h2,{id:"approach-1-sorting",children:"Approach 1: Sorting"}),"\n",(0,t.jsx)(e.p,{children:"Sorting becomes handy to solve this problem, after sorting strings ordered in lexicographic order."}),"\n",(0,t.jsxs)(e.p,{children:["Since we need to find the longest common prefix of the all words, The first char of ",(0,t.jsx)(e.strong,{children:"each word in the array"}),", should be same. Following that the 2nd char and 3rd char and it continues till last char."]}),"\n",(0,t.jsxs)(e.p,{children:["In the example 1, all of first char starts with ",(0,t.jsx)(e.code,{children:"'f'"})," and then ",(0,t.jsx)(e.code,{children:"'l'"}),", but next char ",(0,t.jsx)(e.code,{children:"'o'"})," match with 2 words, not with ",(0,t.jsx)(e.code,{children:"flight"}),". The same goes to example 2, the very first character of each word is not matching, so there is no common prefix found."]}),"\n",(0,t.jsxs)(e.p,{children:["Instead of comparing every word with other words in the array, starting from first, which makes algorithm to run ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsxs)(e.msup,{children:[(0,t.jsx)(e.mi,{children:"n"}),(0,t.jsx)(e.mn,{children:"2"})]}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n^2)"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsxs)(e.span,{className:"mord",children:[(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(e.span,{className:"msupsub",children:(0,t.jsx)(e.span,{className:"vlist-t",children:(0,t.jsx)(e.span,{className:"vlist-r",children:(0,t.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,t.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,t.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(e.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,t.jsx)(e.span,{className:"mclose",children:")"})]})})]})," time. We can do better by comparing first and last word in the array to find the common prefix."]}),"\n",(0,t.jsx)(e.p,{children:"Since strings are ordered, the least common prefix we can find with first and last word in the array."}),"\n",(0,t.jsxs)(e.p,{children:["Time Complexity: ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mi,{children:"n"}),(0,t.jsx)(e.mi,{children:"l"}),(0,t.jsx)(e.mi,{children:"o"}),(0,t.jsx)(e.mi,{children:"g"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mi,{children:"n"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n log(n))"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"o"}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(e.span,{className:"mclose",children:"))"})]})})]}),", where ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsx)(e.mrow,{children:(0,t.jsx)(e.mi,{children:"n"})}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})," - # of words in the array"]}),"\n",(0,t.jsxs)(e.p,{children:["Space complexity: ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mn,{children:"1"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord",children:"1"}),(0,t.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsxs)(r,{value:"java",label:"Java",children:[(0,t.jsx)(n,{name:"@vigneshshiv"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        int n = strs.length;\n        if (n == 0) return "";\n        // Sorting provides lexicographic order of strings.\n        Arrays.sort(strs);\n        String first = strs[0], last = strs[n - 1];\n        int i = 0;\n        while (i < first.length()) {\n            if (first.charAt(i) == last.charAt(i)) {\n                i += 1;\n            } else {\n                break;\n            }\n        }\n        return i == 0 ? "" : first.substring(0, i);\n    }\n}\n'})})]}),(0,t.jsxs)(r,{value:"js",label:"JavaScript",children:[(0,t.jsx)(n,{name:"@radojicic23"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"/**\n * @param {string[]} strs\n * @return {string}\n */\nvar longestCommonPrefix = function (strs) {\n  if (strs.length == 0) return '';\n  strs.sort();\n  let first = strs[0];\n  let last = strs[strs.length - 1];\n  let i = 0;\n  while (i < first.length) {\n    if (first.charAt(i) == last.charAt(i)) {\n      i += 1;\n    } else {\n      break;\n    }\n  }\n  return i == 0 ? '' : first.slice(0, i);\n};\n"})})]}),(0,t.jsxs)(r,{value:"py",label:"Python",children:[(0,t.jsx)(n,{name:"@radojicic23"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:'class Solution:\n    def longestCommonPrefix(self, strs: List[str]) -> str:\n        if len(strs) == 0: return\n        strs.sort()\n        first, last = strs[0], strs[-1]\n        i = 0\n        while i < len(first):\n            if first[i] == last[i]:\n                i += 1\n            else:\n                break\n        return "" if i == 0 else first[:i]\n'})})]}),(0,t.jsxs)(r,{value:"cpp",label:"C++",children:[(0,t.jsx)(n,{name:"@radojicic23"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'class Solution {\npublic:\n    string longestCommonPrefix(vector<string>& strs) {\n        if (!strs.size()) {\n            return "";\n        }\n        sort(strs.begin(), strs.end());\n        string ans = "";\n        string first = strs[0];\n        string last = strs[strs.size() - 1];\n        for (int i = 0; i < first.size(); i++) {\n            if (first[i] == last[i]) {\n                ans += first[i];\n            } else {\n                break;\n            }\n        }\n        return ans;\n    }\n};\n'})})]})]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(e.h2,{id:"approach-2-linear-search",children:"Approach 2: Linear Search"}),"\n",(0,t.jsx)(e.p,{children:"Compare any two words, find the common prefix and keep moving forward with the next word in the array, at the end we have found the common prefix."}),"\n",(0,t.jsxs)(e.p,{children:["In the middle, if we find a common prefix is ",(0,t.jsx)(e.code,{children:'""'})," then break the loop and return it."]}),"\n",(0,t.jsxs)(e.p,{children:["Time complexity: ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mi,{children:"n"}),(0,t.jsx)(e.mo,{children:"\u2217"}),(0,t.jsx)(e.mi,{children:"s"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n * s)"})]})})}),(0,t.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(e.span,{className:"mbin",children:"\u2217"}),(0,t.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),", where n - # of elements in the array, s - length of the substring"]}),"\n",(0,t.jsxs)(e.p,{children:["Space complexity: ",(0,t.jsxs)(e.span,{className:"katex",children:[(0,t.jsx)(e.span,{className:"katex-mathml",children:(0,t.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(e.semantics,{children:[(0,t.jsxs)(e.mrow,{children:[(0,t.jsx)(e.mi,{children:"O"}),(0,t.jsx)(e.mo,{stretchy:"false",children:"("}),(0,t.jsx)(e.mn,{children:"1"}),(0,t.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,t.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(e.span,{className:"base",children:[(0,t.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(e.span,{className:"mopen",children:"("}),(0,t.jsx)(e.span,{className:"mord",children:"1"}),(0,t.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,t.jsx)(i,{children:(0,t.jsxs)(r,{value:"java",label:"Java",children:[(0,t.jsx)(n,{name:"@vigneshshiv"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-java",children:'class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        if (strs.length == 0) return "";\n        String word = strs[0];\n        for (int i = 1; i < strs.length; i++) {\n            // Keep minimize the prefix word (previous) which match starting position with the current word.\n            while (!strs[i].startsWith(word)) {\n                word = word.substring(0, word.length() - 1);\n            }\n            // If word has no matching prefix with the current word, then there is no common prefix,\n            // which implies there won\'t be any common prefix in the subsequent non-processed words.\n            if ("".equals(word)) {\n                return "";\n            }\n        }\n        return word;\n    }\n}\n'})})]})})]})}function m(s={}){const{wrapper:e}={...(0,a.R)(),...s.components};return e?(0,t.jsx)(e,{...s,children:(0,t.jsx)(h,{...s})}):h(s)}function d(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}},40629:(s,e,n)=>{n.d(e,{R:()=>i,x:()=>l});var r=n(30758);const t={},a=r.createContext(t);function i(s){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function l(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(t):s.components||t:i(s.components),r.createElement(a.Provider,{value:e},s.children)}}}]);