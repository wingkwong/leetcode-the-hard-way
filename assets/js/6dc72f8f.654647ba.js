"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[18081],{1688:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"2600-2699/prime-in-diagonal-easy","title":"2614 - Prime In Diagonal (Easy)","description":"Author: @wingkwong | https://leetcode.com/problems/prime-in-diagonal/","source":"@site/solutions/2600-2699/2614-prime-in-diagonal-easy.md","sourceDirName":"2600-2699","slug":"/2600-2699/prime-in-diagonal-easy","permalink":"/solutions/2600-2699/prime-in-diagonal-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2600-2699/2614-prime-in-diagonal-easy.md","tags":[],"version":"current","sidebarPosition":2614,"frontMatter":{"description":"Author: @wingkwong | https://leetcode.com/problems/prime-in-diagonal/"},"sidebar":"tutorialSidebar","previous":{"title":"2610 - Convert an Array Into a 2D Array With Conditions (Medium)","permalink":"/solutions/2600-2699/convert-an-array-into-a-2d-array-with-conditions-medium"},"next":{"title":"2615 - Sum of Distances (Medium)","permalink":"/solutions/2600-2699/sum-of-distances-medium"}}');var t=i(74848),s=i(28453);const o={description:"Author: @wingkwong | https://leetcode.com/problems/prime-in-diagonal/"},a="2614 - Prime In Diagonal (Easy)",l={},d=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Check Prime",id:"approach-1-check-prime",level:2}];function c(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components},{SolutionAuthor:i,TabItem:r,Tabs:o}=e;return i||m("SolutionAuthor",!0),r||m("TabItem",!0),o||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"2614---prime-in-diagonal-easy",children:"2614 - Prime In Diagonal (Easy)"})}),"\n",(0,t.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://leetcode.com/problems/prime-in-diagonal/",children:"https://leetcode.com/problems/prime-in-diagonal/"})}),"\n",(0,t.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(e.p,{children:["You are given a 0-indexed two-dimensional integer array ",(0,t.jsx)(e.code,{children:"nums"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["Return ",(0,t.jsxs)(e.em,{children:["the largest ",(0,t.jsx)(e.strong,{children:"prime"})," number that lies on at least one of the ",(0,t.jsx)(e.strong,{children:"diagonals"})," of"]}),(0,t.jsx)(e.code,{children:"nums"}),". In case, no prime is present on any of the diagonals, ",(0,t.jsx)(e.em,{children:"return 0."})]}),"\n",(0,t.jsx)(e.p,{children:"Note that:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["An integer is ",(0,t.jsx)(e.strong,{children:"prime"})," if it is greater than ",(0,t.jsx)(e.code,{children:"1"})," and has no positive integer divisors other than ",(0,t.jsx)(e.code,{children:"1"})," and itself."]}),"\n",(0,t.jsxs)(e.li,{children:["An integer ",(0,t.jsx)(e.code,{children:"val"})," is on one of the",(0,t.jsx)(e.strong,{children:"diagonals"})," of ",(0,t.jsx)(e.code,{children:"nums"})," if there exists an integer ",(0,t.jsx)(e.code,{children:"i"})," for which ",(0,t.jsx)(e.code,{children:"nums[i][i] = val"})," or an ",(0,t.jsx)(e.code,{children:"i"})," for which ",(0,t.jsx)(e.code,{children:"nums[i][nums.length - i - 1]= val"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["In the above diagram, one diagonal is ",(0,t.jsx)(e.strong,{children:"[1,5,9]"})," and another diagonal is**[3,5,7]**."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Input: nums = [[1,2,3],[5,6,7],[9,10,11]]\nOutput: 11\nExplanation: The numbers 1, 3, 6, 9, and 11 are the only numbers present on at least one of the diagonals. Since 11 is the largest prime, we return 11.\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Input: nums = [[1,2,3],[5,17,7],[9,11,10]]\nOutput: 17\nExplanation: The numbers 1, 3, 9, 10, and 17 are all present on at least one of the diagonals. 17 is the largest prime, so we return 17.\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"1 <= nums.length <= 300"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"nums.length == numsi.length"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"1 <= nums[i][j]\xa0<= 4*106"})}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"approach-1-check-prime",children:"Approach 1: Check Prime"}),"\n",(0,t.jsx)(o,{children:(0,t.jsxs)(r,{value:"cpp",label:"C++",children:[(0,t.jsx)(i,{name:"@wingkwong"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int isPrime(int n) {\n        if (n <= 1) return 0;\n        if (n <= 3) return 1;\n        if (n % 2 == 0 || n % 3 == 0) return 0;\n        for (int i = 5; i * i <= n; i = i + 6) {\n          if (n % i == 0 || n % (i + 2) == 0) {\n            return 0;\n          }\n        } \n        return 1;\n    }\n    \n    int diagonalPrime(vector<vector<int>>& nums) {\n        int ans = 0, n = nums.size();\n        for (int i = 0; i < n; i++) {\n            // check if the number on main diagonal is prime\n            if (isPrime(nums[i][i])) ans = max(ans, nums[i][i]);\n            // check if the number on anti diagonal is prime\n            if (isPrime(nums[i][n - i - 1])) ans = max(ans, nums[i][n - i - 1]);\n        }\n        return ans;\n    }\n};\n"})})]})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}function m(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var r=i(96540);const t={},s=r.createContext(t);function o(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);