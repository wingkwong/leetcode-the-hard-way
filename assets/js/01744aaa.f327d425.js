"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[98728],{41730:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"1400-1499/path-crossing-easy","title":"1496 - Path Crossing (Easy)","description":"Author: @jaffar, @jit, @wkw | https://leetcode.com/problems/path-crossing/","source":"@site/solutions/1400-1499/1496-path-crossing-easy.md","sourceDirName":"1400-1499","slug":"/1400-1499/path-crossing-easy","permalink":"/solutions/1400-1499/path-crossing-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1400-1499/1496-path-crossing-easy.md","tags":[{"inline":true,"label":"Hash Table","permalink":"/solutions/tags/hash-table"},{"inline":true,"label":"String","permalink":"/solutions/tags/string"}],"version":"current","sidebarPosition":1496,"frontMatter":{"description":"Author: @jaffar, @jit, @wkw | https://leetcode.com/problems/path-crossing/","tags":["Hash Table","String"]},"sidebar":"tutorialSidebar","previous":{"title":"1494 - Parallel Courses II (Hard)","permalink":"/solutions/1400-1499/parallel-courses-ii-hard"},"next":{"title":"1500 - 1599","permalink":"/solutions/category/1500---1599"}}');var t=n(86070),i=n(68906);const r={description:"Author: @jaffar, @jit, @wkw | https://leetcode.com/problems/path-crossing/",tags:["Hash Table","String"]},l="1496 - Path Crossing (Easy)",c={},o=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Set",id:"approach-1-set",level:2}];function h(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:n,TabItem:a,Tabs:r}=s;return n||m("SolutionAuthor",!0),a||m("TabItem",!0),r||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"1496---path-crossing-easy",children:"1496 - Path Crossing (Easy)"})}),"\n",(0,t.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://leetcode.com/problems/path-crossing/",children:"https://leetcode.com/problems/path-crossing/"})}),"\n",(0,t.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(s.p,{children:["Given a string ",(0,t.jsx)(s.code,{children:"path"}),", where ",(0,t.jsx)(s.code,{children:"path[i] = 'N'"}),", ",(0,t.jsx)(s.code,{children:"'S'"}),", ",(0,t.jsx)(s.code,{children:"'E'"})," or ",(0,t.jsx)(s.code,{children:"'W'"}),", each representing moving one unit north, south, east, or west, respectively. You start at the origin ",(0,t.jsx)(s.code,{children:"(0, 0)"})," on a 2D plane and walk on the path specified by ",(0,t.jsx)(s.code,{children:"path"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Return ",(0,t.jsx)(s.code,{children:"true"})," ",(0,t.jsx)(s.em,{children:"if the path crosses itself at any point, that is, if at any time you are on a location you have previously visited"}),". Return ",(0,t.jsx)(s.code,{children:"false"})," otherwise."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: path = "NES"\nOutput: false\nExplanation: Notice that the path doesn\'t cross any point more than once.\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: path = "NESWW"\nOutput: true\nExplanation: Notice that the path visits the origin twice.\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"1"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mi,{children:"p"}),(0,t.jsx)(s.mi,{children:"a"}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,t.jsx)(s.mi,{children:"l"}),(0,t.jsx)(s.mi,{children:"e"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mi,{children:"g"}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mn,{children:"1"}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mn,{children:"0"}),(0,t.jsx)(s.mn,{children:"4"})]})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= path.length <= 10^4"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"p"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mord",children:"."}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord",children:"0"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:"4"})})]})})})})})]})]})]})]})}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"path[i]"})," is either ",(0,t.jsx)(s.code,{children:"'N'"}),", ",(0,t.jsx)(s.code,{children:"'S'"}),", ",(0,t.jsx)(s.code,{children:"'E'"}),", or ",(0,t.jsx)(s.code,{children:"'W'"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"approach-1-set",children:"Approach 1: Set"}),"\n",(0,t.jsxs)(s.p,{children:["We can keep track of the current position on a 2D plane and check if path crosses itself by storing visited positions in a Set. If a visited position is encountered again, it means the path has crossed itself, then we return ",(0,t.jsx)(s.code,{children:"true"}),". Otherwise, we returns ",(0,t.jsx)(s.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)(a,{value:"py",label:"Python",children:[(0,t.jsx)(n,{name:"@jaffar"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:"class Solution:\n    def isPathCrossing(self, path: str) -> bool:\n        x, y = 0, 0\n        visited = {(x, y)}\n        for move in path:\n            if move == 'N': y += 1\n            elif move == 'S': y -= 1\n            elif move == 'E': x += 1\n            elif move == 'W': x -= 1\n            if (x, y) in visited:\n                return True\n            visited.add((x, y))\n        return False\n"})})]}),(0,t.jsxs)(a,{value:"scala",label:"Scala",children:[(0,t.jsx)(n,{name:"@jit"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"object Solution {\n  // Check if the coordinates traversed has duplicates\n  def isPathCrossing(path: String): Boolean = {\n    val coords = path.scanLeft((0, 0)) {\n      case ((x, y), 'N') => (x, y + 1)\n      case ((x, y), 'E') => (x + 1, y)\n      case ((x, y), 'S') => (x, y - 1)\n      case ((x, y), 'W') => (x - 1, y)\n    }\n    coords.distinct.size != coords.size\n  }\n}\n"})})]}),(0,t.jsxs)(a,{value:"cpp",label:"C++",children:[(0,t.jsx)(n,{name:"@wkw"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool isPathCrossing(string path) {\n        int x = 0, y = 0;\n        set<pair<int, int>> s;\n        s.insert({x, y});\n        for (char c : path) {\n            if (c == 'N') y += 1;\n            else if (c == 'S') y -= 1;\n            else if (c == 'E') x += 1;\n            else x -= 1;\n            if (s.find({x, y}) != s.end()) return true;\n            s.insert({x, y});\n        }\n        return false;\n    }\n};\n"})})]})]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function m(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var a=n(30758);const t={},i=a.createContext(t);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);