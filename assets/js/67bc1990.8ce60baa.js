"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[65718],{36150:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"0000-0099/sqrt-x-easy","title":"0069 - Sqrt(x) (Easy)","description":"Author: @wkw, @radojicic23 | https://leetcode.com/problems/sqrtx/","source":"@site/solutions/0000-0099/0069-sqrt-x-easy.md","sourceDirName":"0000-0099","slug":"/0000-0099/sqrt-x-easy","permalink":"/solutions/0000-0099/sqrt-x-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0000-0099/0069-sqrt-x-easy.md","tags":[],"version":"current","sidebarPosition":69,"frontMatter":{"description":"Author: @wkw, @radojicic23 | https://leetcode.com/problems/sqrtx/"},"sidebar":"tutorialSidebar","previous":{"title":"0067 - Add Binary (easy)","permalink":"/solutions/0000-0099/add-binary-easy"},"next":{"title":"0070 - Climbing Stairs (Easy)","permalink":"/solutions/0000-0099/climbing-stairs-easy"}}');var i=t(86070),s=t(40629);const l={description:"Author: @wkw, @radojicic23 | https://leetcode.com/problems/sqrtx/"},o="0069 - Sqrt(x) (Easy)",a={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SolutionAuthor:t,TabItem:r,Tabs:l}=n;return t||x("SolutionAuthor",!0),r||x("TabItem",!0),l||x("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"0069---sqrtx-easy",children:"0069 - Sqrt(x) (Easy)"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/sqrtx/",children:"https://leetcode.com/problems/sqrtx/"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(n.p,{children:["Given a non-negative integer ",(0,i.jsx)(n.code,{children:"x"}),", compute and return ",(0,i.jsx)(n.em,{children:"the square root of"})," ",(0,i.jsx)(n.code,{children:"x"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Since the return type is an integer, the decimal digits are ",(0,i.jsx)(n.strong,{children:"truncated"}),", and only ",(0,i.jsx)(n.strong,{children:"the integer part"})," of the result is returned."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," You are not allowed to use any built-in exponent function or operator, such as ",(0,i.jsx)(n.code,{children:"pow(x, 0.5)"})," or ",(0,i.jsx)(n.code,{children:"x ** 0.5"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: x = 4\nOutput: 2\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: x = 8\nOutput: 2\nExplanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"0 <= x <= 2^31 - 1"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"approach-1-binary-search",children:"Approach 1: Binary Search"}),"\n",(0,i.jsx)(n.admonition,{title:"Prerequisite",type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../../tutorials/basic-topics/binary-search",children:"Binary Search"})}),"\n"]})}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsxs)(r,{value:"c++",label:"C++",children:[(0,i.jsx)(t,{name:"@wkw"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int mySqrt(int x) {\n        // init possible range\n        long long l = 0, r = x;\n        while (l < r) {\n            long long m = l + (r - l + 1) / 2;\n            // exclude m\n            if (x < m * m) r = m - 1;\n            // include m\n            else l = m;\n        }\n        return l;\n    }\n};\n"})})]}),(0,i.jsxs)(r,{value:"py",label:"Python",children:[(0,i.jsx)(t,{name:"@radojicic23"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"class Solution:\n    def mySqrt(self, x: int) -> int:\n        left = 0\n        right = x\n        while left <= right:\n            mid = (left + right) // 2\n            if x < mid * mid:\n                right = mid - 1\n            elif x > mid * mid:\n                left = mid + 1\n            else:\n                return mid\n        return right\n"})})]}),(0,i.jsxs)(r,{value:"js",label:"JavaScript",children:[(0,i.jsx)(t,{name:"@radojicic23"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number} x\n * @return {number}\n */\nvar mySqrt = function (x) {\n  let left = 0;\n  let right = x;\n  while (left <= right) {\n    let mid = Math.floor((left + right) / 2);\n    if (x < mid * mid) {\n      right = mid - 1;\n    } else if (x > mid * mid) {\n      left = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n  return right;\n};\n"})})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},40629:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(30758);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);