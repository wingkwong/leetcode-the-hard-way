"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[30290],{33929:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"2100-2199/adding-spaces-to-a-string-medium","title":"2109 - Adding Spaces to a String (Medium)","description":"Author: @wkw | https://leetcode.com/problems/adding-spaces-to-a-string/","source":"@site/solutions/2100-2199/2109-adding-spaces-to-a-string-medium.md","sourceDirName":"2100-2199","slug":"/2100-2199/adding-spaces-to-a-string-medium","permalink":"/solutions/2100-2199/adding-spaces-to-a-string-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2109-adding-spaces-to-a-string-medium.md","tags":[],"version":"current","sidebarPosition":2109,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/adding-spaces-to-a-string/"},"sidebar":"tutorialSidebar","previous":{"title":"2108 - Find First Palindromic String in the Array (Easy)","permalink":"/solutions/2100-2199/find-first-palindromic-string-in-the-array-easy"},"next":{"title":"2110 - Number of Smooth Descent Periods of a Stock (Medium)","permalink":"/solutions/2100-2199/number-of-smooth-descent-periods-of-a-stock-medium"}}');var i=s(86070),r=s(40629);const o={description:"Author: @wkw | https://leetcode.com/problems/adding-spaces-to-a-string/"},c="2109 - Adding Spaces to a String (Medium)",d={},a=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Two Pointers",id:"approach-1-two-pointers",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{SolutionAuthor:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"2109---adding-spaces-to-a-string-medium",children:"2109 - Adding Spaces to a String (Medium)"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/adding-spaces-to-a-string/",children:"https://leetcode.com/problems/adding-spaces-to-a-string/"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(n.p,{children:["You are given a ",(0,i.jsx)(n.strong,{children:"0-indexed"})," string ",(0,i.jsx)(n.code,{children:"s"})," and a ",(0,i.jsx)(n.strong,{children:"0-indexed"})," integer array ",(0,i.jsx)(n.code,{children:"spaces"})," that describes the indices in the original string where spaces will be added. Each space should be inserted ",(0,i.jsx)(n.strong,{children:"before"})," the character at the given index."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For example, given ",(0,i.jsx)(n.code,{children:'s = "EnjoyYourCoffee"'})," and ",(0,i.jsx)(n.code,{children:"spaces = [5, 9]"}),", we place spaces before ",(0,i.jsx)(n.code,{children:"'Y'"})," and ",(0,i.jsx)(n.code,{children:"'C'"}),", which are at indices ",(0,i.jsx)(n.code,{children:"5"})," and ",(0,i.jsx)(n.code,{children:"9"})," respectively. Thus, we obtain ",(0,i.jsx)(n.code,{children:'"Enjoy`` '}),(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Y"})}),(0,i.jsx)(n.code,{children:"our`` "}),(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"C"})}),(0,i.jsx)(n.code,{children:'offee"'}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return **** _the modified string **after** the spaces have been added._"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Input: s = "LeetcodeHelpsMeLearn", spaces = [8,13,15]\nOutput: "Leetcode Helps Me Learn"\nExplanation:\nThe indices 8, 13, and 15 correspond to the underlined characters in "LeetcodeHelpsMeLearn".\nWe then place spaces before those characters.\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Input: s = "icodeinpython", spaces = [1,5,7,9]\nOutput: "i code in py thon"\nExplanation:\nThe indices 1, 5, 7, and 9 correspond to the underlined characters in "icodeinpython".\nWe then place spaces before those characters.\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Input: s = "spacing", spaces = [0,1,2,3,4,5,6]\nOutput: " s p a c i n g"\nExplanation:\nWe are also able to place spaces before the first character of the string.\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"1 <= s.length <= 3 * 10^5"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"s"})," consists only of lowercase and uppercase English letters."]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"1 <= spaces.length <= 3 * 10^5"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"0 <= spaces[i] <= s.length - 1"})}),"\n",(0,i.jsxs)(n.li,{children:["All the values of ",(0,i.jsx)(n.code,{children:"spaces"})," are ",(0,i.jsx)(n.strong,{children:"strictly increasing"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"approach-1-two-pointers",children:"Approach 1: Two Pointers"}),"\n",(0,i.jsxs)(n.p,{children:["We iterate the string using pointer ",(0,i.jsx)(n.code,{children:"i"})," and iterate spaces using pointer ",(0,i.jsx)(n.code,{children:"j"}),". If ",(0,i.jsx)(n.code,{children:"i"})," is equal to ",(0,i.jsx)(n.code,{children:"spaces[j]"})," , then we need to add a space there and increase pointer ",(0,i.jsx)(n.code,{children:"j"}),"."]}),"\n",(0,i.jsx)(s,{name:"@wkw"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'class Solution {\npublic:\n    string addSpaces(string s, vector<int>& spaces) {\n        string ans;\n        int j = 0, m = spaces.size();\n        for (int i = 0; i < s.size(); i++) {\n            if (j < m && i == spaces[j]) ans += " ", j++;\n            ans += s[i];\n        }\n        return ans;\n    }\n};\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},40629:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(30758);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);