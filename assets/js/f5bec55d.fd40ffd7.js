"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[11380],{3213:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"graph-theory/minimum-spanning-tree","title":"Minimum Spanning Tree","description":"A minimum spanning tree is a subset of the edges of a connected undirected graph with the minimum possible total edge weight and it does not contain any cycles.","source":"@site/tutorials/graph-theory/minimum-spanning-tree.md","sourceDirName":"graph-theory","slug":"/graph-theory/minimum-spanning-tree","permalink":"/tutorials/graph-theory/minimum-spanning-tree","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/tutorials/graph-theory/minimum-spanning-tree.md","tags":[],"version":"current","frontMatter":{"title":"Minimum Spanning Tree","description":"A minimum spanning tree is a subset of the edges of a connected undirected graph with the minimum possible total edge weight and it does not contain any cycles.","hide_table_of_contents":true,"keywords":["leetcode","tutorial","minimum spanning tree","mst","algorithm"]},"sidebar":"tutorialSidebar","previous":{"title":"Lowest Common Ancestor(LCA)","permalink":"/tutorials/graph-theory/lca"},"next":{"title":"Tarjan\'s Algorithm","permalink":"/tutorials/graph-theory/tarjans-algorithm"}}');var r=n(86070),o=n(68906);const a={title:"Minimum Spanning Tree",description:"A minimum spanning tree is a subset of the edges of a connected undirected graph with the minimum possible total edge weight and it does not contain any cycles.",hide_table_of_contents:!0,keywords:["leetcode","tutorial","minimum spanning tree","mst","algorithm"]},s=void 0,l={},h=[{value:"Overview",id:"overview",level:2},{value:"Kruskal&#39;s Algorithm",id:"kruskals-algorithm",level:3},{value:"Prim&#39;s Algorithm",id:"prims-algorithm",level:3},{value:"Boruvka&#39;s Algorithm",id:"boruvkas-algorithm",level:3}];function m(e){const t={a:"a",h2:"h2",h3:"h3",p:"p",...(0,o.R)(),...e.components},{TutorialCredits:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("TutorialCredits",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n,{authors:"@wkw"}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"A Minimum Spanning Tree (MST) is a subset of the edges of a connected, undirected graph that connects all the vertices together, without any cycles and with the minimum possible total edge weight. There are different algorithms that can be used to find the MST of a graph, such as Kruskal's algorithm, Prim's algorithm and Boruvka's algorithm."}),"\n",(0,r.jsx)(t.h3,{id:"kruskals-algorithm",children:"Kruskal's Algorithm"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"../graph-theory/kruskals-algorithm",children:"See Here"})}),"\n",(0,r.jsx)(t.h3,{id:"prims-algorithm",children:"Prim's Algorithm"}),"\n",(0,r.jsx)(t.p,{children:"Not Available Yet"}),"\n",(0,r.jsx)(t.h3,{id:"boruvkas-algorithm",children:"Boruvka's Algorithm"}),"\n",(0,r.jsx)(t.p,{children:"Not Available Yet"})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},68906:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(30758);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);