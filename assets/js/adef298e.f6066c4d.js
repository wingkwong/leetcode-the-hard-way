"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[69951],{47372:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"0600-0699/can-place-flowers-easy","title":"0605 - Can Place Flowers (Easy)","description":"Author: @vigneshshiv | https://leetcode.com/problems/can-place-flowers/","source":"@site/solutions/0600-0699/0605-can-place-flowers-easy.md","sourceDirName":"0600-0699","slug":"/0600-0699/can-place-flowers-easy","permalink":"/solutions/0600-0699/can-place-flowers-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0600-0699/0605-can-place-flowers-easy.md","tags":[],"version":"current","sidebarPosition":605,"frontMatter":{"description":"Author: @vigneshshiv | https://leetcode.com/problems/can-place-flowers/"},"sidebar":"tutorialSidebar","previous":{"title":"0600 - 0699","permalink":"/solutions/category/0600---0699"},"next":{"title":"0606 - Construct String from Binary Tree (Easy)","permalink":"/solutions/0600-0699/construct-string-from-binary-tree-easy"}}');var t=s(86070),r=s(32790);const l={description:"Author: @vigneshshiv | https://leetcode.com/problems/can-place-flowers/"},i="0605 - Can Place Flowers (Easy)",o={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: STL",id:"approach-1-stl",level:2}];function h(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{SolutionAuthor:s,TabItem:a,Tabs:l}=n;return s||m("SolutionAuthor",!0),a||m("TabItem",!0),l||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"0605---can-place-flowers-easy",children:"0605 - Can Place Flowers (Easy)"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/can-place-flowers/",children:"https://leetcode.com/problems/can-place-flowers/"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in ",(0,t.jsx)(n.strong,{children:"adjacent"})," plots."]}),"\n",(0,t.jsxs)(n.p,{children:["Given an integer array ",(0,t.jsx)(n.code,{children:"flowerbed"})," containing ",(0,t.jsx)(n.code,{children:"0"}),"'s and ",(0,t.jsx)(n.code,{children:"1"}),"'s, where ",(0,t.jsx)(n.code,{children:"0"})," means empty and ",(0,t.jsx)(n.code,{children:"1"})," means not empty, and an integer ",(0,t.jsx)(n.code,{children:"n"}),", return ",(0,t.jsx)(n.code,{children:"true"})," ",(0,t.jsxs)(n.em,{children:["if ",(0,t.jsx)(n.code,{children:"n"})," new flowers can be planted in the ",(0,t.jsx)(n.code,{children:"flowerbed"})," without violating the no-adjacent-flowers rule and ",(0,t.jsx)(n.code,{children:"false"})," otherwise"]}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: flowerbed = [1,0,0,0,1], n = 1\nOutput: true\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: flowerbed = [1,0,0,0,1], n = 2\nOutput: false\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= flowerbed.length <= 2 * 10^4"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"flowerbed[i]"})," is ",(0,t.jsx)(n.code,{children:"0"})," or ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["There are no two adjacent flowers in ",(0,t.jsx)(n.code,{children:"flowerbed"}),"."]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"0 <= n <= flowerbed.length"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-stl",children:"Approach 1: STL"}),"\n",(0,t.jsx)(n.p,{children:"Simplest approach to check is to iterate over the elements and check the prev[i - 1] and next[i + 1] elements to statisfy the constraint."}),"\n",(0,t.jsxs)(n.p,{children:["If given ",(0,t.jsx)(n.code,{children:"n"})," is 0 return ",(0,t.jsx)(n.code,{children:"true"}),", or if ",(0,t.jsx)(n.code,{children:"n"})," is higher than the no. of plots available to plant in an array adjacently then return ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Time Complexity: ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mi,{children:"n"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]}),", where ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"n"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"})]})})]})," - # of elements in the array"]}),"\n",(0,t.jsxs)(n.p,{children:["Space Complexity: ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"O"}),(0,t.jsx)(n.mo,{stretchy:"false",children:"("}),(0,t.jsx)(n.mn,{children:"1"}),(0,t.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(n.span,{className:"mopen",children:"("}),(0,t.jsx)(n.span,{className:"mord",children:"1"}),(0,t.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,t.jsx)(l,{children:(0,t.jsxs)(a,{value:"java",label:"Java",children:[(0,t.jsx)(s,{name:"@vigneshshiv"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class Solution {\n    public boolean canPlaceFlowers(int[] flowerbed, int n) {\n        // Case 1. No flowers to plant, so return true\n        if (n == 0) return true;\n        // Case 2. If No. of flowers to plant adajacently is higher than the half flowerbed array\n        int range = (flowerbed.length / 2) + ((flowerbed.length & 1) == 0 ? 0 : 1);\n        if (n > range) return false;\n        // Case 3. Iterate to check prev[i - 1] and next[i + 1] elements to satisfy the constraint\n        for (int i = 0; i < flowerbed.length; i++) {\n            if (flowerbed[i] == 0 && (i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.length - 1 || flowerbed[i + 1] == 0)) {\n                flowerbed[i] = 1;\n                n -= 1;\n                if (n == 0) return true;\n            }\n        }\n        return false;\n    }\n}\n"})})]})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var a=s(30758);const t={},r=a.createContext(t);function l(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);