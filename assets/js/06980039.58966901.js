"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[68034],{28043:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"1600-1699/sum-of-absolute-differences-in-a-sorted-array-medium","title":"1685 - Sum of Absolute Differences in a Sorted Array (Medium)","description":"Author: @jit, @heder | https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/","source":"@site/solutions/1600-1699/1685-sum-of-absolute-differences-in-a-sorted-array-medium.md","sourceDirName":"1600-1699","slug":"/1600-1699/sum-of-absolute-differences-in-a-sorted-array-medium","permalink":"/solutions/1600-1699/sum-of-absolute-differences-in-a-sorted-array-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1600-1699/1685-sum-of-absolute-differences-in-a-sorted-array-medium.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Math","permalink":"/solutions/tags/math"},{"inline":true,"label":"Prefix Sum","permalink":"/solutions/tags/prefix-sum"}],"version":"current","sidebarPosition":1685,"frontMatter":{"description":"Author: @jit, @heder | https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/","tags":["Array","Math","Prefix Sum"]},"sidebar":"tutorialSidebar","previous":{"title":"1680 - Concatenation of Consecutive Binary Numbers (Medium)","permalink":"/solutions/1600-1699/concatenation-of-consecutive-binary-numbers-medium"},"next":{"title":"1692 - Count Ways to Distribute Candies (Hard)","permalink":"/solutions/1600-1699/count-ways-to-distribute-candies-hard"}}');var t=s(86070),i=s(32790);const o={description:"Author: @jit, @heder | https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/",tags:["Array","Math","Prefix Sum"]},a="1685 - Sum of Absolute Differences in a Sorted Array (Medium)",l={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Prefix and Suffix Sum",id:"approach-1-prefix-and-suffix-sum",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:s,TabItem:r,Tabs:o}=n;return s||m("SolutionAuthor",!0),r||m("TabItem",!0),o||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"1685---sum-of-absolute-differences-in-a-sorted-array-medium",children:"1685 - Sum of Absolute Differences in a Sorted Array (Medium)"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/",children:"https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["You are given an integer array ",(0,t.jsx)(n.code,{children:"nums"})," sorted in ",(0,t.jsx)(n.strong,{children:"non-decreasing"})," order."]}),"\n",(0,t.jsxs)(n.p,{children:["Build and return ",(0,t.jsx)(n.em,{children:"an integer array"}),(0,t.jsx)(n.code,{children:"result"}),(0,t.jsx)(n.em,{children:"with the same length as"}),(0,t.jsx)(n.code,{children:"nums"}),(0,t.jsx)(n.em,{children:"such that"}),(0,t.jsx)(n.code,{children:"result[i]"}),(0,t.jsxs)(n.em,{children:["is equal to the ",(0,t.jsx)(n.strong,{children:"summation of absolute differences"})," between"]}),(0,t.jsx)(n.code,{children:"nums[i]"}),(0,t.jsx)(n.em,{children:"and all the other elements in the array."})]}),"\n",(0,t.jsxs)(n.p,{children:["In other words, ",(0,t.jsx)(n.code,{children:"result[i]"})," is equal to ",(0,t.jsx)(n.code,{children:"sum(|nums[i]-nums[j]|)"})," where ",(0,t.jsx)(n.code,{children:"0 <= j < nums.length"})," and ",(0,t.jsx)(n.code,{children:"j != i"})," (",(0,t.jsx)(n.strong,{children:"0-indexed"}),")."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [2,3,5]\nOutput: [4,3,5]\nExplanation: Assuming the arrays are 0-indexed, then\nresult[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4,\nresult[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3,\nresult[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5.\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [1,4,6,8,10]\nOutput: [24,15,13,15,21]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"2 <= nums.length <= 10 ^ 5"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= nums[i] <= nums[i + 1] <= 10 ^ 4"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-prefix-and-suffix-sum",children:"Approach 1: Prefix and Suffix Sum"}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsxs)(r,{value:"scala",label:"Scala",children:[(0,t.jsx)(s,{name:"@jit"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"// Prefix and suffix sum:\ndef getSumAbsoluteDifferences(nums: Array[Int]): Array[Int] = {\n  val n = nums.length\n  val pref = nums.scanLeft(0)(_ + _).tail\n  val suff = nums.scanRight(0)(_ + _).init\n  Array.tabulate(n)(i =>\n    suff(i) - pref(i) + nums(i) * (2 * i + 1 - n))\n}\n"})})]}),(0,t.jsxs)(r,{value:"cpp",label:"C++",children:[(0,t.jsx)(s,{name:"@heder"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'static int fast_io = []() { std::ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); return 0; }();\n\nclass Solution {\npublic:\n    __attribute__((no_sanitize("address")))\n    static vector<int> getSumAbsoluteDifferences(vector<int>& nums) {\n        const int total = accumulate(begin(nums), end(nums), 0);\n        for (int i = 0, ps = 0; i < size(nums); ++i) {\n            const int num = nums[i];\n            const int before = num * (i - 1) - ps;\n            const int after = total - ps - num * (size(nums) - i - 1);\n            nums[i] = before + after;\n            ps += num;\n        }\n        return nums;\n    }\n};\n'})})]})]})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var r=s(30758);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);