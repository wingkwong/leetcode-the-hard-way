"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[58245],{43618:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"2100-2199/minimum-operations-to-make-the-array-k-increasing-hard","title":"2111 - Minimum Operations to Make the Array K-Increasing (Hard)","description":"Author: @wkw | https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/","source":"@site/solutions/2100-2199/2111-minimum-operations-to-make-the-array-k-increasing-hard.md","sourceDirName":"2100-2199","slug":"/2100-2199/minimum-operations-to-make-the-array-k-increasing-hard","permalink":"/solutions/2100-2199/minimum-operations-to-make-the-array-k-increasing-hard","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2111-minimum-operations-to-make-the-array-k-increasing-hard.md","tags":[],"version":"current","sidebarPosition":2111,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/"},"sidebar":"tutorialSidebar","previous":{"title":"2110 - Number of Smooth Descent Periods of a Stock (Medium)","permalink":"/solutions/2100-2199/number-of-smooth-descent-periods-of-a-stock-medium"},"next":{"title":"2119 - A Number After a Double Reversal (Easy)","permalink":"/solutions/2100-2199/a-number-after-a-double-reversal-easy"}}');var r=n(86070),i=n(40629);const t={description:"Author: @wkw | https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/"},l="2111 - Minimum Operations to Make the Array K-Increasing (Hard)",c={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Longest Increasing Subsequence",id:"approach-1-longest-increasing-subsequence",level:2}];function o(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"2111---minimum-operations-to-make-the-array-k-increasing-hard",children:"2111 - Minimum Operations to Make the Array K-Increasing (Hard)"})}),"\n",(0,r.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/",children:"https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/"})}),"\n",(0,r.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(s.p,{children:["You are given a ",(0,r.jsx)(s.strong,{children:"0-indexed"})," array ",(0,r.jsx)(s.code,{children:"arr"})," consisting of ",(0,r.jsx)(s.code,{children:"n"})," positive integers, and a positive integer ",(0,r.jsx)(s.code,{children:"k"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["The array ",(0,r.jsx)(s.code,{children:"arr"})," is called ",(0,r.jsx)(s.strong,{children:"K-increasing"})," if ",(0,r.jsx)(s.code,{children:"arr[i-k] <= arr[i]"})," holds for every index ",(0,r.jsx)(s.code,{children:"i"}),", where ",(0,r.jsx)(s.code,{children:"k <= i <= n-1"}),"."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["For example, ",(0,r.jsx)(s.code,{children:"arr = [4, 1, 5, 2, 6, 2]"})," is K-increasing for ",(0,r.jsx)(s.code,{children:"k = 2"})," because:","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"arr[0] <= arr[2] (4 <= 5)"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"arr[1] <= arr[3] (1 <= 2)"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"arr[2] <= arr[4] (5 <= 6)"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"arr[3] <= arr[5] (2 <= 2)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["However, the same ",(0,r.jsx)(s.code,{children:"arr"})," is not K-increasing for ",(0,r.jsx)(s.code,{children:"k = 1"})," (because ",(0,r.jsx)(s.code,{children:"arr[0] > arr[1]"}),") or ",(0,r.jsx)(s.code,{children:"k = 3"})," (because ",(0,r.jsx)(s.code,{children:"arr[0] > arr[3]"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["In one ",(0,r.jsx)(s.strong,{children:"operation"}),", you can choose an index ",(0,r.jsx)(s.code,{children:"i"})," and ",(0,r.jsx)(s.strong,{children:"change"})," ",(0,r.jsx)(s.code,{children:"arr[i]"})," into ",(0,r.jsx)(s.strong,{children:"any"})," positive integer."]}),"\n",(0,r.jsxs)(s.p,{children:["Return ",(0,r.jsxs)(s.em,{children:["the ",(0,r.jsx)(s.strong,{children:"minimum number of operations"})," required to make the array K-increasing for the given"]})," ",(0,r.jsx)(s.code,{children:"k"}),"."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"Input: arr = [5,4,3,2,1], k = 1\nOutput: 4\nExplanation:\nFor k = 1, the resultant array has to be non-decreasing.\nSome of the K-increasing arrays that can be formed are [5,6,7,8,9], [1,1,1,1,1], [2,2,3,4,4]. All of them require 4 operations.\nIt is suboptimal to change the array to, for example, [6,7,8,9,10] because it would take 5 operations.\nIt can be shown that we cannot make the array K-increasing in less than 4 operations.\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"Input: arr = [4,1,5,2,6,2], k = 2\nOutput: 0\nExplanation:\nThis is the same example as the one in the problem description.\nHere, for every index i where 2 <= i <= 5, arr[i-2] <= arr[i].\nSince the given array is already K-increasing, we do not need to perform any operations.\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 3:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"Input: arr = [4,1,5,2,6,2], k = 3\nOutput: 2\nExplanation:\nIndices 3 and 5 are the only ones not satisfying arr[i-3] <= arr[i] for 3 <= i <= 5.\nOne of the ways we can make the array K-increasing is by changing arr[3] to 4 and arr[5] to 5.\nThe array will now be [4,1,5,4,6,5].\nNote that there can be other ways to make the array K-increasing, but none of them require less than 2 operations.\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"1 <= arr.length <= 10^5"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"1 <= arr[i], k <= arr.length"})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"approach-1-longest-increasing-subsequence",children:"Approach 1: Longest Increasing Subsequence"}),"\n",(0,r.jsxs)(s.p,{children:["We can break input vector into ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"k"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]})," groups ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"a"}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"a"}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{children:"+"}),(0,r.jsx)(s.mi,{children:"k"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"a"}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{children:"+"}),(0,r.jsx)(s.mn,{children:"2"}),(0,r.jsx)(s.mo,{children:"\u2217"}),(0,r.jsx)(s.mi,{children:"k"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"ai,ai+k,ai+2\u2217k,..."})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.854em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"ai"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"ai"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(s.span,{className:"mbin",children:"+"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"ai"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(s.span,{className:"mbin",children:"+"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"2"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(s.span,{className:"mbin",children:"\u2217"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord",children:"..."})]})]})]}),"for each ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mi,{children:"k"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"i<k"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6986em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})]})]}),". Calculate the LIS (Longest Increasing Subsequence) on each group and compare the length with the target size. We need to perform ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"a"}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mi,{children:"z"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"}),(0,r.jsx)(s.mo,{children:"\u2212"}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"g"}),(0,r.jsx)(s.mi,{children:"t"}),(0,r.jsx)(s.mi,{children:"h"}),(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mi,{children:"f"}),(0,r.jsx)(s.mi,{children:"L"}),(0,r.jsx)(s.mi,{children:"I"}),(0,r.jsx)(s.mi,{children:"S"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"a"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"a.size()\u2212lengthOfLIS(a)"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,r.jsx)(s.span,{className:"mord",children:"."}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"ze"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mclose",children:")"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"L"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07847em"},children:"I"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"S"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"a"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})]})]}),"operations to make it K-increasing."]}),"\n",(0,r.jsx)(n,{name:"@wkw"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = (int) nums.size();\n        vector<int> lis;\n        for(int i = 0; i < n; i++) {\n            auto it = upper_bound(lis.begin(), lis.end(), nums[i]);\n            if(it == lis.end()) lis.push_back(nums[i]);\n            else *it = nums[i];\n        }\n        return (int) lis.size();\n    }\n\n    int kIncreasing(vector<int>& arr, int k) {\n        int ans = 0, n = arr.size();\n        for (int i = 0; i < k; i++) {\n            vector<int> a;\n            for (int j = i; j < n; j += k) {\n                a.push_back(arr[j]);\n            }\n            ans += a.size() - lengthOfLIS(a);\n        }\n        return ans;\n    }\n};\n"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},40629:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var a=n(30758);const r={},i=a.createContext(r);function t(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);