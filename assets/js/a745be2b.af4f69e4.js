"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[17513],{63423:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"2200-2299/minimum-number-of-operations-to-convert-time-easy","title":"2224 - Minimum Number of Operations to Convert Time (Easy)","description":"Author: @wkw | https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/","source":"@site/solutions/2200-2299/2224-minimum-number-of-operations-to-convert-time-easy.md","sourceDirName":"2200-2299","slug":"/2200-2299/minimum-number-of-operations-to-convert-time-easy","permalink":"/solutions/2200-2299/minimum-number-of-operations-to-convert-time-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2200-2299/2224-minimum-number-of-operations-to-convert-time-easy.md","tags":[],"version":"current","sidebarPosition":2224,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/"},"sidebar":"tutorialSidebar","previous":{"title":"2223 - Sum of Scores of Built Strings (Hard)","permalink":"/solutions/2200-2299/sum-of-scores-of-built-strings-hard"},"next":{"title":"2225 - Find Players With Zero or One Losses (Medium)","permalink":"/solutions/2200-2299/find-players-with-zero-or-one-losses-medium"}}');var o=t(86070),s=t(40629);const i={description:"Author: @wkw | https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/"},c="2224 - Minimum Number of Operations to Convert Time (Easy)",a={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Greedy",id:"approach-1-greedy",level:2}];function d(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mn:"mn",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SolutionAuthor:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"2224---minimum-number-of-operations-to-convert-time-easy",children:"2224 - Minimum Number of Operations to Convert Time (Easy)"})}),"\n",(0,o.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/",children:"https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/"})}),"\n",(0,o.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,o.jsxs)(n.p,{children:["You are given two strings ",(0,o.jsx)(n.code,{children:"current"})," and ",(0,o.jsx)(n.code,{children:"correct"})," representing two ",(0,o.jsx)(n.strong,{children:"24-hour times"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["24-hour times are formatted as ",(0,o.jsx)(n.code,{children:'"HH:MM"'}),", where ",(0,o.jsx)(n.code,{children:"HH"})," is between ",(0,o.jsx)(n.code,{children:"00"})," and ",(0,o.jsx)(n.code,{children:"23"}),", and ",(0,o.jsx)(n.code,{children:"MM"})," is between ",(0,o.jsx)(n.code,{children:"00"})," and ",(0,o.jsx)(n.code,{children:"59"}),". The earliest 24-hour time is ",(0,o.jsx)(n.code,{children:"00:00"}),", and the latest is ",(0,o.jsx)(n.code,{children:"23:59"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In one operation you can increase the time ",(0,o.jsx)(n.code,{children:"current"})," by ",(0,o.jsx)(n.code,{children:"1"}),", ",(0,o.jsx)(n.code,{children:"5"}),", ",(0,o.jsx)(n.code,{children:"15"}),", or ",(0,o.jsx)(n.code,{children:"60"})," minutes. You can perform this operation ",(0,o.jsx)(n.strong,{children:"any"})," number of times."]}),"\n",(0,o.jsxs)(n.p,{children:["Return ",(0,o.jsxs)(n.em,{children:["the ",(0,o.jsx)(n.strong,{children:"minimum number of operations"})," needed to convert"]})," ",(0,o.jsx)(n.code,{children:"current"})," ",(0,o.jsx)(n.em,{children:"to"})," ",(0,o.jsx)(n.code,{children:"correct"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'Input: current = "02:30", correct = "04:35"\nOutput: 3\nExplanation:\nWe can convert current to correct in 3 operations as follows:\n- Add 60 minutes to current. current becomes "03:30".\n- Add 60 minutes to current. current becomes "04:30".\n- Add 5 minutes to current. current becomes "04:35".\nIt can be proven that it is not possible to convert current to correct in fewer than 3 operations.\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'Input: current = "11:00", correct = "11:01"\nOutput: 1\nExplanation: We only have to add one minute to current, so the minimum number of operations needed is 1.\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"current"})," and ",(0,o.jsx)(n.code,{children:"correct"})," are in the format ",(0,o.jsx)(n.code,{children:'"HH:MM"'})]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"current <= correct"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"approach-1-greedy",children:"Approach 1: Greedy"}),"\n",(0,o.jsxs)(n.p,{children:["Choosing ",(0,o.jsxs)(n.span,{className:"katex",children:[(0,o.jsx)(n.span,{className:"katex-mathml",children:(0,o.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,o.jsxs)(n.semantics,{children:[(0,o.jsx)(n.mrow,{children:(0,o.jsx)(n.mn,{children:"60"})}),(0,o.jsx)(n.annotation,{encoding:"application/x-tex",children:"60"})]})})}),(0,o.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,o.jsxs)(n.span,{className:"base",children:[(0,o.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,o.jsx)(n.span,{className:"mord",children:"60"})]})})]})," 1 time is better than choosing ",(0,o.jsxs)(n.span,{className:"katex",children:[(0,o.jsx)(n.span,{className:"katex-mathml",children:(0,o.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,o.jsxs)(n.semantics,{children:[(0,o.jsx)(n.mrow,{children:(0,o.jsx)(n.mn,{children:"15"})}),(0,o.jsx)(n.annotation,{encoding:"application/x-tex",children:"15"})]})})}),(0,o.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,o.jsxs)(n.span,{className:"base",children:[(0,o.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,o.jsx)(n.span,{className:"mord",children:"15"})]})})]})," 4 times. We choose from the largest number as many times as we could, then choose the second largest and etc. Since the operation is on minute, we need to convert the input to minute format first. Then we calculate the difference and try each operation to see how many times we could apply and update the difference after each operation."]}),"\n",(0,o.jsx)(t,{name:"@wkw"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int getMinutes(string t) {\n        int res = 0;\n        // handle HH\n        res += (t[0] - '0') * 10;\n        res += (t[1] - '0');\n        res *= 60;\n        // handle MM\n        res += (t[3] - '0') * 10;\n        res += (t[4] - '0');\n        return res;\n    }\n\n    int convertTime(string current, string correct) {\n        // convert inputs to minute format\n        int from = getMinutes(current), to = getMinutes(correct);\n        // init ans & calculate the difference\n        int ans = 0, d = to - from;\n        // available operators - use largest one first\n        vector<int> ops{ 60, 15, 5, 1 };\n        // try each operation - take as many as possible\n        // and update the difference\n        for (auto x : ops) ans += d / x, d %= x;\n        return ans;\n    }\n};\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},40629:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(30758);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);