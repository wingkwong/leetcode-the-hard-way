"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[81338],{71883:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"2600-2699/power-of-heroes-hard","title":"2681 - Power of Heroes (Hard)","description":"Author: @wingkwong | https://leetcode.com/problems/power-of-heroes/","source":"@site/solutions/2600-2699/2681-power-of-heroes-hard.md","sourceDirName":"2600-2699","slug":"/2600-2699/power-of-heroes-hard","permalink":"/solutions/2600-2699/power-of-heroes-hard","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2600-2699/2681-power-of-heroes-hard.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Math","permalink":"/solutions/tags/math"},{"inline":true,"label":"Sorting","permalink":"/solutions/tags/sorting"},{"inline":true,"label":"Prefix Sum","permalink":"/solutions/tags/prefix-sum"}],"version":"current","sidebarPosition":2681,"frontMatter":{"description":"Author: @wingkwong | https://leetcode.com/problems/power-of-heroes/","tags":["Array","Math","Sorting","Prefix Sum"]},"sidebar":"tutorialSidebar","previous":{"title":"2680 - Maximum OR (Medium)","permalink":"/solutions/2600-2699/maximum-or-medium"},"next":{"title":"2700 - 2799","permalink":"/solutions/category/2700---2799"}}');var t=o(74848),s=o(28453);const i={description:"Author: @wingkwong | https://leetcode.com/problems/power-of-heroes/",tags:["Array","Math","Sorting","Prefix Sum"]},l="2681 - Power of Heroes (Hard)",a={},h=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Math",id:"approach-1-math",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SolutionAuthor:o,TabItem:r,Tabs:i}=n;return o||d("SolutionAuthor",!0),r||d("TabItem",!0),i||d("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2681---power-of-heroes-hard",children:"2681 - Power of Heroes (Hard)"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/power-of-heroes/",children:"https://leetcode.com/problems/power-of-heroes/"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["You are given a ",(0,t.jsx)(n.strong,{children:"0-indexed"})," integer array ",(0,t.jsx)(n.code,{children:"nums"})," representing the strength of some heroes. The",(0,t.jsx)(n.strong,{children:"power"})," of a group of heroes is defined as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Let ",(0,t.jsx)(n.code,{children:"i0"}),", ",(0,t.jsx)(n.code,{children:"i1"}),", ... ,",(0,t.jsx)(n.code,{children:"ik"})," be the indices of the heroes in a group. Then, the power of this group is ",(0,t.jsx)(n.code,{children:"max(nums[i0], nums[i1], ... ,nums[ik])2 * min(nums[i0], nums[i1], ... ,nums[ik])"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Return ",(0,t.jsxs)(n.em,{children:["the sum of the ",(0,t.jsx)(n.strong,{children:"power"})," of all ",(0,t.jsx)(n.strong,{children:"non-empty"})," groups of heroes possible."]})," Since the sum could be very large, return it ",(0,t.jsx)(n.strong,{children:"modulo"})," ",(0,t.jsx)(n.code,{children:"1e9 + 7"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [2,1,4]\nOutput: 141\nExplanation: \n1st group: [2] has power = 22 * 2 = 8.\n2nd group: [1] has power = 12 * 1 = 1. \n3rd group: [4] has power = 42 * 4 = 64. \n4th group: [2,1] has power = 22 * 1 = 4. \n5th group: [2,4] has power = 42 * 2 = 32. \n6th group: [1,4] has power = 42 * 1 = 16. \n7th group: [2,1,4] has power = 42 * 1 = 16. \nThe sum of powers of all groups is 8 + 1 + 64 + 4 + 32 + 16 + 16 = 141.\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [1,1,1]\nOutput: 7\nExplanation: A total of 7 groups are possible, and the power of each group will be 1. Therefore, the sum of the powers of all groups is 7.\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= nums.length <= 10^5"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= nums[i] <= 10^9"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-math",children:"Approach 1: Math"}),"\n",(0,t.jsx)(i,{children:(0,t.jsxs)(r,{value:"py",label:"Python",children:[(0,t.jsx)(o,{name:"@wingkwong"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"class Solution:\n    def sumOfPower(self, nums: List[int]) -> int:\n        M = 10 ** 9 + 7\n        # sort the input so that we can easily find the min and max\n        # besides, sorting won't affect the result since original position doesn't matter\n        nums.sort()\n        res, s = 0, 0\n        for x in nums:\n            # if we just include one element [x], \n            # it is easy to see it contributes x * x * x\n            # if we include a pair [x, y] where x < y, \n            # it contributes x * y * y \n            # if we include some numbers between x and y, i.e. [x, a, b, c, y] where x < a, b, c < y\n            # the power is also x * y * y \n            # the number of subsets will be 2 ^ (j - i + 1)\n            # e.g. [x, a, y], [x, a, b, y], [x, a, b, c, y], [x, b, y], [x, b, c] ...\n            # hence, for each pair, the power will be x * y * y * 2 ^ (j - i + 1)\n            # combining above two cases, for the index j, we got\n            # (nums[j] * nums[j] * nums[j]) + (nums[j] * nums[j]) * \\sum_{i = 0} ^ {j - 1} (nums[j] * 2 ^ (j - i + 1))\n            # so how to calculate \\sum_{i = 0} ^ {j - 1} (nums[j] * 2 ^ (j - i + 1)) in a linear time?\n            # let F(i) = \\sum_{i = 0} ^ {j - 1} (nums[j] * 2 ^ (j - i + 1))\n            # rewrite the above formula, then we will see that F(i + 1) would be 2 * F(i) + nums[i]\n\t\t\t# if you have no idea on above mathematic explanation, \n\t\t\t# try some cases and you will see the pattern\n\t\t\t# nums = [1, 2, 3, 4]\n            # 1 * 1 * ((0) + 1)\n            # 2 * 2 * ((1) * 2 ^ 0 + 2)\n            # 3 * 3 * ((1 * 2 ^ 1 + 2) * 2 ^ 0 + 3)\n            # 4 * 4 * ((1 * 2 ^ 2 + 2 * 2 ^ 1 + 3) * 2 ^ 0 + 4)\n\t\t\t# ...\n\t\t\t# x * x * (prev_s * 2 + x)\n            res += (x + s) * (x * x) \n            res %= M\n            s = (s * 2 + x) % M\n        return res\n"})})]})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var r=o(96540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);