"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[80546],{20001:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>m,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"2400-2499/append-characters-to-string-to-make-subsequence-medium","title":"2486 - Append Characters to String to Make Subsequence (Medium)","description":"Author: @dhanu084 | https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/","source":"@site/solutions/2400-2499/2486-append-characters-to-string-to-make-subsequence-medium.md","sourceDirName":"2400-2499","slug":"/2400-2499/append-characters-to-string-to-make-subsequence-medium","permalink":"/solutions/2400-2499/append-characters-to-string-to-make-subsequence-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2400-2499/2486-append-characters-to-string-to-make-subsequence-medium.md","tags":[{"inline":true,"label":"Two Pointers","permalink":"/solutions/tags/two-pointers"}],"version":"current","sidebarPosition":2486,"frontMatter":{"description":"Author: @dhanu084 | https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/","tags":["Two Pointers"]},"sidebar":"tutorialSidebar","previous":{"title":"2485 - Find the Pivot Integer (Easy)","permalink":"/solutions/2400-2499/find-the-pivot-integer-easy"},"next":{"title":"2487 - Remove Nodes From Linked List (Medium)","permalink":"/solutions/2400-2499/remove-nodes-from-linked-list-medium"}}');var t=n(86070),r=n(68906);const i={description:"Author: @dhanu084 | https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/",tags:["Two Pointers"]},l="2486 - Append Characters to String to Make Subsequence (Medium)",m={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Two Pointers",id:"approach-1-two-pointers",level:2}];function h(e){const s={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{SolutionAuthor:n,TabItem:a,Tabs:i}=s;return n||d("SolutionAuthor",!0),a||d("TabItem",!0),i||d("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"2486---append-characters-to-string-to-make-subsequence-medium",children:"2486 - Append Characters to String to Make Subsequence (Medium)"})}),"\n",(0,t.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/",children:"https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/"})}),"\n",(0,t.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsx)(s.p,{children:"You are given two strings s and t consisting of only lowercase English letters."}),"\n",(0,t.jsx)(s.p,{children:"Return the minimum number of characters that need to be appended to the end of s so that t becomes a subsequence of s."}),"\n",(0,t.jsx)(s.p,{children:"A subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: s = "coaching", t = "coding"\nOutput: 4\nExplanation: Append the characters "ding" to the end of s so that s = "coachingding".\nNow, t is a subsequence of s ("coachingding").\nIt can be shown that appending any 3 characters to the end of s will never make t a subsequence.\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: s = "abcde", t = "a"\nOutput: 0\nExplanation: t is already a subsequence of s ("abcde").\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 3:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: s = "z", t = "abcde"\nOutput: 5\nExplanation: Append the characters "abcde" to the end of s so that s = "zabcde".\nNow, t is a subsequence of s ("zabcde").\nIt can be shown that appending any 4 characters to the end of s will never make t a subsequence.\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"1"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mi,{children:"s"}),(0,t.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,t.jsx)(s.mi,{children:"l"}),(0,t.jsx)(s.mi,{children:"e"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mi,{children:"g"}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,t.jsx)(s.mi,{children:"l"}),(0,t.jsx)(s.mi,{children:"e"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mi,{children:"g"}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mo,{children:"="}),(0,t.jsx)(s.mn,{children:"1"}),(0,t.jsxs)(s.msup,{children:[(0,t.jsx)(s.mn,{children:"0"}),(0,t.jsx)(s.mn,{children:"5"})]})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= s.length, t.length <= 10^5"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(s.span,{className:"mord",children:"."}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord",children:"."}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<="}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.8141em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord",children:"0"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsx)(s.span,{className:"vlist-t",children:(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,t.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mtight",children:"5"})})]})})})})})]})]})]})]})}),"\n",(0,t.jsx)(s.li,{children:"s and t consist only of lowercase English letters."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"approach-1-two-pointers",children:"Approach 1: Two Pointers"}),"\n",(0,t.jsxs)(s.p,{children:["Time Complexity: ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"O"}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mi,{children:"m"}),(0,t.jsx)(s.mi,{children:"i"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mi,{children:"s"}),(0,t.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,t.jsx)(s.mi,{children:"l"}),(0,t.jsx)(s.mi,{children:"e"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mi,{children:"g"}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mo,{separator:"true",children:","}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,t.jsx)(s.mi,{children:"l"}),(0,t.jsx)(s.mi,{children:"e"}),(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mi,{children:"g"}),(0,t.jsx)(s.mi,{children:"t"}),(0,t.jsx)(s.mi,{children:"h"}),(0,t.jsx)(s.mo,{stretchy:"false",children:")"}),(0,t.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(min(s.length, t.length))"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(s.span,{className:"mopen",children:"("}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"min"}),(0,t.jsx)(s.span,{className:"mopen",children:"("}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(s.span,{className:"mord",children:"."}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mpunct",children:","}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord",children:"."}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,t.jsx)(s.span,{className:"mclose",children:"))"})]})})]})]}),"\n",(0,t.jsxs)(s.p,{children:["Space Complexity: ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"O"}),(0,t.jsx)(s.mo,{stretchy:"false",children:"("}),(0,t.jsx)(s.mn,{children:"1"}),(0,t.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(s.span,{className:"mopen",children:"("}),(0,t.jsx)(s.span,{className:"mord",children:"1"}),(0,t.jsx)(s.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,t.jsx)(i,{children:(0,t.jsxs)(a,{value:"py",label:"Python",children:[(0,t.jsx)(n,{name:"@dhanu084"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"class Solution:\n    def appendCharacters(self, s: str, t: str) -> int:\n        i = j = 0\n        '''\n            * Iterate through the both strings\n            * if both letters of s and t match increase both pointers\n            * if not matching increment i pointer to check if there is any possible match\n            in future - this also ensures that order is maintained\n            * return len(t) - current j position to find the number of letters that needs to be appened\n            * for input s = \"coaching\", t = \"coding\"\n            i pointer will reach end of s and j pointer will point to d as it was the last mismatch position\n            so return 6-2 = 4\n        '''\n        while i < len(s) and j < len(t):\n            if s[i] == t[j]:\n                i += 1\n                j += 1\n            else:\n                i += 1\n\n        return len(t) - j\n"})})]})})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function d(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var a=n(30758);const t={},r=a.createContext(t);function i(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);