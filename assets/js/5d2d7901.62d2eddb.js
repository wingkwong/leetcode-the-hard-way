"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[27383],{51045:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>m,contentTitle:()=>t,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"3000-3099/maximum-palindromes-after-operations-medium","title":"3035 - Maximum Palindromes After Operations (Medium)","description":"Author: @wkw | https://leetcode.com/problems/maximum-palindromes-after-operations/","source":"@site/solutions/3000-3099/3035-maximum-palindromes-after-operations-medium.md","sourceDirName":"3000-3099","slug":"/3000-3099/maximum-palindromes-after-operations-medium","permalink":"/solutions/3000-3099/maximum-palindromes-after-operations-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/3000-3099/3035-maximum-palindromes-after-operations-medium.md","tags":[],"version":"current","sidebarPosition":3035,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/maximum-palindromes-after-operations/"},"sidebar":"tutorialSidebar","previous":{"title":"3034 - Number of Subarrays That Match a Pattern I (Medium)","permalink":"/solutions/3000-3099/number-of-subarrays-that-match-a-pattern-i-medium"},"next":{"title":"3064 - Guess the Number Using Bitwise Questions I (Medium)","permalink":"/solutions/3000-3099/guess-the-number-using-bitwise-questions-i-medium"}}');var r=n(86070),i=n(68906);const l={description:"Author: @wkw | https://leetcode.com/problems/maximum-palindromes-after-operations/"},t="3035 - Maximum Palindromes After Operations (Medium)",m={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Counting",id:"approach-1-counting",level:2}];function o(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:n,TabItem:a,Tabs:l}=s;return n||h("SolutionAuthor",!0),a||h("TabItem",!0),l||h("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"3035---maximum-palindromes-after-operations-medium",children:"3035 - Maximum Palindromes After Operations (Medium)"})}),"\n",(0,r.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/maximum-palindromes-after-operations/",children:"https://leetcode.com/problems/maximum-palindromes-after-operations/"})}),"\n",(0,r.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(s.p,{children:["You are given a ",(0,r.jsx)(s.strong,{children:"0-indexed"})," string array ",(0,r.jsx)(s.code,{children:"words"})," having length ",(0,r.jsx)(s.code,{children:"n"})," and containing ",(0,r.jsx)(s.strong,{children:"0-indexed"})," strings."]}),"\n",(0,r.jsxs)(s.p,{children:["You are allowed to perform the following operation ",(0,r.jsx)(s.strong,{children:"any"})," number of times (",(0,r.jsx)(s.strong,{children:"including"})," ",(0,r.jsx)(s.strong,{children:"zero"}),"):"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Choose integers ",(0,r.jsx)(s.code,{children:"i"}),", ",(0,r.jsx)(s.code,{children:"j"}),", ",(0,r.jsx)(s.code,{children:"x"}),", and ",(0,r.jsx)(s.code,{children:"y"})," such that ",(0,r.jsx)(s.code,{children:"0 <= i, j < n"}),", ",(0,r.jsx)(s.code,{children:"0 <= x < words[i].length"}),", ",(0,r.jsx)(s.code,{children:"0 <= y < words[j].length"}),", and ",(0,r.jsx)(s.strong,{children:"swap"})," the characters ",(0,r.jsx)(s.code,{children:"words[i][x]"})," and ",(0,r.jsx)(s.code,{children:"words[j][y]"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Return ",(0,r.jsxs)(s.em,{children:["an integer denoting the ",(0,r.jsx)(s.strong,{children:"maximum"})," number of palindromes"]}),(0,r.jsx)(s.code,{children:"words"}),(0,r.jsx)(s.em,{children:"can contain, after performing some operations."})]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Note:"})," ",(0,r.jsx)(s.code,{children:"i"})," and ",(0,r.jsx)(s.code,{children:"j"})," may be equal during an operation."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'Input: words = ["abbb","ba","aa"]\nOutput: 3\nExplanation: In this example, one way to get the maximum number of palindromes is:\nChoose i = 0, j = 1, x = 0, y = 0, so we swap words[0][0] and words[1][0]. words becomes ["bbbb","aa","aa"].\nAll strings in words are now palindromes.\nHence, the maximum number of palindromes achievable is 3.\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'Input: words = ["abc","ab"]\nOutput: 2\nExplanation: In this example, one way to get the maximum number of palindromes is:\nChoose i = 0, j = 1, x = 1, y = 0, so we swap words[0][1] and words[1][0]. words becomes ["aac","bb"].\nChoose i = 0, j = 0, x = 1, y = 2, so we swap words[0][1] and words[0][2]. words becomes ["aca","bb"].\nBoth strings are now palindromes.\nHence, the maximum number of palindromes achievable is 2.\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 3:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'Input: words = ["cd","ef","a"]\nOutput: 1\nExplanation: In this example, there is no need to perform any operation.\nThere is one palindrome in words "a".\nIt can be shown that it is not possible to get more than one palindrome after any number of operations.\nHence, the answer is 1.\n'})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mi,{children:"w"}),(0,r.jsx)(s.mi,{children:"o"}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mi,{children:"d"}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"g"}),(0,r.jsx)(s.mi,{children:"t"}),(0,r.jsx)(s.mi,{children:"h"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mn,{children:"1000"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= words.length <= 1000"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"or"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mord",children:"."}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1000"})]})]})]})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mi,{children:"w"}),(0,r.jsx)(s.mi,{children:"o"}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mi,{children:"d"}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"g"}),(0,r.jsx)(s.mi,{children:"t"}),(0,r.jsx)(s.mi,{children:"h"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mn,{children:"100"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= words[i].length <= 100"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"or"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"d"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"}),(0,r.jsx)(s.span,{className:"mord",children:"."}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"100"})]})]})]})}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"words[i]"})," consists only of lowercase English letters."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"approach-1-counting",children:"Approach 1: Counting"}),"\n",(0,r.jsxs)(s.p,{children:["The frequency of each character matters. We calculate and fill the character based on the word length. For example, if we got four ",(0,r.jsx)(s.code,{children:"a"}),", then we have make ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"4"}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,r.jsx)(s.mn,{children:"2"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mn,{children:"2"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"4 / 2 = 2"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord",children:"4/2"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"2"})]})]})]})," pairs. If we got five ",(0,r.jsx)(s.code,{children:"a"}),", we can still make ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mn,{children:"2"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"2"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"2"})]})})]})," pairs and we have an extra ",(0,r.jsx)(s.code,{children:"a"})," to be used for the word with odd length (e.g. ",(0,r.jsx)(s.code,{children:"b_b"})," -> ",(0,r.jsx)(s.code,{children:"b[a]b"}),")."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Time Complexity: ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mi,{children:"o"}),(0,r.jsx)(s.mi,{children:"g"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n log n)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"o"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,r.jsxs)(s.li,{children:["Space Complexity: ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]})]}),"\n"]}),"\n",(0,r.jsx)(l,{children:(0,r.jsxs)(a,{value:"cpp",label:"C++",children:[(0,r.jsx)(n,{name:"@wkw"}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int maxPalindromesAfterOperations(vector<string>& words) {\n        int n = words.size(), ans = 0;\n        // hash map to store the frequency of characters\n        unordered_map<char, int> cnt;\n        // count the frequency for each character\n        for (auto word : words) for (auto x : word) cnt[x]++;\n        // we wanna know how many pairs `p` we can make\n        // and how many characters with odd frequency\n        int p = 0, odd = 0;\n        for (auto x : cnt) p += x.second / 2, odd += x.second % 2;\n        // we need to construct in a greedy fashion\n        // sort the input by size in ascending order\n        sort(words.begin(), words.end(), [](const string& s, const string& t) {\n            return s.size() < t.size();\n        });\n        // iterate each word in sorted `words`\n        for (auto word: words) {\n            // `l` is the size of the current word\n            int l = word.size();\n            // we need `l / 2` pairs to form the palindrome\n            if (l / 2 <= p) {\n                // if we have enough pairs `p`, then use them (update p)\n                // if this word has odd length, then we need an extra character (taken from `odd`)\n                // increase `ans` by 1 since this word is a palindrome.\n                p -= l / 2, odd -= l % 2, ans += 1;\n                // if we didn't have odd but we needed one, we borrow from `p`\n                if (odd < 0) odd += 2, p -= 1;\n            }\n        }\n        return ans;\n    }\n};\n"})})]})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}function h(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>t});var a=n(30758);const r={},i=a.createContext(r);function l(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);