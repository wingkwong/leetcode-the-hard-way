"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[61622],{47369:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>m,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"3300-3399/minimum-operations-to-make-array-values-equal-to-k-easy","title":"3375. Minimum Operations to Make Array Values Equal to K (Easy)","description":"Author: @wkw | https://leetcode.com/problems/minimum-operations-to-make-array-values-equal-to-k/","source":"@site/solutions/3300-3399/3375-minimum-operations-to-make-array-values-equal-to-k-easy.md","sourceDirName":"3300-3399","slug":"/3300-3399/minimum-operations-to-make-array-values-equal-to-k-easy","permalink":"/solutions/3300-3399/minimum-operations-to-make-array-values-equal-to-k-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/3300-3399/3375-minimum-operations-to-make-array-values-equal-to-k-easy.md","tags":[],"version":"current","sidebarPosition":3375,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/minimum-operations-to-make-array-values-equal-to-k/"},"sidebar":"tutorialSidebar","previous":{"title":"3300 - Minimum Element After Replacement With Digit Sum (Easy)","permalink":"/solutions/3300-3399/minimum-element-after-replacement-with-digit-sum-easy"}}');var r=n(86070),i=n(32790);const t={description:"Author: @wkw | https://leetcode.com/problems/minimum-operations-to-make-array-values-equal-to-k/"},l="3375. Minimum Operations to Make Array Values Equal to K (Easy)",m={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Check Distinct Numbers",id:"approach-1-check-distinct-numbers",level:2}];function o(e){const s={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{SolutionAuthor:n,TabItem:a,Tabs:t}=s;return n||d("SolutionAuthor",!0),a||d("TabItem",!0),t||d("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"3375-minimum-operations-to-make-array-values-equal-to-k-easy",children:"3375. Minimum Operations to Make Array Values Equal to K (Easy)"})}),"\n",(0,r.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/minimum-operations-to-make-array-values-equal-to-k",children:"https://leetcode.com/problems/minimum-operations-to-make-array-values-equal-to-k"})}),"\n",(0,r.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsx)(s.p,{children:"You are given an integer array nums and an integer k."}),"\n",(0,r.jsx)(s.p,{children:"An integer h is called valid if all values in the array that are strictly greater than h are identical."}),"\n",(0,r.jsx)(s.p,{children:"For example, if nums = [10, 8, 10, 8], a valid integer is h = 9 because all nums[i] > 9 are equal to 10, but 5 is not a valid integer."}),"\n",(0,r.jsx)(s.p,{children:"You are allowed to perform the following operation on nums:"}),"\n",(0,r.jsx)(s.p,{children:"Select an integer h that is valid for the current values in nums. For each index i where nums[i] > h, set nums[i] to h. Return the minimum number of operations required to make every element in nums equal to k. If it is impossible to make all elements equal to k, return -1."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," nums = [5,2,5,4,5], k = 2"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Output:"})," 2"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Explanation:"})}),"\n",(0,r.jsx)(s.p,{children:"The operations can be performed in order using valid integers 4 and then 2."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," nums = [2,1,2], k = 2"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Output:"})," -1"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Explanation:"})}),"\n",(0,r.jsx)(s.p,{children:"It is impossible to make all the values equal to 2."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example 3:"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," nums = [9,7,5,3], k = 1"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Output:"})," 4"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Explanation:"})}),"\n",(0,r.jsx)(s.p,{children:"The operations can be performed using valid integers in the order 7, 5, 3, and 1."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"u"}),(0,r.jsx)(s.mi,{children:"m"}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"g"}),(0,r.jsx)(s.mi,{children:"t"}),(0,r.jsx)(s.mi,{children:"h"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mn,{children:"100"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= nums.length <= 100"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"u"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mord",children:"."}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"h"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"100"})]})]})]})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mi,{children:"u"}),(0,r.jsx)(s.mi,{children:"m"}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"i"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mn,{children:"100"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= nums[i] <= 100"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"u"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"m"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"i"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"100"})]})]})]})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mi,{children:"k"}),(0,r.jsx)(s.mo,{children:"<"}),(0,r.jsx)(s.mo,{children:"="}),(0,r.jsx)(s.mn,{children:"100"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1 <= k <= 100"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.7335em",verticalAlign:"-0.0391em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.jsx)(s.span,{className:"mrel",children:"<="}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"100"})]})]})]})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"approach-1-check-distinct-numbers",children:"Approach 1: Check Distinct Numbers"}),"\n",(0,r.jsx)(t,{children:(0,r.jsxs)(a,{value:"py",label:"Python",children:[(0,r.jsx)(n,{name:"@wkw"}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-py",children:"# TC: O(n)\n# SC: O(1)\nclass Solution:\n    def minOperations(self, nums: List[int], k: int) -> int:\n        # we can just focus on distinct numbers in $nums$\n\n        # in example 1, d = {5, 4, 2}\n        # we can see that the numbers > 2 are 5 and 4, so the answer is 2\n        # in op1, we can choose h = 4 to make [5,2,5,4,5] to [4,2,4,4,4]\n        # in op2, we can choose h = 2 to make [4,2,4,4,4] to [2,2,2,2,2]\n\n        # in example 2, d = {1, 2}\n        # since 1 < 2 so it is not possible to make all elements equal to k,\n        # hence we return -1 in this case\n\n        # if there is a number $x$ that is less than $k$,\n        # then return -1\n        if any(x < k for x in nums): return -1\n        # otherwise check the size of the unique number that is greater than k\n        return len(set(x for x in nums if x > k))\n"})})]})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}function d(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var a=n(30758);const r={},i=a.createContext(r);function t(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);