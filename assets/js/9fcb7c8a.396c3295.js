"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[45938],{52259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"2400-2499/the-employee-that-worked-on-the-longest-task-easy","title":"2432 - The Employee That Worked on the Longest Task (Easy)","description":"Author: @heder | https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/","source":"@site/solutions/2400-2499/2432-the-employee-that-worked-on-the-longest-task-easy.md","sourceDirName":"2400-2499","slug":"/2400-2499/the-employee-that-worked-on-the-longest-task-easy","permalink":"/solutions/2400-2499/the-employee-that-worked-on-the-longest-task-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2400-2499/2432-the-employee-that-worked-on-the-longest-task-easy.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"}],"version":"current","sidebarPosition":2432,"frontMatter":{"description":"Author: @heder | https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/","tags":["Array"]},"sidebar":"tutorialSidebar","previous":{"title":"2425 - Bitwise XOR of All Pairings (Medium)","permalink":"/solutions/2400-2499/bitwise-xor-of-all-pairs-medium"},"next":{"title":"2433 - Find the Original array of prefix XOR (Medium)","permalink":"/solutions/2400-2499/find-the-original-array-of-prefix-xor-medium"}}');var i=n(86070),a=n(68906);const r={description:"Author: @heder | https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/",tags:["Array"]},l="2432 - The Employee That Worked on the Longest Task (Easy)",o={},h=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Single Pass",id:"approach-1-single-pass",level:2}];function d(e){const t={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{SolutionAuthor:n,TabItem:s,Tabs:r}=t;return n||m("SolutionAuthor",!0),s||m("TabItem",!0),r||m("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"2432---the-employee-that-worked-on-the-longest-task-easy",children:"2432 - The Employee That Worked on the Longest Task (Easy)"})}),"\n",(0,i.jsx)(t.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/",children:"https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/"})}),"\n",(0,i.jsx)(t.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(t.p,{children:["There are ",(0,i.jsx)(t.code,{children:"n"})," employees, each with a unique id from ",(0,i.jsx)(t.code,{children:"0"})," to ",(0,i.jsx)(t.code,{children:"n - 1"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["You are given a 2D integer array ",(0,i.jsx)(t.code,{children:"logs"})," where ",(0,i.jsx)(t.code,{children:"logs[i] = [idi, leaveTimei]"})," where:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"idi"})," is the id of the employee that worked on the ",(0,i.jsx)(t.code,{children:"ith"})," task, and"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"leaveTimei"})," is the time at which the employee finished the ",(0,i.jsx)(t.code,{children:"ith"})," task. All the values ",(0,i.jsx)(t.code,{children:"leaveTimei"})," are ",(0,i.jsx)(t.strong,{children:"unique"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note that the ",(0,i.jsx)(t.code,{children:"ith"})," task starts the moment right after the ",(0,i.jsx)(t.code,{children:"(i - 1)th"})," task ends, and the ",(0,i.jsx)(t.code,{children:"0th"})," task starts at time ",(0,i.jsx)(t.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Return ",(0,i.jsx)(t.em,{children:"the id of the employee that worked the task with the longest time."})," If there is a tie between two or more employees, return",(0,i.jsxs)(t.em,{children:["the ",(0,i.jsx)(t.strong,{children:"smallest"})," id among them"]}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: n = 10, logs = [[0,3],[2,5],[0,9],[1,15]]\nOutput: 1\nExplanation:\nTask 0 started at 0 and ended at 3 with 3 units of times.\nTask 1 started at 3 and ended at 5 with 2 units of times.\nTask 2 started at 5 and ended at 9 with 4 units of times.\nTask 3 started at 9 and ended at 15 with 6 units of times.\nThe task with the longest time is task 3 and the employee with id 1 is the one that worked on it, so we return 1.\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: n = 26, logs = [[1,1],[3,7],[2,12],[7,17]]\nOutput: 3\nExplanation:\nTask 0 started at 0 and ended at 1 with 1 unit of times.\nTask 1 started at 1 and ended at 7 with 6 units of times.\nTask 2 started at 7 and ended at 12 with 5 units of times.\nTask 3 started at 12 and ended at 17 with 5 units of times.\nThe tasks with the longest time is task 1. The employee that worked on it is 3, so we return 3.\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example 3:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: n = 2, logs = [[0,10],[1,20]]\nOutput: 0\nExplanation:\nTask 0 started at 0 and ended at 10 with 10 units of times.\nTask 1 started at 10 and ended at 20 with 10 units of times.\nThe tasks with the longest time are tasks 0 and 1. The employees that worked on them are 0 and 1, so we return the smallest id 0.\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"2 <= n <= 500"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"1 <= logs.length <= 500"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"logs[i].length == 2"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"0 <= idi <= n - 1"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"1 <= leaveTimei <= 500"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"idi != idi+1"})}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"leaveTimei"})," are sorted in a strictly increasing order."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"approach-1-single-pass",children:"Approach 1: Single Pass"}),"\n",(0,i.jsx)(t.p,{children:"This could code be a little bit more compact, but I like unpacking the input and giving it things meaningful names."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Time complexity: ",(0,i.jsxs)(t.span,{className:"katex",children:[(0,i.jsx)(t.span,{className:"katex-mathml",children:(0,i.jsx)(t.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(t.semantics,{children:[(0,i.jsxs)(t.mrow,{children:[(0,i.jsx)(t.mi,{children:"O"}),(0,i.jsx)(t.mo,{stretchy:"false",children:"("}),(0,i.jsx)(t.mi,{children:"s"}),(0,i.jsx)(t.mi,{children:"i"}),(0,i.jsx)(t.mi,{children:"z"}),(0,i.jsx)(t.mi,{children:"e"}),(0,i.jsx)(t.mo,{stretchy:"false",children:"("}),(0,i.jsx)(t.mi,{children:"l"}),(0,i.jsx)(t.mi,{children:"o"}),(0,i.jsx)(t.mi,{children:"g"}),(0,i.jsx)(t.mi,{children:"s"}),(0,i.jsx)(t.mo,{stretchy:"false",children:")"}),(0,i.jsx)(t.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(t.annotation,{encoding:"application/x-tex",children:"O(size(logs))"})]})})}),(0,i.jsx)(t.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(t.span,{className:"base",children:[(0,i.jsx)(t.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(t.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(t.span,{className:"mopen",children:"("}),(0,i.jsx)(t.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(t.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(t.span,{className:"mord mathnormal",children:"ze"}),(0,i.jsx)(t.span,{className:"mopen",children:"("}),(0,i.jsx)(t.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,i.jsx)(t.span,{className:"mord mathnormal",children:"o"}),(0,i.jsx)(t.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,i.jsx)(t.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(t.span,{className:"mclose",children:"))"})]})})]})," we need to look at all the entries in logs."]}),"\n",(0,i.jsxs)(t.li,{children:["Space complexity: ",(0,i.jsxs)(t.span,{className:"katex",children:[(0,i.jsx)(t.span,{className:"katex-mathml",children:(0,i.jsx)(t.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(t.semantics,{children:[(0,i.jsxs)(t.mrow,{children:[(0,i.jsx)(t.mi,{children:"O"}),(0,i.jsx)(t.mo,{stretchy:"false",children:"("}),(0,i.jsx)(t.mn,{children:"1"}),(0,i.jsx)(t.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(t.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,i.jsx)(t.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(t.span,{className:"base",children:[(0,i.jsx)(t.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(t.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(t.span,{className:"mopen",children:"("}),(0,i.jsx)(t.span,{className:"mord",children:"1"}),(0,i.jsx)(t.span,{className:"mclose",children:")"})]})})]})," only a few integers as state."]}),"\n"]}),"\n",(0,i.jsx)(r,{children:(0,i.jsxs)(s,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@heder"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"static int hardestWorker(int n, const vector<vector<int>>& logs) {\n    int start_time = 0;\n    int worker = n;\n    int longest_task = 0;\n    for (const vector<int>& log : logs) {\n        const int id = log[0];\n        const int end_time = log[1];\n        const int time = end_time - start_time;\n\n        if (time > longest_task || time == longest_task && id < worker) {\n            worker = id;\n            longest_task = time;\n        }\n\n        start_time = end_time;\n    }\n    return worker;\n}\n"})})]})})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function m(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(30758);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);