"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[32214],{23962:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>m,default:()=>o,frontMatter:()=>r,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"2100-2199/all-divisions-with-the-highest-score-of-a-binary-array-medium","title":"2155 - All Divisions With the Highest Score of a Binary Array (Medium)","description":"Author: @wingkwong | https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/","source":"@site/solutions/2100-2199/2155-all-divisions-with-the-highest-score-of-a-binary-array-medium.md","sourceDirName":"2100-2199","slug":"/2100-2199/all-divisions-with-the-highest-score-of-a-binary-array-medium","permalink":"/solutions/2100-2199/all-divisions-with-the-highest-score-of-a-binary-array-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2155-all-divisions-with-the-highest-score-of-a-binary-array-medium.md","tags":[],"version":"current","sidebarPosition":2155,"frontMatter":{"description":"Author: @wingkwong | https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/"},"sidebar":"tutorialSidebar","previous":{"title":"2154 - Keep Multiplying Found Values by Two (Easy)","permalink":"/solutions/2100-2199/keep-multiplying-found-values-by-two-easy"},"next":{"title":"2156 - Find Substring With Given Hash Value (Medium)","permalink":"/solutions/2100-2199/find-substring-with-given-hash-value-medium"}}');var a=n(74848),l=n(28453);const r={description:"Author: @wingkwong | https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/"},m="2155 - All Divisions With the Highest Score of a Binary Array (Medium)",c={},t=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Prefix Sum + Suffix Sum",id:"approach-1-prefix-sum--suffix-sum",level:2},{value:"Approach 2: Prefix Sum",id:"approach-2-prefix-sum",level:2},{value:"Approach 3: Counting ones and zeros",id:"approach-3-counting-ones-and-zeros",level:2},{value:"Approach 4: Counting ones",id:"approach-4-counting-ones",level:2}];function h(s){const e={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,l.R)(),...s.components},{SolutionAuthor:n}=e;return n||function(s,e){throw new Error("Expected "+(e?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"2155---all-divisions-with-the-highest-score-of-a-binary-array-medium",children:"2155 - All Divisions With the Highest Score of a Binary Array (Medium)"})}),"\n",(0,a.jsx)(e.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/",children:"https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/"})}),"\n",(0,a.jsx)(e.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,a.jsxs)(e.p,{children:["You are given a ",(0,a.jsx)(e.strong,{children:"0-indexed"})," binary array ",(0,a.jsx)(e.code,{children:"nums"})," of length ",(0,a.jsx)(e.code,{children:"n"}),". ",(0,a.jsx)(e.code,{children:"nums"})," can be divided at index ",(0,a.jsx)(e.code,{children:"i"})," (where ",(0,a.jsx)(e.code,{children:"0 <= i <= n)"})," into two arrays (possibly empty) ",(0,a.jsx)(e.code,{children:"nums_left"})," and ",(0,a.jsx)(e.code,{children:"nums_right"}),":"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"numsleft"})," has all the elements of ",(0,a.jsx)(e.code,{children:"nums"})," between index ",(0,a.jsx)(e.code,{children:"0"})," and ",(0,a.jsx)(e.code,{children:"i - 1"})," ",(0,a.jsx)(e.strong,{children:"(inclusive)"}),", while ",(0,a.jsx)(e.code,{children:"numsright"})," has all the elements of nums between index ",(0,a.jsx)(e.code,{children:"i"})," and ",(0,a.jsx)(e.code,{children:"n - 1"})," ",(0,a.jsx)(e.strong,{children:"(inclusive)"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["If ",(0,a.jsx)(e.code,{children:"i == 0"}),", ",(0,a.jsx)(e.code,{children:"nums_left"})," is ",(0,a.jsx)(e.strong,{children:"empty"}),", while ",(0,a.jsx)(e.code,{children:"nums_right"})," has all the elements of ",(0,a.jsx)(e.code,{children:"nums"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["If ",(0,a.jsx)(e.code,{children:"i == n"}),", ",(0,a.jsx)(e.code,{children:"nums_left"})," has all the elements of nums, while ",(0,a.jsx)(e.code,{children:"nums_right"})," is ",(0,a.jsx)(e.strong,{children:"empty"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["The ",(0,a.jsx)(e.strong,{children:"division score"})," of an index ",(0,a.jsx)(e.code,{children:"i"})," is the ",(0,a.jsx)(e.strong,{children:"sum"})," of the number of ",(0,a.jsx)(e.code,{children:"0"}),"'s in ",(0,a.jsx)(e.code,{children:"nums_left"})," and the number of ",(0,a.jsx)(e.code,{children:"1"}),"'s in ",(0,a.jsx)(e.code,{children:"nums_right"}),"."]}),"\n",(0,a.jsxs)(e.p,{children:["Return ",(0,a.jsxs)(e.em,{children:[(0,a.jsx)(e.strong,{children:"all distinct indices"})," that have the ",(0,a.jsx)(e.strong,{children:"highest"})," possible ",(0,a.jsx)(e.strong,{children:"division score"})]}),". You may return the answer in ",(0,a.jsx)(e.strong,{children:"any order"}),"."]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input: nums = [0,0,1,0]\nOutput: [2,4]\nExplanation: Division at index\n- 0: numsleft is []. numsright is [0,0,1,0]. The score is 0 + 1 = 1.\n- 1: numsleft is [0]. numsright is [0,1,0]. The score is 1 + 1 = 2.\n- 2: numsleft is [0,0]. numsright is [1,0]. The score is 2 + 1 = 3.\n- 3: numsleft is [0,0,1]. numsright is [0]. The score is 2 + 0 = 2.\n- 4: numsleft is [0,0,1,0]. numsright is []. The score is 3 + 0 = 3.\nIndices 2 and 4 both have the highest possible division score 3.\nNote the answer [4,2] would also be accepted.\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input: nums = [0,0,0]\nOutput: [3]\nExplanation: Division at index\n- 0: numsleft is []. numsright is [0,0,0]. The score is 0 + 0 = 0.\n- 1: numsleft is [0]. numsright is [0,0]. The score is 1 + 0 = 1.\n- 2: numsleft is [0,0]. numsright is [0]. The score is 2 + 0 = 2.\n- 3: numsleft is [0,0,0]. numsright is []. The score is 3 + 0 = 3.\nOnly index 3 has the highest possible division score 3.\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Example 3:"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Input: nums = [1,1]\nOutput: [0]\nExplanation: Division at index\n- 0: numsleft is []. numsright is [1,1]. The score is 0 + 2 = 2.\n- 1: numsleft is [1]. numsright is [1]. The score is 0 + 1 = 1.\n- 2: numsleft is [1,1]. numsright is []. The score is 0 + 0 = 0.\nOnly index 0 has the highest possible division score 2.\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"n == nums.length"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"1 <= n <= 10^5"})}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"nums[i]"})," is either ",(0,a.jsx)(e.code,{children:"0"})," or ",(0,a.jsx)(e.code,{children:"1"}),"."]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"approach-1-prefix-sum--suffix-sum",children:"Approach 1: Prefix Sum + Suffix Sum"}),"\n",(0,a.jsxs)(e.p,{children:["Calculate the prefix sum and suffix sum first. Then construct the score (",(0,a.jsx)(e.code,{children:"left[i] + right[i]"}),") at each index. Find the maximum value and push all indices with such value into the final array."]}),"\n",(0,a.jsx)(n,{name:"@wingkwong"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<int> maxScoreIndices(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> left(n + 1), right(n + 1), score(n + 1), ans;\n        for (int i = 1; i <= n; i++) left[i] = left[i - 1] + (nums[i - 1] == 0);\n        for (int i = n; i > 0; i--) right[i - 1] = right[i] + (nums[i - 1] == 1);\n        for (int i = 0; i <= n; i++) score[i] = left[i] + right[i];\n        int mx = *max_element(score.begin(), score.end());\n        for (int i = 0; i <= n; i++) if (score[i] == mx) ans.push_back(i);\n        return ans;\n    }\n};\n"})}),"\n",(0,a.jsx)(e.h2,{id:"approach-2-prefix-sum",children:"Approach 2: Prefix Sum"}),"\n",(0,a.jsxs)(e.p,{children:["We don't actually need to calculate suffix sum. Let ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mn,{children:"1"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"left[i + 1]"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord",children:"1"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"})]})]})]})," be ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mi,{children:"u"}),(0,a.jsx)(e.mi,{children:"m"}),(0,a.jsx)(e.mi,{children:"s"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mn,{children:"0"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mi,{children:"u"}),(0,a.jsx)(e.mi,{children:"m"}),(0,a.jsx)(e.mi,{children:"s"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mn,{children:"1"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,a.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,a.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mi,{children:"u"}),(0,a.jsx)(e.mi,{children:"m"}),(0,a.jsx)(e.mi,{children:"s"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"nums[0] + nums[1] + ... + nums[i]"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord",children:"0"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord",children:"1"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(e.span,{className:"mord",children:"..."}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"})]})]})]}),". For each index, there are ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{children:"\u2212"}),(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"i - left[i]"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.7429em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"})]})]})]})," zeros in the left and ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(e.mo,{children:"\u2212"}),(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"left[n] - left[i]"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"})]})]})]})," ones in the right. Therefore, we can come up with this formula: ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{children:"s"}),(0,a.jsx)(e.mi,{children:"c"}),(0,a.jsx)(e.mi,{children:"o"}),(0,a.jsx)(e.mi,{children:"r"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(e.mo,{children:"="}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{children:"\u2212"}),(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(e.mo,{children:"+"}),(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,a.jsx)(e.mo,{children:"\u2212"}),(0,a.jsx)(e.mi,{children:"l"}),(0,a.jsx)(e.mi,{children:"e"}),(0,a.jsx)(e.mi,{children:"f"}),(0,a.jsx)(e.mi,{children:"t"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"["}),(0,a.jsx)(e.mi,{children:"i"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"score[i] = i - left[i] + left[n] - left[i]"})]})})}),(0,a.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"score"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,a.jsx)(e.span,{className:"mrel",children:"="}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"0.7429em",verticalAlign:"-0.0833em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"+"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,a.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,a.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"e"}),(0,a.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"t"}),(0,a.jsx)(e.span,{className:"mopen",children:"["}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,a.jsx)(e.span,{className:"mclose",children:"]"})]})]})]}),"."]}),"\n",(0,a.jsx)(n,{name:"@wingkwong"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<int> maxScoreIndices(vector<int>& nums) {\n        int n = nums.size(), mx = 0;\n        vector<int> left(n + 1), ans;\n        for (int i = 0; i < n; i++) left[i + 1] = left[i] + nums[i];\n        for (int i = 0; i <= n; i++) {\n            int score = i - left[i] + left[n] - left[i];\n            if (score == mx) {\n                ans.push_back(i);\n            } else if (score > mx) {\n                mx = score;\n                ans.clear();\n                ans.push_back(i);\n            }\n        }\n        return ans;\n    }\n};\n"})}),"\n",(0,a.jsx)(e.h2,{id:"approach-3-counting-ones-and-zeros",children:"Approach 3: Counting ones and zeros"}),"\n",(0,a.jsxs)(e.p,{children:["If we look at the last index, we have ",(0,a.jsx)(e.code,{children:"accumulate(nums.begin(), nums.end(), 0)"})," ones and 0 zeros at the beginning. If we move from the right to the left, we can update ",(0,a.jsx)(e.code,{children:"zero"})," and ",(0,a.jsx)(e.code,{children:"one"})," on the fly."]}),"\n",(0,a.jsx)(n,{name:"@wingkwong"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<int> maxScoreIndices(vector<int>& nums) {\n        int n = nums.size(), mx = 0;\n        int one = accumulate(nums.begin(), nums.end(), 0), zero = 0;\n        vector<int> ans;\n        for (int i = 0; i <= n; i++) {\n            int score = zero + one;\n            if (score == mx) {\n                ans.push_back(i);\n            } else if (score > mx) {\n                mx = score;\n                ans.clear();\n                ans.push_back(i);\n            }\n            if (i < n) {\n                one -= nums[i] == 1;\n                zero += nums[i] == 0;\n            }\n        }\n        return ans;\n    }\n};\n"})}),"\n",(0,a.jsx)(e.h2,{id:"approach-4-counting-ones",children:"Approach 4: Counting ones"}),"\n",(0,a.jsx)(e.p,{children:"We can just use one variable instead of two shown in Approach 3."}),"\n",(0,a.jsx)(n,{name:"@wingkwong"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<int> maxScoreIndices(vector<int>& nums) {\n        int n = nums.size();\n        int one = accumulate(nums.begin(), nums.end(), 0), mx = one;\n        vector<int> ans;\n        ans.push_back(0);\n        for (int i = 0; i < n; i++) {\n            one += (nums[i] == 0) - nums[i];\n            if (one == mx) {\n                ans.push_back(i + 1);\n            } else if (one > mx) {\n                mx = one;\n                ans.clear();\n                ans.push_back(i + 1);\n            }\n        }\n        return ans;\n    }\n};\n"})})]})}function o(s={}){const{wrapper:e}={...(0,l.R)(),...s.components};return e?(0,a.jsx)(e,{...s,children:(0,a.jsx)(h,{...s})}):h(s)}},28453:(s,e,n)=>{n.d(e,{R:()=>r,x:()=>m});var i=n(96540);const a={},l=i.createContext(a);function r(s){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function m(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(a):s.components||a:r(s.components),i.createElement(l.Provider,{value:e},s.children)}}}]);