"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[93228],{46524:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"2800-2899/check-if-strings-can-be-made-equal-with-operations-ii-medium","title":"2840 - Check if Strings Can be Made Equal With Operations II (Medium)","description":"Author: @wkw | https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/","source":"@site/solutions/2800-2899/2840-check-if-strings-can-be-made-equal-with-operations-ii-medium.md","sourceDirName":"2800-2899","slug":"/2800-2899/check-if-strings-can-be-made-equal-with-operations-ii-medium","permalink":"/solutions/2800-2899/check-if-strings-can-be-made-equal-with-operations-ii-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2800-2899/2840-check-if-strings-can-be-made-equal-with-operations-ii-medium.md","tags":[],"version":"current","sidebarPosition":2840,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/"},"sidebar":"tutorialSidebar","previous":{"title":"2839 - Check if Strings Can be Made Equal With Operations I (Easy)","permalink":"/solutions/2800-2899/check-if-strings-can-be-made-equal-with-operations-i-easy"},"next":{"title":"2841 - Maximum Sum of Almost Unique Subarray (Medium)","permalink":"/solutions/2800-2899/maximum-sum-of-almost-unique-subarray-medium"}}');var t=s(86070),a=s(32790);const r={description:"Author: @wkw | https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/"},o="2840 - Check if Strings Can be Made Equal With Operations II (Medium)",c={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sorting",id:"approach-1-sorting",level:2}];function d(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{SolutionAuthor:s,TabItem:i,Tabs:r}=n;return s||m("SolutionAuthor",!0),i||m("TabItem",!0),r||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2840---check-if-strings-can-be-made-equal-with-operations-ii-medium",children:"2840 - Check if Strings Can be Made Equal With Operations II (Medium)"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/",children:"https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(n.p,{children:["You are given two strings ",(0,t.jsx)(n.code,{children:"s1"})," and ",(0,t.jsx)(n.code,{children:"s2"}),", both of length ",(0,t.jsx)(n.code,{children:"n"}),", consisting of ",(0,t.jsx)(n.strong,{children:"lowercase"})," English letters."]}),"\n",(0,t.jsxs)(n.p,{children:["You can apply the following operation on ",(0,t.jsx)(n.strong,{children:"any"})," of the two strings ",(0,t.jsx)(n.strong,{children:"any"})," number of times:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Choose any two indices ",(0,t.jsx)(n.code,{children:"i"})," and ",(0,t.jsx)(n.code,{children:"j"})," such that ",(0,t.jsx)(n.code,{children:"i < j"})," and the difference ",(0,t.jsx)(n.code,{children:"j - i"})," is ",(0,t.jsx)(n.strong,{children:"even"}),", then ",(0,t.jsx)(n.strong,{children:"swap"})," the two characters at those indices in the string."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Return ",(0,t.jsx)(n.code,{children:"true"}),(0,t.jsx)(n.em,{children:"if you can make the strings"}),(0,t.jsx)(n.code,{children:"s1"}),(0,t.jsx)(n.em,{children:"and"}),(0,t.jsx)(n.code,{children:"s2"}),(0,t.jsx)(n.em,{children:"equal, and"}),(0,t.jsx)(n.code,{children:"false"}),(0,t.jsx)(n.em,{children:"otherwise"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Input: s1 = "abcdba", s2 = "cabdab"\nOutput: true\nExplanation: We can apply the following operations on s1:\n- Choose the indices i = 0, j = 2. The resulting string is s1 = "cbadba".\n- Choose the indices i = 2, j = 4. The resulting string is s1 = "cbbdaa".\n- Choose the indices i = 1, j = 5. The resulting string is s1 = "cabdab" = s2.\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Input: s1 = "abe", s2 = "bea"\nOutput: false\nExplanation: It is not possible to make the two strings equal.\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"n == s1.length == s2.length"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= n <= 10 ^ 5"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"s1"})," and ",(0,t.jsx)(n.code,{children:"s2"})," consist only of lowercase English letters."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-sorting",children:"Approach 1: Sorting"}),"\n",(0,t.jsxs)(n.p,{children:["We can only swap any characters with the same parity. We can simply sort all characters at even parity and odd parity for ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mn,{children:"1"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"s1"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(n.span,{className:"mord",children:"1"})]})})]})," and ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"s"}),(0,t.jsx)(n.mn,{children:"2"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"s2"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(n.span,{className:"mord",children:"2"})]})})]}),", then compare if they are all same."]}),"\n",(0,t.jsx)(r,{children:(0,t.jsxs)(i,{value:"cpp",label:"C++",children:[(0,t.jsx)(s,{name:"@wkw"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool checkStrings(string s1, string s2) {\n        // put all characters in s1 at even index\n        // put all characters in s1 at odd index\n        vector<int> s1_even, s1_odd;\n        for (int i = 0; i < s1.size(); i++) {\n            if (i % 2 == 0) s1_even.push_back(s1[i]);\n            else s1_odd.push_back(s1[i]);\n        }\n        // sort them\n        sort(s1_even.begin(), s1_even.end());\n        sort(s1_odd.begin(), s1_odd.end());\n\n        // put all characters in s2 at even index\n        // put all characters in s2 at odd index\n        vector<int> s2_even, s2_odd;\n        for (int i = 0; i < s2.size(); i++) {\n            if (i % 2 == 0) s2_even.push_back(s2[i]);\n            else s2_odd.push_back(s2[i]);\n        }\n        // sort them\n        sort(s2_even.begin(), s2_even.end());\n        sort(s2_odd.begin(), s2_odd.end());\n\n        return s1_even == s2_even && s1_odd == s2_odd;\n    }\n};\n"})})]})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(30758);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);