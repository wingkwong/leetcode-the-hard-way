"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[82438],{59419:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>a,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"1200-1299/ugly-number-iii-medium","title":"1201 - Ugly Number III (Medium)","description":"Author: @wkw | https://leetcode.com/problems/ugly-number-iii/","source":"@site/solutions/1200-1299/1201-ugly-number-iii-medium.md","sourceDirName":"1200-1299","slug":"/1200-1299/ugly-number-iii-medium","permalink":"/solutions/1200-1299/ugly-number-iii-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1200-1299/1201-ugly-number-iii-medium.md","tags":[],"version":"current","sidebarPosition":1201,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/ugly-number-iii/"},"sidebar":"tutorialSidebar","previous":{"title":"1200 - 1299","permalink":"/solutions/category/1200---1299"},"next":{"title":"1202 - Smallest String With Swaps (Medium)","permalink":"/solutions/1200-1299/smallest-string-with-swaps-medium"}}');var l=i(86070),t=i(32790);const c={description:"Author: @wkw | https://leetcode.com/problems/ugly-number-iii/"},o="1201 - Ugly Number III (Medium)",s={},d=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Inclusive-Exclusive + Binary Search",id:"approach-1-inclusive-exclusive--binary-search",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{SolutionAuthor:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"1201---ugly-number-iii-medium",children:"1201 - Ugly Number III (Medium)"})}),"\n",(0,l.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://leetcode.com/problems/ugly-number-iii/",children:"https://leetcode.com/problems/ugly-number-iii/"})}),"\n",(0,l.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,l.jsxs)(n.p,{children:["An ",(0,l.jsx)(n.strong,{children:"ugly number"})," is a positive integer that is divisible by ",(0,l.jsx)(n.code,{children:"a"}),", ",(0,l.jsx)(n.code,{children:"b"}),", or ",(0,l.jsx)(n.code,{children:"c"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Given four integers ",(0,l.jsx)(n.code,{children:"n"}),", ",(0,l.jsx)(n.code,{children:"a"}),", ",(0,l.jsx)(n.code,{children:"b"}),", and ",(0,l.jsx)(n.code,{children:"c"}),", return the ",(0,l.jsx)(n.code,{children:"nth"})," ",(0,l.jsx)(n.strong,{children:"ugly number"}),"."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Input: n = 3, a = 2, b = 3, c = 5\nOutput: 4\nExplanation: The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd is 4.\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Input: n = 4, a = 2, b = 3, c = 4\nOutput: 6\nExplanation: The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th is 6.\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Input: n = 5, a = 2, b = 11, c = 13\nOutput: 10\nExplanation: The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5th is 10.\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"1 <= n, a, b, c <= 10^9"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"1 <= a * b * c <= 10^18"})}),"\n",(0,l.jsxs)(n.li,{children:["It is guaranteed that the result will be in range ",(0,l.jsx)(n.code,{children:"[1, 2 * 10^9]"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"approach-1-inclusive-exclusive--binary-search",children:"Approach 1: Inclusive-Exclusive + Binary Search"}),"\n",(0,l.jsx)(i,{name:"@wkw"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int ok(long long n, long long a, long long b, long long c) {\n        // numbers (1 to n) divisble by a = n / a\n        // numbers (1 to n) divisble by b = n / b\n        // numbers (1 to n) divisble by c = n / c\n        // exclude overlapping counts for a and b = n / lcm(a, b)\n        // exclude overlapping counts for b and c = n / lcm(b, c)\n        // exclude overlapping counts for a and c = n / lcm(a, c)\n        // include those covered by all a, b and c = n / lcm(a, lcm(b, c))\n\n        // Set theory Formula:\n        // a + b + c - a \u2229 c - a \u2229 b - b \u2229 c + a \u2229 b \u2229 c\n        return (int) n / a + n / b + n / c\n        - n / lcm(a, b)\n        - n / lcm(b, c)\n        - n / lcm(a, c)\n        + n / lcm(a, lcm(b, c));\n    }\n\n    int nthUglyNumber(int n, int a, int b, int c) {\n        // init possible range [1, 2 * 10 ^ 9]\n        int l = 1, r = 2e9;\n        while (l < r) {\n            // get the middle one\n            // for even number of elements, take the lower one\n            int m = l + (r - l) / 2;\n            // exclude m\n            if (n > ok(m, a, b, c)) l = m + 1;\n            // include m\n            else r = m;\n        }\n        return l;\n    }\n};\n"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},32790:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var r=i(30758);const l={},t=r.createContext(l);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);