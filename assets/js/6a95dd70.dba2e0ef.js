"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[1143],{25765:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"0000-0099/search-a-2d-matrix-medium","title":"0074 - Search a 2D Matrix (Medium)","description":"Author: @wkw, @ganajayant, @radojicic23| https://leetcode.com/problems/search-a-2d-matrix/","source":"@site/solutions/0000-0099/0074-search-a-2d-matrix-medium.md","sourceDirName":"0000-0099","slug":"/0000-0099/search-a-2d-matrix-medium","permalink":"/solutions/0000-0099/search-a-2d-matrix-medium","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0000-0099/0074-search-a-2d-matrix-medium.md","tags":[{"inline":true,"label":"Array","permalink":"/solutions/tags/array"},{"inline":true,"label":"Binary Search","permalink":"/solutions/tags/binary-search"},{"inline":true,"label":"Matrix","permalink":"/solutions/tags/matrix"}],"version":"current","sidebarPosition":74,"frontMatter":{"description":"Author: @wkw, @ganajayant, @radojicic23| https://leetcode.com/problems/search-a-2d-matrix/","tags":["Array","Binary Search","Matrix"]},"sidebar":"tutorialSidebar","previous":{"title":"0073 - Set Matrix Zeroes (Medium)","permalink":"/solutions/0000-0099/set-matrix-zeroes-medium"},"next":{"title":"0075 - Sort Colors (Medium)","permalink":"/solutions/0000-0099/sort-colors-medium"}}');var i=n(86070),a=n(32790);const o={description:"Author: @wkw, @ganajayant, @radojicic23| https://leetcode.com/problems/search-a-2d-matrix/",tags:["Array","Binary Search","Matrix"]},l="0074 - Search a 2D Matrix (Medium)",s={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Searching Row &amp; Column",id:"approach-1-searching-row--column",level:2},{value:"Approach 2: Binary Search",id:"approach-2-binary-search",level:2}];function m(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{SolutionAuthor:n,TabItem:r,Tabs:o}=t;return n||d("SolutionAuthor",!0),r||d("TabItem",!0),o||d("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"0074---search-a-2d-matrix-medium",children:"0074 - Search a 2D Matrix (Medium)"})}),"\n",(0,i.jsx)(t.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://leetcode.com/problems/search-a-2d-matrix/",children:"https://leetcode.com/problems/search-a-2d-matrix/"})}),"\n",(0,i.jsx)(t.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(t.p,{children:["Write an efficient algorithm that searches for a value ",(0,i.jsx)(t.code,{children:"target"})," in an ",(0,i.jsx)(t.code,{children:"m x n"})," integer matrix ",(0,i.jsx)(t.code,{children:"matrix"}),". This matrix has the following properties:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Integers in each row are sorted from left to right."}),"\n",(0,i.jsx)(t.li,{children:"The first integer of each row is greater than the last integer of the previous row."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\nOutput: true\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\nOutput: false\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"m == matrix.length"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"n == matrix[i].length"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"1 <= m, n <= 100"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"-10^4 <= matrix[i][j], target <= 10^4"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"approach-1-searching-row--column",children:"Approach 1: Searching Row & Column"}),"\n",(0,i.jsxs)(o,{children:[(0,i.jsxs)(r,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@wkw"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int n = matrix.size(), m = matrix[0].size();\n        int targetRow = 0;\n        // search for the target row\n        for (int row = 0; row < n; row++) {\n            // target should be within [matrix[row][0] .. matrix[row][m - 1]]\n            if (matrix[row][0] <= target && target <= matrix[row][m - 1]) {\n                // target row is found\n                targetRow = row;\n                break;\n            }\n        }\n        // then search for the target col\n        for (int col = 0; col < m; col++) {\n            if (matrix[targetRow][col] == target) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n"})})]}),(0,i.jsxs)(r,{value:"py",label:"Python",children:[(0,i.jsx)(n,{name:"@radojicic23"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-py",children:"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        rows, cols = len(matrix), len(matrix[0])\n        r = 0\n        for i in range(rows):\n            if target >= matrix[i][0] and target <= matrix[i][-1]:\n                r = i\n                break\n        for i in range(cols):\n            if (matrix[r][i] == target):\n                return True\n        return False\n"})})]}),(0,i.jsxs)(r,{value:"js",label:"JavaScript",children:[(0,i.jsx)(n,{name:"@radojicic23"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\nvar searchMatrix = function (matrix, target) {\n  let rows = matrix.length,\n    cols = matrix[0].length;\n  let r = 0;\n  for (let i = 0; i < rows; i++) {\n    if (target >= matrix[i][0] && target <= matrix[i][cols - 1]) {\n      r = i;\n      break;\n    }\n  }\n  for (let i = 0; i < cols; i++) {\n    if (matrix[r][i] == target) {\n      return true;\n    }\n  }\n  return false;\n};\n"})})]})]}),"\n",(0,i.jsx)(t.h2,{id:"approach-2-binary-search",children:"Approach 2: Binary Search"}),"\n",(0,i.jsx)(t.p,{children:"Find which row and coloumn the element belongs to by using Binary Search"}),"\n",(0,i.jsxs)(o,{children:[(0,i.jsxs)(r,{value:"java",label:"Java",children:[(0,i.jsx)(n,{name:"@ganajayant"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        for (int i = 0; i < matrix.length; i++) {\n            int low = 0;\n            int high = matrix[i].length - 1;\n            while (low <= high) {\n                int mid = (low + high) / 2;\n                if (matrix[i][mid] == target) {\n                    return true;\n                } else if (matrix[i][mid] > target) {\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            }\n        }\n        return false;\n    }\n}\n"})})]}),(0,i.jsxs)(r,{value:"python",label:"Python",children:[(0,i.jsx)(n,{name:"@radojicic23"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Time Complexity: O(log n)\n# Space Complexity: O(1)\nclass Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        # initialize rows and cols\n        rows, cols = len(matrix), len(matrix[0])\n        # top row and bottom row\n        top, bot = 0, rows - 1\n\n        # binary search\n        while top <= bot:\n            # compute the middle row\n            mid = (top + bot) // 2\n            # if this target value is greater then\n            # the largest value in the middle row\n            if target > matrix[mid][-1]:\n                # look at rows with larger value\n                top = mid + 1\n            # if this target value is smaller then\n            # the smallest value in this row\n            elif target < matrix[mid][0]:\n                # look at rows with smaller value\n                bot = mid - 1\n            else:\n                break\n\n        if not (top <= bot):\n            return False\n\n        # second binary search portion\n        # run binary search on the current (middle row)\n        mid = (top + bot) // 2\n        # leftmost value and rightmost value\n        l, r = 0, cols - 1\n        while l <= r:\n            # compute the middle value\n            m = (l + r) // 2\n            if target > matrix[mid][m]:\n                l = m + 1\n            elif target < matrix[mid][m]:\n                r = m - 1\n            else:\n                return True\n\n        return False\n"})})]}),(0,i.jsxs)(r,{value:"js",label:"JavaScript",children:[(0,i.jsx)(n,{name:"@radojicic23"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"/**\n * @param {number[][]} matrix\n * @param {number} target\n * @return {boolean}\n */\nvar searchMatrix = function (matrix, target) {\n  let row = matrix.length;\n  let col = matrix[0].length;\n  let top = 0;\n  let bottom = row - 1;\n  while (top <= bottom) {\n    let mid = Math.floor((top + bottom) / 2);\n    if (target > matrix[mid][col - 1]) {\n      top = mid + 1;\n    } else if (target < matrix[mid][0]) {\n      bottom = mid - 1;\n    } else {\n      break;\n    }\n  }\n  if (!(top <= bottom)) {\n    return false;\n  }\n  let l = 0;\n  let r = col - 1;\n  let mid = Math.floor((top + bottom) / 2);\n  while (l <= r) {\n    let m = Math.floor((l + r) / 2);\n    if (target > matrix[mid][m]) {\n      l = m + 1;\n    } else if (target < matrix[mid][m]) {\n      r = m - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n};\n"})})]}),(0,i.jsxs)(r,{value:"cpp",label:"C++",children:[(0,i.jsx)(n,{name:"@radojicic23"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int rows = matrix.size(), cols = matrix[0].size();\n        int top = 0, bottom = rows - 1;\n        while (top <= bottom) {\n            int mid = top + (bottom - top) / 2;\n            if (target > matrix[mid][cols - 1]) {\n                top = mid + 1;\n            } else if (target < matrix[mid][0]) {\n                bottom = mid - 1;\n            } else {\n                break;\n            }\n        }\n        if (!(top <= bottom)) {\n            return false;\n        }\n        int mid = top + (bottom - top) / 2;\n        int left = 0, right = cols - 1;\n        while (left <= right) {\n            int m = left + (right - left) / 2;\n            if (target > matrix[mid][m]) {\n                left = m + 1;\n            } else if (target < matrix[mid][m]) {\n                right = m - 1;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n"})})]})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}function d(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},32790:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var r=n(30758);const i={},a=r.createContext(i);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);