"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[20041],{83961:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy","title":"2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)","description":"Author: @wkw | https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/","source":"@site/solutions/2300-2399/2379-minimum-recolors-to-get-k-consecutive-black-blocks-easy.md","sourceDirName":"2300-2399","slug":"/2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy","permalink":"/solutions/2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2379-minimum-recolors-to-get-k-consecutive-black-blocks-easy.md","tags":[],"version":"current","sidebarPosition":2379,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/"},"sidebar":"tutorialSidebar","previous":{"title":"2376 - Count Special Integers (Hard)","permalink":"/solutions/2300-2399/count-special-integers-hard"},"next":{"title":"2380 - Time Needed to Rearrange a Binary String (Medium)","permalink":"/solutions/2300-2399/time-needed-to-rearrange-a-binary-string-medium"}}');var c=o(86070),s=o(68906);const r={description:"Author: @wkw | https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/"},i="2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)",l={},a=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Brute Force",id:"approach-1-brute-force",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SolutionAuthor:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"2379---minimum-recolors-to-get-k-consecutive-black-blocks-easy",children:"2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)"})}),"\n",(0,c.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,c.jsxs)(n.p,{children:["You are given a ",(0,c.jsx)(n.strong,{children:"0-indexed"})," string ",(0,c.jsx)(n.code,{children:"blocks"})," of length ",(0,c.jsx)(n.code,{children:"n"}),", where ",(0,c.jsx)(n.code,{children:"blocks[i]"})," is either ",(0,c.jsx)(n.code,{children:"'W'"})," or ",(0,c.jsx)(n.code,{children:"'B'"}),", representing the color of the ",(0,c.jsx)(n.code,{children:"ith"})," block. The characters ",(0,c.jsx)(n.code,{children:"'W'"})," and ",(0,c.jsx)(n.code,{children:"'B'"})," denote the colors white and black, respectively."]}),"\n",(0,c.jsxs)(n.p,{children:["You are also given an integer ",(0,c.jsx)(n.code,{children:"k"}),", which is the desired number of ",(0,c.jsx)(n.strong,{children:"consecutive"})," black blocks."]}),"\n",(0,c.jsxs)(n.p,{children:["In one operation, you can ",(0,c.jsx)(n.strong,{children:"recolor"})," a white block such that it becomes a black block."]}),"\n",(0,c.jsxs)(n.p,{children:["Return",(0,c.jsxs)(n.em,{children:["the ",(0,c.jsx)(n.strong,{children:"minimum"})," number of operations needed such that there is at least ",(0,c.jsx)(n.strong,{children:"one"})," occurrence of"]}),(0,c.jsx)(n.code,{children:"k"}),(0,c.jsx)(n.em,{children:"consecutive black blocks."})]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'Input: blocks = "WBBWWBBWBW", k = 7\nOutput: 3\nExplanation:\nOne way to achieve 7 consecutive black blocks is to recolor the 0th, 3rd, and 4th blocks\nso that blocks = "BBBBBBBWBW".\nIt can be shown that there is no way to achieve 7 consecutive black blocks in less than 3 operations.\nTherefore, we return 3.\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'Input: blocks = "WBWBBBW", k = 2\nOutput: 0\nExplanation:\nNo changes need to be made, since 2 consecutive black blocks already exist.\nTherefore, we return 0.\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"n == blocks.length"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"1 <= n <= 100"})}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"blocks[i]"})," is either ",(0,c.jsx)(n.code,{children:"'W'"})," or ",(0,c.jsx)(n.code,{children:"'B'"}),"."]}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"1 <= k <= n"})}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"approach-1-brute-force",children:"Approach 1: Brute Force"}),"\n",(0,c.jsx)(o,{name:"@wkw"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int minimumRecolors(string blocks, int k) {\n        int n = blocks.size(), ans = 1e9;\n\t\t// the idea is to try all positions as a starting point\n        for (int i = 0; i + k <= n; i++) {\n\t\t    // count the number of 'W' in a given window size `k`\n            int cnt = 0;\n            for (int j = 0; j < k; j++) {\n\t\t\t    // if it is 'W', we can recolor it\n                if (blocks[i + j] == 'W') {\n                    cnt += 1;\n                }\n            }\n            // keep track of the min value\n            ans = min(ans, cnt);\n        }\n        return ans;\n    }\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},68906:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var t=o(30758);const c={},s=t.createContext(c);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);