"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[65727],{70137:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"1500-1599/can-make-arithmetic-progression-from-sequence-easy","title":"1502 - Can Make Arithmetic Progression From Sequence (Easy)","description":"Author: @wkw | https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/","source":"@site/solutions/1500-1599/1502-can-make-arithmetic-progression-from-sequence-easy.md","sourceDirName":"1500-1599","slug":"/1500-1599/can-make-arithmetic-progression-from-sequence-easy","permalink":"/solutions/1500-1599/can-make-arithmetic-progression-from-sequence-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1500-1599/1502-can-make-arithmetic-progression-from-sequence-easy.md","tags":[],"version":"current","sidebarPosition":1502,"frontMatter":{"description":"Author: @wkw | https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/"},"sidebar":"tutorialSidebar","previous":{"title":"1500 - 1599","permalink":"/solutions/category/1500---1599"},"next":{"title":"1510 - Stone Game IV (Hard)","permalink":"/solutions/1500-1599/stone-game-iv-hard"}}');var s=r(86070),o=r(68906);const i={description:"Author: @wkw | https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/"},a="1502 - Can Make Arithmetic Progression From Sequence (Easy)",c={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sorting",id:"approach-1-sorting",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{SolutionAuthor:r,TabItem:t,Tabs:i}=n;return r||m("SolutionAuthor",!0),t||m("TabItem",!0),i||m("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"1502---can-make-arithmetic-progression-from-sequence-easy",children:"1502 - Can Make Arithmetic Progression From Sequence (Easy)"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/",children:"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(n.p,{children:["A sequence of numbers is called an ",(0,s.jsx)(n.strong,{children:"arithmetic progression"})," if the difference between any two consecutive elements is the same."]}),"\n",(0,s.jsxs)(n.p,{children:["Given an array of numbers ",(0,s.jsx)(n.code,{children:"arr"}),", return ",(0,s.jsx)(n.code,{children:"true"})," ",(0,s.jsxs)(n.em,{children:["if the array can be rearranged to form an ",(0,s.jsx)(n.strong,{children:"arithmetic progression"}),". Otherwise, return"]})," ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: arr = [3,5,1]\nOutput: true\nExplanation: We can reorder the elements as [1,3,5] or [5,3,1] with differences 2 and -2 respectively, between each consecutive elements.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: arr = [1,2,4]\nOutput: false\nExplanation: There is no way to reorder the elements to obtain an arithmetic progression.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"2 <= arr.length <= 1000"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"-10^6 <= arr[i] <= 10^6"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"approach-1-sorting",children:"Approach 1: Sorting"}),"\n",(0,s.jsx)(n.p,{children:"We sort the array and calculate the first difference. Iterate the rest of the elements to check if they have the same difference between two elements."}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsxs)(t,{value:"cpp",label:"C++",children:[(0,s.jsx)(r,{name:"@wkw"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool canMakeArithmeticProgression(vector<int>& arr) {\n        // reorder first\n        sort(arr.begin(), arr.end());\n        // calculate the first difference\n        int d = arr[1] - arr[0];\n        // check the rest of the differences\n        // if there is a new difference, then it is false\n        // else it is true\n        for (int i = 2; i < arr.size(); i++) {\n            if (arr[i] - arr[i - 1] != d) {\n                return false;\n            }\n        }\n        return true;\n    }\n};\n"})})]}),(0,s.jsxs)(t,{value:"rs",label:"Rust",children:[(0,s.jsx)(r,{name:"@wkw"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rs",children:"impl Solution {\n    pub fn can_make_arithmetic_progression(mut arr: Vec<i32>) -> bool {\n\t\t// sort the arr first\n        arr.sort();\n\t\t// then we focus on a window of size of 3\n        for w in arr.windows(3) {\n\t\t\t// check if the difference between w[0] and w[1] and that between w[1] and w[2]  is same\n\t\t\t// if not, then we cannot make an AP\n            if w[2] - w[1] != w[1] - w[0] {\n                return false;\n            }\n        }\n        true\n    }\n}\n"})})]})]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68906:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(30758);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);