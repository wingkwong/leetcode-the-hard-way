"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[64464],{60521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"1700-1799/sum-of-unique-elements-easy","title":"1748 - Sum of Unique Elements (Easy)","description":"Author: @wingkwong | https://leetcode.com/problems/sum-of-unique-elements/","source":"@site/solutions/1700-1799/1748-sum-of-unique-elements-easy.md","sourceDirName":"1700-1799","slug":"/1700-1799/sum-of-unique-elements-easy","permalink":"/solutions/1700-1799/sum-of-unique-elements-easy","draft":false,"unlisted":false,"editUrl":"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1700-1799/1748-sum-of-unique-elements-easy.md","tags":[{"inline":true,"label":"Hash Map","permalink":"/solutions/tags/hash-map"}],"version":"current","sidebarPosition":1748,"frontMatter":{"description":"Author: @wingkwong | https://leetcode.com/problems/sum-of-unique-elements/","tags":["Hash Map"]},"sidebar":"tutorialSidebar","previous":{"title":"1727 - Largest Submatrix With Rearrangements (Medium)","permalink":"/solutions/1700-1799/largest-submatrix-with-rearrangements-medium"},"next":{"title":"1751 - Maximum Number of Events That Can Be Attended II (Hard)","permalink":"/solutions/1700-1799/maximum-number-of-events-that-can-be-attended-ii-hard"}}');var r=t(74848),o=t(28453);const i={description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-unique-elements/",tags:["Hash Map"]},a="1748 - Sum of Unique Elements (Easy)",l={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Hash Map",id:"approach-1-hash-map",level:2}];function m(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{SolutionAuthor:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"1748---sum-of-unique-elements-easy",children:"1748 - Sum of Unique Elements (Easy)"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/sum-of-unique-elements/",children:"https://leetcode.com/problems/sum-of-unique-elements/"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["You are given an integer array ",(0,r.jsx)(n.code,{children:"nums"}),". The unique elements of an array are the elements that appear ",(0,r.jsx)(n.strong,{children:"exactly once"})," in the array."]}),"\n",(0,r.jsxs)(n.p,{children:["Return ",(0,r.jsxs)(n.em,{children:["the ",(0,r.jsx)(n.strong,{children:"sum"})," of all the unique elements of"]})," ",(0,r.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [1,2,3,2]\nOutput: 4\nExplanation: The unique elements are [1,3], and the sum is 4.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [1,1,1,1,1]\nOutput: 0\nExplanation: There are no unique elements, and the sum is 0.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [1,2,3,4,5]\nOutput: 15\nExplanation: The unique elements are [1,2,3,4,5], and the sum is 15.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums.length <= 100"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums[i] <= 100"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-hash-map",children:"Approach 1: Hash Map"}),"\n",(0,r.jsx)(t,{name:"@wingkwong"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int sumOfUnique(vector<int>& nums) {\n        unordered_map<int, int> m;\n        int ans = 0;\n        // use hash map to count the frequency of each number\n        for(int x : nums) m[x]++;\n        // unique number would have frequency of 1\n        for(auto x : m) {\n            if(x.second == 1) {\n                ans += x.first;\n            }\n        }\n        return ans;\n    }\n};\n"})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);